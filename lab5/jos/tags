!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon2
ALT	kern/console.c	223;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
ARRAY_SIZE	inc/types.h	70;"	d
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/fs/fs.asm	/^#define ASM 1$/;"	d
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/cat.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echo.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultio.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/icode.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/init.asm	/^#define ASM 1$/;"	d
ASM	obj/user/ls.asm	/^#define ASM 1$/;"	d
ASM	obj/user/lsfd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/num.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primespipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sh.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spawnfaultio.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spawnhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfdsharing.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfile.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testkbd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpteshare.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testshell.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
Argstate	inc/args.h	/^struct Argstate {$/;"	s
Argstate::argc	inc/args.h	/^	int *argc;$/;"	m	struct:Argstate	access:public
Argstate::argv	inc/args.h	/^	const char **argv;$/;"	m	struct:Argstate	access:public
Argstate::argvalue	inc/args.h	/^	const char *argvalue;$/;"	m	struct:Argstate	access:public
Argstate::curarg	inc/args.h	/^	const char *curarg;$/;"	m	struct:Argstate	access:public
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	28;"	d	file:
BLKBITSIZE	inc/fs.h	13;"	d
BLKFILES	inc/fs.h	45;"	d
BLKSECTS	fs/fs.h	5;"	d
BLKSIZE	inc/fs.h	12;"	d
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/sh.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/testkbd.asm	/^#define BUFLEN 1024$/;"	d
BUFSIZ	user/sh.c	3;"	d	file:
BUSY	kern/lapic.c	30;"	d	file:
C	kern/console.c	290;"	d	file:
CAPSLOCK	kern/console.c	225;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	15;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	28;"	d	file:
COM_DLL	kern/console.c	32;"	d	file:
COM_DLM	kern/console.c	33;"	d	file:
COM_FCR	kern/console.c	37;"	d	file:
COM_IER	kern/console.c	34;"	d	file:
COM_IER_RDI	kern/console.c	35;"	d	file:
COM_IIR	kern/console.c	36;"	d	file:
COM_LCR	kern/console.c	38;"	d	file:
COM_LCR_DLAB	kern/console.c	39;"	d	file:
COM_LCR_WLEN8	kern/console.c	40;"	d	file:
COM_LSR	kern/console.c	45;"	d	file:
COM_LSR_DATA	kern/console.c	46;"	d	file:
COM_LSR_TSRE	kern/console.c	48;"	d	file:
COM_LSR_TXRDY	kern/console.c	47;"	d	file:
COM_MCR	kern/console.c	41;"	d	file:
COM_MCR_DTR	kern/console.c	43;"	d	file:
COM_MCR_OUT2	kern/console.c	44;"	d	file:
COM_MCR_RTS	kern/console.c	42;"	d	file:
COM_RX	kern/console.c	30;"	d	file:
COM_TX	kern/console.c	31;"	d	file:
CONSBUFSIZE	kern/console.c	393;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon4
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon4
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon4
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	222;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Command::desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
Command::func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
Command::name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
CpuInfo::cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env	access:public
CpuInfo::cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo	access:public
CpuInfo::cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo	access:public
CpuInfo::cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate	access:public
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
DISKMAP	fs/fs.h	9;"	d
DISKSIZE	fs/fs.h	12;"	d
Dev	inc/fd.h	/^struct Dev {$/;"	s
Dev::dev_close	inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev	access:public
Dev::dev_id	inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev	access:public
Dev::dev_name	inc/fd.h	/^	const char *dev_name;$/;"	m	struct:Dev	access:public
Dev::dev_read	inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev	access:public
Dev::dev_stat	inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev	access:public
Dev::dev_trunc	inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev	access:public
Dev::dev_write	inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev	access:public
Dir	fs/fsformat.c	/^struct Dir$/;"	s	file:
Dir::ents	fs/fsformat.c	/^	struct File *ents;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:	access:public
Dir::f	fs/fsformat.c	/^	struct File *f;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:	access:public
Dir::n	fs/fsformat.c	/^	int n;$/;"	m	struct:Dir	file:	access:public
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/fs/fs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultio.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/icode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/lsfd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/num.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primespipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spawnfaultio.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spawnhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfdsharing.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfile.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testkbd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpteshare.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testshell.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f	access:public
E0ESC	kern/console.c	229;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon8
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon8
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon8
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon8
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon8
ENV_TYPE_FS	inc/env.h	/^	ENV_TYPE_FS,		\/\/ File system server$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon10
E_BAD_PATH	inc/error.h	/^	E_BAD_PATH	,	\/\/ Bad path$/;"	e	enum:__anon10
E_EOF	inc/error.h	/^	E_EOF		,	\/\/ Unexpected end of file$/;"	e	enum:__anon10
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon10
E_FILE_EXISTS	inc/error.h	/^	E_FILE_EXISTS	,	\/\/ File already exists$/;"	e	enum:__anon10
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon10
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon10
E_MAX_OPEN	inc/error.h	/^	E_MAX_OPEN	,	\/\/ Too many files are open$/;"	e	enum:__anon10
E_NOT_EXEC	inc/error.h	/^	E_NOT_EXEC	,	\/\/ File not a valid executable$/;"	e	enum:__anon10
E_NOT_FOUND	inc/error.h	/^	E_NOT_FOUND	, 	\/\/ File or block not found$/;"	e	enum:__anon10
E_NOT_SUPP	inc/error.h	/^	E_NOT_SUPP	,	\/\/ Operation not supported$/;"	e	enum:__anon10
E_NO_DISK	inc/error.h	/^	E_NO_DISK	,	\/\/ No free space left on disk$/;"	e	enum:__anon10
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon10
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon10
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon10
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Eipdebuginfo::eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
Elf	inc/elf.h	/^struct Elf {$/;"	s
Elf::e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
Elf::e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
Elf::e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
Elf::e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
Elf::e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
Elf::e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
Elf::e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
Elf::e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
Elf::e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
Elf::e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
Elf::e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
Elf::e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
Elf::e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
Elf::e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
Elf::e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
Env	inc/env.h	/^struct Env {$/;"	s
Env::env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env	access:public
Env::env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env	access:public
Env::env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env	access:public
Env::env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env	access:public
Env::env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env	access:public
Env::env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env	access:public
Env::env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env	access:public
Env::env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env	access:public
Env::env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env	access:public
Env::env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env	access:public
Env::env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env	access:public
Env::env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env	access:public
Env::env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env	access:public
Env::env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe	access:public
Env::env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType	access:public
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FDTABLE	lib/fd.c	8;"	d	file:
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FILEDATA	lib/fd.c	11;"	d	file:
FILEVA	fs/serv.c	41;"	d	file:
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
FSREQ_FLUSH	inc/fs.h	/^	FSREQ_FLUSH,$/;"	e	enum:__anon6
FSREQ_OPEN	inc/fs.h	/^	FSREQ_OPEN = 1,$/;"	e	enum:__anon6
FSREQ_READ	inc/fs.h	/^	FSREQ_READ,$/;"	e	enum:__anon6
FSREQ_REMOVE	inc/fs.h	/^	FSREQ_REMOVE,$/;"	e	enum:__anon6
FSREQ_SET_SIZE	inc/fs.h	/^	FSREQ_SET_SIZE,$/;"	e	enum:__anon6
FSREQ_STAT	inc/fs.h	/^	FSREQ_STAT,$/;"	e	enum:__anon6
FSREQ_SYNC	inc/fs.h	/^	FSREQ_SYNC$/;"	e	enum:__anon6
FSREQ_WRITE	inc/fs.h	/^	FSREQ_WRITE,$/;"	e	enum:__anon6
FS_MAGIC	inc/fs.h	54;"	d
FTYPE_DIR	inc/fs.h	49;"	d
FTYPE_REG	inc/fs.h	48;"	d
FVA	obj/user/testfile.asm	/^#define FVA ((struct Fd*)0xCCCCC000)$/;"	d
FVA	user/testfile.c	5;"	d	file:
Fd	inc/fd.h	/^struct Fd {$/;"	s
Fd::__anon9::fd_file	inc/fd.h	/^		struct FdFile fd_file;$/;"	m	union:Fd::__anon9	typeref:struct:Fd::__anon9::FdFile	access:public
Fd::fd_dev_id	inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd	access:public
Fd::fd_offset	inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd	access:public
Fd::fd_omode	inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd	access:public
FdFile	inc/fd.h	/^struct FdFile {$/;"	s
FdFile::id	inc/fd.h	/^	int id;$/;"	m	struct:FdFile	access:public
File	inc/fs.h	/^struct File {$/;"	s
File::f_direct	inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File	access:public
File::f_indirect	inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File	access:public
File::f_name	inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File	access:public
File::f_pad	inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File	access:public
File::f_size	inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File	access:public
File::f_type	inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File	access:public
Fsipc	inc/fs.h	/^union Fsipc {$/;"	u
Fsipc::Fsreq_flush	inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc	access:public
Fsipc::Fsreq_flush::req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush	access:public
Fsipc::Fsreq_open	inc/fs.h	/^	struct Fsreq_open {$/;"	s	union:Fsipc	access:public
Fsipc::Fsreq_open::req_omode	inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open	access:public
Fsipc::Fsreq_open::req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open	access:public
Fsipc::Fsreq_read	inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc	access:public
Fsipc::Fsreq_read::req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_read	access:public
Fsipc::Fsreq_read::req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_read	access:public
Fsipc::Fsreq_remove	inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc	access:public
Fsipc::Fsreq_remove::req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove	access:public
Fsipc::Fsreq_set_size	inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc	access:public
Fsipc::Fsreq_set_size::req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size	access:public
Fsipc::Fsreq_set_size::req_size	inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size	access:public
Fsipc::Fsreq_stat	inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc	access:public
Fsipc::Fsreq_stat::req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat	access:public
Fsipc::Fsreq_write	inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc	access:public
Fsipc::Fsreq_write::req_buf	inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write	access:public
Fsipc::Fsreq_write::req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write	access:public
Fsipc::Fsreq_write::req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write	access:public
Fsipc::Fsret_read	inc/fs.h	/^	struct Fsret_read {$/;"	s	union:Fsipc	access:public
Fsipc::Fsret_read::ret_buf	inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read	access:public
Fsipc::Fsret_stat	inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc	access:public
Fsipc::Fsret_stat::ret_isdir	inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat	access:public
Fsipc::Fsret_stat::ret_name	inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat	access:public
Fsipc::Fsret_stat::ret_size	inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat	access:public
Fsipc::_pad	inc/fs.h	/^	char _pad[PGSIZE];$/;"	m	union:Fsipc	access:public
Fsipc::flush	inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush	access:public
Fsipc::open	inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open	access:public
Fsipc::read	inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read	access:public
Fsipc::readRet	inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read	access:public
Fsipc::remove	inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove	access:public
Fsipc::set_size	inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size	access:public
Fsipc::stat	inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat	access:public
Fsipc::statRet	inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat	access:public
Fsipc::write	inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write	access:public
Fsreq_flush	inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc	access:public
Fsreq_open	inc/fs.h	/^	struct Fsreq_open {$/;"	s	union:Fsipc	access:public
Fsreq_read	inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc	access:public
Fsreq_remove	inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc	access:public
Fsreq_set_size	inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc	access:public
Fsreq_stat	inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc	access:public
Fsreq_write	inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc	access:public
Fsret_read	inc/fs.h	/^	struct Fsret_read {$/;"	s	union:Fsipc	access:public
Fsret_stat	inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc	access:public
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDB	GNUmakefile	/^GDB	:= $(GCCPREFIX)gdb$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c	inherits:object
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
Gatedesc::gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IDE_BSY	fs/ide.c	10;"	d	file:
IDE_DF	fs/ide.c	12;"	d	file:
IDE_DRDY	fs/ide.c	11;"	d	file:
IDE_ERR	fs/ide.c	13;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INDEX2DATA	lib/fd.c	16;"	d	file:
INDEX2FD	lib/fd.c	14;"	d	file:
INIT	kern/lapic.c	22;"	d	file:
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ARGS_H	inc/args.h	2;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_FD_H	inc/fd.h	6;"	d
JOS_INC_FS_H	inc/fs.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_PARTITION_H	inc/partition.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	fs/fsformat.c	25;"	d	file:
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=5$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	88;"	d	file:
MAXARGS	obj/user/sh.asm	/^#define MAXARGS 16$/;"	d
MAXARGS	user/sh.c	20;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon10
MAXFD	lib/fd.c	6;"	d	file:
MAXFILESIZE	inc/fs.h	27;"	d
MAXNAMELEN	inc/fs.h	17;"	d
MAXOPEN	fs/serv.c	40;"	d	file:
MAXPATHLEN	inc/fs.h	20;"	d
MAX_DIR_ENTS	fs/fsformat.c	35;"	d	file:
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCPU	kern/cpu.h	11;"	d
NDIRECT	inc/fs.h	23;"	d
NENV	inc/env.h	29;"	d
NINDIRECT	inc/fs.h	25;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	219;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon7
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	226;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_EXT16HI	kern/kclock.h	24;"	d
NVRAM_EXT16LO	kern/kclock.h	23;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	124;"	d
O_CREAT	inc/lib.h	126;"	d
O_EXCL	inc/lib.h	128;"	d
O_MKDIR	inc/lib.h	129;"	d
O_RDONLY	inc/lib.h	121;"	d
O_RDWR	inc/lib.h	123;"	d
O_TRUNC	inc/lib.h	127;"	d
O_WRONLY	inc/lib.h	122;"	d
OpenFile	fs/serv.c	/^struct OpenFile {$/;"	s	file:
OpenFile::o_fd	fs/serv.c	/^	struct Fd *o_fd;	\/\/ Fd page$/;"	m	struct:OpenFile	typeref:struct:OpenFile::Fd	file:	access:public
OpenFile::o_file	fs/serv.c	/^	struct File *o_file;	\/\/ mapped descriptor for open file$/;"	m	struct:OpenFile	typeref:struct:OpenFile::File	file:	access:public
OpenFile::o_fileid	fs/serv.c	/^	uint32_t o_fileid;	\/\/ file id$/;"	m	struct:OpenFile	file:	access:public
OpenFile::o_mode	fs/serv.c	/^	int o_mode;		\/\/ open mode$/;"	m	struct:OpenFile	file:	access:public
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Oct 24 20:44:37 EDT 2018$/;"	m
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PCINT	kern/lapic.c	36;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PIPEBUFSIZ	lib/pipe.c	20;"	d	file:
PTABLE_MAGIC	inc/partition.h	14;"	d
PTABLE_MAGIC_OFFSET	inc/partition.h	13;"	d
PTABLE_OFFSET	inc/partition.h	11;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	78;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PTYPE_DOS_EXTENDED	inc/partition.h	20;"	d
PTYPE_JOSFS	inc/partition.h	18;"	d
PTYPE_JOS_KERN	inc/partition.h	17;"	d
PTYPE_LINUX_EXTENDED	inc/partition.h	22;"	d
PTYPE_W95_EXTENDED	inc/partition.h	21;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
PageInfo::pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo	access:public
PageInfo::pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	access:public
Partitiondesc	inc/partition.h	/^struct Partitiondesc {$/;"	s
Partitiondesc::boot	inc/partition.h	/^	uint8_t boot;$/;"	m	struct:Partitiondesc	access:public
Partitiondesc::chs_begin	inc/partition.h	/^	uint8_t chs_begin[3];$/;"	m	struct:Partitiondesc	access:public
Partitiondesc::chs_end	inc/partition.h	/^	uint8_t chs_end[3];$/;"	m	struct:Partitiondesc	access:public
Partitiondesc::lba_length	inc/partition.h	/^	uint32_t lba_length;$/;"	m	struct:Partitiondesc	access:public
Partitiondesc::lba_start	inc/partition.h	/^	uint32_t lba_start;$/;"	m	struct:Partitiondesc	access:public
Partitiondesc::type	inc/partition.h	/^	uint8_t type;$/;"	m	struct:Partitiondesc	access:public
Pipe	lib/pipe.c	/^struct Pipe {$/;"	s	file:
Pipe::p_buf	lib/pipe.c	/^	uint8_t p_buf[PIPEBUFSIZ];	\/\/ data buffer$/;"	m	struct:Pipe	file:	access:public
Pipe::p_rpos	lib/pipe.c	/^	off_t p_rpos;		\/\/ read position$/;"	m	struct:Pipe	file:	access:public
Pipe::p_wpos	lib/pipe.c	/^	off_t p_wpos;		\/\/ write position$/;"	m	struct:Pipe	file:	access:public
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Proghdr::p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
Proghdr::p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
Proghdr::p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
Proghdr::p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
Proghdr::p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
Proghdr::p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
Pseudodesc::pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
Pseudodesc::pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
PushRegs::reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs	access:public
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu >\/dev\/null 2>&1; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c	inherits:object
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -drive file=$(OBJDIR)\/kern\/kernel.img,index=0,media=disk,format=raw -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	fs/fsformat.c	34;"	d	file:
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c	inherits:
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	227;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SECTSIZE	fs/fs.h	4;"	d
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	221;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SYMBOLS	obj/user/sh.asm	/^#define SYMBOLS "<|>&;()"$/;"	d
SYMBOLS	user/sh.c	187;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon7
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon7
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon7
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon7
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon7
SYS_env_set_trapframe	inc/syscall.h	/^	SYS_env_set_trapframe,$/;"	e	enum:__anon7
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon7
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon7
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon7
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon7
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon7
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon7
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon7
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon7
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Secthdr::sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Segdesc::sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
Segdesc::sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
Segdesc::sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
Segdesc::sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
Segdesc::sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
Segdesc::sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stab::n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
Stab::n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
Stab::n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
Stab::n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
Stab::n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
Stat	inc/fd.h	/^struct Stat {$/;"	s
Stat::st_dev	inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev	access:public
Stat::st_isdir	inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat	access:public
Stat::st_name	inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat	access:public
Stat::st_size	inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat	access:public
Super	inc/fs.h	/^struct Super {$/;"	s
Super::s_magic	inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super	access:public
Super::s_nblocks	inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super	access:public
Super::s_root	inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File	access:public
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TDCR	kern/lapic.c	43;"	d	file:
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	((char*)0xa00000)$/;"	d
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	((char*)0xb00000)$/;"	d
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
Taskstate::ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
Taskstate::ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
Taskstate::ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c	inherits:Exception
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
Trapframe::tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs	access:public
Trapframe::tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe	access:public
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
UPSTREAM	GNUmakefile	/^UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu\/6.828\/2018\/jos.git (fetch)" | awk '{split($$0,a," "); print a[1]}')$/;"	m
USED	inc/lib.h	24;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEMP2	lib/spawn.c	5;"	d	file:
UTEMP2USTACK	lib/spawn.c	4;"	d	file:
UTEMP3	lib/spawn.c	6;"	d	file:
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UTrapframe::utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs	access:public
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
UserStabData::stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
UserStabData::stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
UserStabData::stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:	access:public
UserStabData::stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:	access:public
V	conf/env.mk	/^V = @$/;"	m
VA	user/testptelibrary.c	3;"	d	file:
VA	user/testpteshare.c	4;"	d	file:
VER	kern/lapic.c	15;"	d	file:
WEBSUB	GNUmakefile	/^WEBSUB := https:\/\/6828.scripts.mit.edu\/2018\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	87;"	d	file:
WHITESPACE	obj/user/sh.asm	/^#define WHITESPACE " \\t\\r\\n"$/;"	d
WHITESPACE	user/sh.c	186;"	d	file:
X1	kern/lapic.c	34;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__anon1::msg1	user/init.c	/^	char msg1[5000];$/;"	m	struct:__anon1	file:	access:public
__anon1::msg2	user/init.c	/^	char msg2[1000];$/;"	m	struct:__anon1	file:	access:public
__anon3::buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon3	file:	access:public
__anon3::rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon3	file:	access:public
__anon3::wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon3	file:	access:public
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner	access:public
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU	access:public
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient	access:public
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:	access:private
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:	access:private
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:	access:private
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:	access:private
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f	signature:(struct spinlock *lk, char *name)
__spin_initlock	kern/spinlock.h	/^void __spin_initlock(struct spinlock *lk, char *name);$/;"	p	signature:(struct spinlock *lk, char *name)
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_gettoken	user/sh.c	/^_gettoken(char *s, char **p1, char **p2)$/;"	f	signature:(char *s, char **p1, char **p2)
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f	signature:(const char *file, int line, physaddr_t pa)
_pad	inc/fs.h	/^	char _pad[PGSIZE];$/;"	m	union:Fsipc	access:public
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f	signature:(const char *file, int line, void *kva)
_panic	inc/assert.h	/^void _panic(const char*, int, const char*, ...) __attribute__((noreturn));$/;"	p	signature:(const char*, int, const char*, ...)
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f	signature:(const char *file, int line, const char *fmt, ...)
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/fs/fs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/forktree.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpongs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primespipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sendpage.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sh.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/spin.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/stresssched.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testfdsharing.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace2.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpteshare.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testshell.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	lib/pgfault.c	/^extern void _pgfault_upcall(void);$/;"	p	file:	signature:(void)
_pgfault_upcall	obj/fs/fs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultalloc.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultallocbad.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultdie.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultregs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpong.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpongs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primes.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primespipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sendpage.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sh.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/spin.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/stresssched.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testfdsharing.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace2.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpteshare.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testshell.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	user/faultnostack.c	/^void _pgfault_upcall();$/;"	p	file:
_pipeisclosed	lib/pipe.c	/^_pipeisclosed(struct Fd *fd, struct Pipe *p)$/;"	f	file:	signature:(struct Fd *fd, struct Pipe *p)
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/fs/fs.asm	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/cat.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/echo.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultio.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/icode.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
_start	obj/user/ls.asm	/^_start:$/;"	l
_start	obj/user/lsfd.asm	/^_start:$/;"	l
_start	obj/user/num.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/primespipe.asm	/^_start:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
_start	obj/user/sh.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spawnfaultio.asm	/^_start:$/;"	l
_start	obj/user/spawnhello.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/testfdsharing.asm	/^_start:$/;"	l
_start	obj/user/testfile.asm	/^_start:$/;"	l
_start	obj/user/testkbd.asm	/^_start:$/;"	l
_start	obj/user/testpipe.asm	/^_start:$/;"	l
_start	obj/user/testpiperace.asm	/^_start:$/;"	l
_start	obj/user/testpiperace2.asm	/^_start:$/;"	l
_start	obj/user/testpteshare.asm	/^_start:$/;"	l
_start	obj/user/testshell.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	inc/assert.h	/^void _warn(const char*, int, const char*, ...);$/;"	p	signature:(const char*, int, const char*, ...)
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
addr	obj/user/forktree.asm	/^  addr = (void *)((uint32_t)pn * PGSIZE);$/;"	d
addr	obj/user/forktree.asm	/^  addr = ROUNDDOWN(addr, PGSIZE); $/;"	d
addr	obj/user/pingpong.asm	/^  addr = (void *)((uint32_t)pn * PGSIZE);$/;"	d
addr	obj/user/pingpong.asm	/^  addr = ROUNDDOWN(addr, PGSIZE); $/;"	d
addr	obj/user/pingpongs.asm	/^  addr = (void *)((uint32_t)pn * PGSIZE);$/;"	d
addr	obj/user/pingpongs.asm	/^  addr = ROUNDDOWN(addr, PGSIZE); $/;"	d
addr	obj/user/primes.asm	/^  addr = (void *)((uint32_t)pn * PGSIZE);$/;"	d
addr	obj/user/primes.asm	/^  addr = ROUNDDOWN(addr, PGSIZE); $/;"	d
addr	obj/user/primespipe.asm	/^  addr = (void *)((uint32_t)pn * PGSIZE);$/;"	d
addr	obj/user/primespipe.asm	/^  addr = ROUNDDOWN(addr, PGSIZE); $/;"	d
addr	obj/user/sendpage.asm	/^  addr = (void *)((uint32_t)pn * PGSIZE);$/;"	d
addr	obj/user/sendpage.asm	/^  addr = ROUNDDOWN(addr, PGSIZE); $/;"	d
addr	obj/user/sh.asm	/^  addr = (void *)((uint32_t)pn * PGSIZE);$/;"	d
addr	obj/user/sh.asm	/^  addr = ROUNDDOWN(addr, PGSIZE); $/;"	d
addr	obj/user/spin.asm	/^  addr = (void *)((uint32_t)pn * PGSIZE);$/;"	d
addr	obj/user/spin.asm	/^  addr = ROUNDDOWN(addr, PGSIZE); $/;"	d
addr	obj/user/stresssched.asm	/^  addr = (void *)((uint32_t)pn * PGSIZE);$/;"	d
addr	obj/user/stresssched.asm	/^  addr = ROUNDDOWN(addr, PGSIZE); $/;"	d
addr	obj/user/testfdsharing.asm	/^  addr = (void *)((uint32_t)pn * PGSIZE);$/;"	d
addr	obj/user/testfdsharing.asm	/^  addr = ROUNDDOWN(addr, PGSIZE); $/;"	d
addr	obj/user/testpipe.asm	/^  addr = (void *)((uint32_t)pn * PGSIZE);$/;"	d
addr	obj/user/testpipe.asm	/^  addr = ROUNDDOWN(addr, PGSIZE); $/;"	d
addr	obj/user/testpiperace.asm	/^  addr = (void *)((uint32_t)pn * PGSIZE);$/;"	d
addr	obj/user/testpiperace.asm	/^  addr = ROUNDDOWN(addr, PGSIZE); $/;"	d
addr	obj/user/testpiperace2.asm	/^  addr = (void *)((uint32_t)pn * PGSIZE);$/;"	d
addr	obj/user/testpiperace2.asm	/^  addr = ROUNDDOWN(addr, PGSIZE); $/;"	d
addr	obj/user/testpteshare.asm	/^  addr = (void *)((uint32_t)pn * PGSIZE);$/;"	d
addr	obj/user/testpteshare.asm	/^  addr = ROUNDDOWN(addr, PGSIZE); $/;"	d
addr	obj/user/testshell.asm	/^  addr = (void *)((uint32_t)pn * PGSIZE);$/;"	d
addr	obj/user/testshell.asm	/^  addr = ROUNDDOWN(addr, PGSIZE); $/;"	d
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
again	obj/user/sh.asm	/^again:$/;"	l
alloc	fs/fsformat.c	/^alloc(uint32_t bytes)$/;"	f	signature:(uint32_t bytes)
alloc_block	fs/fs.c	/^alloc_block(void)$/;"	f	signature:(void)
alloc_block	fs/fs.h	/^int	alloc_block(void);$/;"	p	signature:(void)
altflag	obj/fs/fs.asm	/^			altflag = 1;$/;"	d
altflag	obj/fs/fs.asm	/^		altflag = 0;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/cat.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/cat.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echo.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echo.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultio.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultio.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/icode.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/icode.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/init.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/init.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/ls.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/ls.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/lsfd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/lsfd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/num.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/num.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primespipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primespipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sh.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sh.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spawnfaultio.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spawnfaultio.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spawnhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spawnhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfdsharing.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfdsharing.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfile.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfile.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testkbd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testkbd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpteshare.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpteshare.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testshell.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testshell.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:	access:public
arg	obj/user/ls.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/lsfd.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/sh.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
argc	inc/args.h	/^	int *argc;$/;"	m	struct:Argstate	access:public
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
argc	obj/user/sh.asm	/^	argc = 0;$/;"	d
argnext	inc/args.h	/^int argnext(struct Argstate *);$/;"	p	signature:(struct Argstate *)
argnext	lib/args.c	/^argnext(struct Argstate *args)$/;"	f	signature:(struct Argstate *args)
argnextvalue	inc/args.h	/^char *argnextvalue(struct Argstate *);$/;"	p	signature:(struct Argstate *)
argnextvalue	lib/args.c	/^argnextvalue(struct Argstate *args)$/;"	f	signature:(struct Argstate *args)
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/fs/fs.asm	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/cat.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/echo.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultio.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/icode.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/init.asm	/^args_exist:$/;"	l
args_exist	obj/user/ls.asm	/^args_exist:$/;"	l
args_exist	obj/user/lsfd.asm	/^args_exist:$/;"	l
args_exist	obj/user/num.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/primespipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
args_exist	obj/user/sh.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spawnfaultio.asm	/^args_exist:$/;"	l
args_exist	obj/user/spawnhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfdsharing.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfile.asm	/^args_exist:$/;"	l
args_exist	obj/user/testkbd.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace2.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpteshare.asm	/^args_exist:$/;"	l
args_exist	obj/user/testshell.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
argstart	inc/args.h	/^void argstart(int *argc, char **argv, struct Argstate *args);$/;"	p	signature:(int *argc, char **argv, struct Argstate *args)
argstart	lib/args.c	/^argstart(int *argc, char **argv, struct Argstate *args)$/;"	f	signature:(int *argc, char **argv, struct Argstate *args)
argv	inc/args.h	/^	const char **argv;$/;"	m	struct:Argstate	access:public
argv_store	obj/user/icode.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/init.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/sh.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/spawnfaultio.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/spawnhello.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testpteshare.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testshell.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argvalue	inc/args.h	/^	const char *argvalue;$/;"	m	struct:Argstate	access:public
argvalue	inc/args.h	/^char *argvalue(struct Argstate *);$/;"	p	signature:(struct Argstate *)
argvalue	lib/args.c	/^argvalue(struct Argstate *args)$/;"	f	signature:(struct Argstate *args)
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f	access:public
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f	access:public
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match	access:public
backtrace	kern/trap.h	/^void backtrace(struct Trapframe *);$/;"	p	signature:(struct Trapframe *)
base	obj/fs/fs.asm	/^			base = 10;$/;"	d
base	obj/fs/fs.asm	/^			base = 16;$/;"	d
base	obj/fs/fs.asm	/^			base = 8;$/;"	d
base	obj/fs/fs.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 16;$/;"	d
base	obj/user/cat.asm	/^			base = 8;$/;"	d
base	obj/user/cat.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 16;$/;"	d
base	obj/user/echo.asm	/^			base = 8;$/;"	d
base	obj/user/echo.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultio.asm	/^			base = 10;$/;"	d
base	obj/user/faultio.asm	/^			base = 16;$/;"	d
base	obj/user/faultio.asm	/^			base = 8;$/;"	d
base	obj/user/faultio.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 16;$/;"	d
base	obj/user/icode.asm	/^			base = 8;$/;"	d
base	obj/user/icode.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 16;$/;"	d
base	obj/user/init.asm	/^			base = 8;$/;"	d
base	obj/user/init.asm	/^		base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 16;$/;"	d
base	obj/user/ls.asm	/^			base = 8;$/;"	d
base	obj/user/ls.asm	/^		base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 16;$/;"	d
base	obj/user/lsfd.asm	/^			base = 8;$/;"	d
base	obj/user/lsfd.asm	/^		base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 16;$/;"	d
base	obj/user/num.asm	/^			base = 8;$/;"	d
base	obj/user/num.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 16;$/;"	d
base	obj/user/primespipe.asm	/^			base = 8;$/;"	d
base	obj/user/primespipe.asm	/^		base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^			base = 8;$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 16;$/;"	d
base	obj/user/sh.asm	/^			base = 8;$/;"	d
base	obj/user/sh.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spawnfaultio.asm	/^			base = 10;$/;"	d
base	obj/user/spawnfaultio.asm	/^			base = 16;$/;"	d
base	obj/user/spawnfaultio.asm	/^			base = 8;$/;"	d
base	obj/user/spawnfaultio.asm	/^		base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 16;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 8;$/;"	d
base	obj/user/spawnhello.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 16;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 8;$/;"	d
base	obj/user/testfdsharing.asm	/^		base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 16;$/;"	d
base	obj/user/testfile.asm	/^			base = 8;$/;"	d
base	obj/user/testfile.asm	/^		base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 16;$/;"	d
base	obj/user/testkbd.asm	/^			base = 8;$/;"	d
base	obj/user/testkbd.asm	/^		base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 16;$/;"	d
base	obj/user/testpipe.asm	/^			base = 8;$/;"	d
base	obj/user/testpipe.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace2.asm	/^		base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 16;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 8;$/;"	d
base	obj/user/testpteshare.asm	/^		base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 16;$/;"	d
base	obj/user/testshell.asm	/^			base = 8;$/;"	d
base	obj/user/testshell.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
basemem	obj/kern/kernel.asm	/^	basemem = nvram_read(NVRAM_BASELO);$/;"	d
bc_init	fs/bc.c	/^bc_init(void)$/;"	f	signature:(void)
bc_init	fs/fs.h	/^void	bc_init(void);$/;"	p	signature:(void)
bc_pgfault	fs/bc.c	/^bc_pgfault(struct UTrapframe *utf)$/;"	f	file:	signature:(struct UTrapframe *utf)
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/fs/fs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/fs/fs.asm	/^	binaryname = "fs";$/;"	d
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^	binaryname = "cat";$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echo.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultio.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^	binaryname = "icode";$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/init.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/ls.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/lsfd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^	binaryname = "num";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^	binaryname = "primespipe";$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sh.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spawnfaultio.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spawnhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfdsharing.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfile.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testkbd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipereadeof";$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipewriteeof";$/;"	d
binaryname	obj/user/testpiperace.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpiperace2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpteshare.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testshell.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bitmap	fs/fs.h	/^uint32_t *bitmap;		\/\/ bitmap blocks mapped in memory$/;"	v
bitmap	fs/fsformat.c	/^uint32_t *bitmap;$/;"	v
bitmap	obj/fs/fs.asm	/^	bitmap = diskaddr(2);$/;"	d
bits	obj/fs/fs.asm	/^	bits = (uint32_t*) PGSIZE;$/;"	d
block_is_free	fs/fs.c	/^block_is_free(uint32_t blockno)$/;"	f	signature:(uint32_t blockno)
block_is_free	fs/fs.h	/^bool	block_is_free(uint32_t blockno);$/;"	p	signature:(uint32_t blockno)
blockof	fs/fsformat.c	/^blockof(void *pos)$/;"	f	signature:(void *pos)
bol	obj/user/num.asm	/^			bol = 0;$/;"	d
bol	obj/user/num.asm	/^			bol = 1;$/;"	d
bol	user/num.c	/^int bol = 1;$/;"	v
bool	fs/fsformat.c	/^typedef int bool;$/;"	t	file:
bool	fs/fsformat.c	21;"	d	file:
bool	fs/fsformat.c	7;"	d	file:
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
bool	obj/fs/fs.asm	/^bool$/;"	l
boot	inc/partition.h	/^	uint8_t boot;$/;"	m	struct:Partitiondesc	access:public
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:	signature:(uint32_t n)
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:	signature:(void)
boot_aps	kern/init.c	/^static void boot_aps(void);$/;"	p	file:	signature:(void)
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:	signature:(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)
boot_map_region	kern/pmap.c	/^static void boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm);$/;"	p	file:	signature:(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f	signature:(void)
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient	access:public
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f	signature:(void)
bss	user/init.c	/^char bss[6000];$/;"	v
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon3	file:	access:public
buf	lib/fprintf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:	access:public
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:	access:public
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/fs/fs.asm	/^	buf = vbuf;$/;"	d
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
buf	obj/user/cat.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echo.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/icode.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/init.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/ls.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/lsfd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/num.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primespipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sh.asm	/^		buf = readline(interactive ? "$ " : NULL);$/;"	d
buf	obj/user/sh.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spawnfaultio.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spawnhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfdsharing.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfile.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testkbd.asm	/^		buf = readline("Type a line: ");$/;"	d
buf	obj/user/testkbd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpteshare.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testshell.asm	/^	buf = vbuf;$/;"	d
buf	user/cat.c	/^char buf[8192];$/;"	v
buf	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
buf2	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
c	obj/fs/fs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/cat.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echo.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultio.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/icode.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/init.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/ls.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/lsfd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/num.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primespipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = getchar();$/;"	d
c	obj/user/sh.asm	/^	c = nc;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spawnfaultio.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spawnhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfdsharing.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfile.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = getchar();$/;"	d
c	obj/user/testpipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpteshare.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testshell.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f	access:public
cat	user/cat.c	/^cat(int f, char *s)$/;"	f	signature:(int f, char *s)
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:	signature:(void)
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:	signature:(int c)
ch	obj/fs/fs.asm	/^				ch = *fmt;$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/cat.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echo.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultio.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/icode.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/init.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/ls.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/lsfd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/num.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primespipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sh.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spawnfaultio.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spawnhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfdsharing.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfile.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testkbd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpteshare.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testshell.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/fs/fs.asm	/^char *$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char buf[8192];$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/echo.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultio.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/icode.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char bss[6000];$/;"	l
char	obj/user/ls.asm	/^char *$/;"	l
char	obj/user/lsfd.asm	/^char *$/;"	l
char	obj/user/num.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/primespipe.asm	/^char *$/;"	l
char	obj/user/sendpage.asm	/^char *$/;"	l
char	obj/user/sh.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spawnfaultio.asm	/^char *$/;"	l
char	obj/user/spawnhello.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char buf[512], buf2[512];$/;"	l
char	obj/user/testfile.asm	/^char *$/;"	l
char	obj/user/testkbd.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	l
char	obj/user/testpiperace.asm	/^char *$/;"	l
char	obj/user/testpiperace2.asm	/^char *$/;"	l
char	obj/user/testpteshare.asm	/^char *$/;"	l
char	obj/user/testshell.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_bc	fs/bc.c	/^check_bc(void)$/;"	f	file:	signature:(void)
check_bitmap	fs/fs.c	/^check_bitmap(void)$/;"	f	signature:(void)
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:	signature:(void)
check_kern_pgdir	kern/pmap.c	/^static void check_kern_pgdir(void);$/;"	p	file:	signature:(void)
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:	signature:(void)
check_page	kern/pmap.c	/^static void check_page(void);$/;"	p	file:	signature:(void)
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:	signature:(void)
check_page_alloc	kern/pmap.c	/^static void check_page_alloc(void);$/;"	p	file:	signature:(void)
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:	signature:(bool only_low_memory)
check_page_free_list	kern/pmap.c	/^static void check_page_free_list(bool only_low_memory);$/;"	p	file:	signature:(bool only_low_memory)
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:	signature:(void)
check_page_installed_pgdir	kern/pmap.c	/^static void check_page_installed_pgdir(void);$/;"	p	file:	signature:(void)
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:	signature:(struct regs* a, const char *an, struct regs* b, const char *bn, const char *testname)
check_super	fs/fs.c	/^check_super(void)$/;"	f	signature:(void)
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:	signature:(pde_t *pgdir, uintptr_t va)
check_va2pa	kern/pmap.c	/^static physaddr_t check_va2pa(pde_t *pgdir, uintptr_t va);$/;"	p	file:	signature:(pde_t *pgdir, uintptr_t va)
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:	access:public
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:	access:public
child	obj/user/icode.asm	/^	child = r;$/;"	d
child	obj/user/init.asm	/^	child = r;$/;"	d
child	obj/user/sh.asm	/^	child = r;$/;"	d
child	obj/user/spawnfaultio.asm	/^	child = r;$/;"	d
child	obj/user/spawnhello.asm	/^	child = r;$/;"	d
child	obj/user/testpteshare.asm	/^	child = r;$/;"	d
child	obj/user/testshell.asm	/^	child = r;$/;"	d
child_tf	obj/user/icode.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/init.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/sh.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/spawnfaultio.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/spawnhello.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testpteshare.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testshell.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
childofspawn	user/testptelibrary.c	/^childofspawn(void)$/;"	f	signature:(void)
childofspawn	user/testptelibrary.c	/^void childofspawn(void);$/;"	p	file:	signature:(void)
childofspawn	user/testpteshare.c	/^childofspawn(void)$/;"	f	signature:(void)
childofspawn	user/testpteshare.c	/^void childofspawn(void);$/;"	p	file:	signature:(void)
chs_begin	inc/partition.h	/^	uint8_t chs_begin[3];$/;"	m	struct:Partitiondesc	access:public
chs_end	inc/partition.h	/^	uint8_t chs_end[3];$/;"	m	struct:Partitiondesc	access:public
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient	access:public
close	inc/lib.h	/^int	close(int fd);$/;"	p	signature:(int fd)
close	lib/fd.c	/^close(int fdnum)$/;"	f	signature:(int fdnum)
close_all	inc/lib.h	/^void	close_all(void);$/;"	p	signature:(void)
close_all	lib/fd.c	/^close_all(void)$/;"	f	signature:(void)
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:	access:public
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
cnt	obj/fs/fs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echo.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultio.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/icode.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/init.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primespipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spawnfaultio.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spawnhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfdsharing.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfile.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/testpipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpteshare.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testshell.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f	access:public
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon3	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f	signature:(void)
cons_getc	kern/console.h	/^int cons_getc(void);$/;"	p	signature:(void)
cons_init	kern/console.c	/^cons_init(void)$/;"	f	signature:(void)
cons_init	kern/console.h	/^void cons_init(void);$/;"	p	signature:(void)
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:	signature:(int (*proc)(void))
cons_intr	kern/console.c	/^static void cons_intr(int (*proc)(void));$/;"	p	file:	signature:(int (*proc)(void))
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:	signature:(int c)
cons_putc	kern/console.c	/^static void cons_putc(int c);$/;"	p	file:	signature:(int c)
const	obj/fs/fs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/fs/fs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/cat.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/cat.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echo.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echo.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultio.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultio.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/icode.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/icode.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/init.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/init.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/ls.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/ls.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/lsfd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/lsfd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/num.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/num.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primespipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primespipe.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sh.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sh.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spawnfaultio.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spawnfaultio.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spawnhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spawnhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfdsharing.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfdsharing.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfile.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfile.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testkbd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testkbd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpipe.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpiperace.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpiperace2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpteshare.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpteshare.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testshell.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testshell.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient	access:public
copy_shared_pages	lib/spawn.c	/^copy_shared_pages(envid_t child)$/;"	f	file:	signature:(envid_t child)
copy_shared_pages	lib/spawn.c	/^static int copy_shared_pages(envid_t child);$/;"	p	file:	signature:(envid_t child)
count	obj/fs/fs.asm	/^	count = MIN(count, f->f_size - offset);$/;"	d
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	inc/stdio.h	/^int	cprintf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo	access:public
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env	access:public
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo	access:public
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo	access:public
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate	access:public
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpunum	kern/cpu.h	/^int cpunum(void);$/;"	p	signature:(void)
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f	signature:(void)
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	inc/lib.h	/^void	cputchar(int c);$/;"	p	signature:(int c)
cputchar	inc/stdio.h	/^void	cputchar(int c);$/;"	p	signature:(int c)
cputchar	kern/console.c	/^cputchar(int c)$/;"	f	signature:(int c)
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f	signature:(int ch)
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
curarg	inc/args.h	/^	const char *curarg;$/;"	m	struct:Argstate	access:public
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^  curenv = e;$/;"	d
d	obj/fs/fs.asm	/^	d = dst;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/cat.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/echo.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultio.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/icode.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/init.asm	/^	d = dst;$/;"	d
d	obj/user/ls.asm	/^	d = dst;$/;"	d
d	obj/user/lsfd.asm	/^	d = dst;$/;"	d
d	obj/user/num.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/primespipe.asm	/^	d = dst;$/;"	d
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
d	obj/user/sh.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spawnfaultio.asm	/^	d = dst;$/;"	d
d	obj/user/spawnhello.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/testfdsharing.asm	/^	d = dst;$/;"	d
d	obj/user/testfile.asm	/^	d = dst;$/;"	d
d	obj/user/testkbd.asm	/^	d = dst;$/;"	d
d	obj/user/testpipe.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace2.asm	/^	d = dst;$/;"	d
d	obj/user/testpteshare.asm	/^	d = dst;$/;"	d
d	obj/user/testshell.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
data	user/init.c	/^} data = {$/;"	v	typeref:struct:__anon1
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debug	fs/serv.c	12;"	d	file:
debug	lib/fd.c	3;"	d	file:
debug	lib/file.c	5;"	d	file:
debug	lib/pipe.c	3;"	d	file:
debug	user/sh.c	/^int debug = 0;$/;"	v
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f	signature:(uintptr_t addr, struct Eipdebuginfo *info)
debuginfo_eip	kern/kdebug.h	/^int debuginfo_eip(uintptr_t eip, struct Eipdebuginfo *info);$/;"	p	signature:(uintptr_t eip, struct Eipdebuginfo *info)
default	obj/fs/fs.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/kern/kernel.asm	/^  default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/cat.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/echo.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultio.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/icode.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/init.asm	/^		default:$/;"	l
default	obj/user/ls.asm	/^		default:$/;"	l
default	obj/user/lsfd.asm	/^		default:$/;"	l
default	obj/user/num.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/primespipe.asm	/^		default:$/;"	l
default	obj/user/sendpage.asm	/^		default:$/;"	l
default	obj/user/sh.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spawnfaultio.asm	/^		default:$/;"	l
default	obj/user/spawnhello.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/testfdsharing.asm	/^		default:$/;"	l
default	obj/user/testfile.asm	/^		default:$/;"	l
default	obj/user/testkbd.asm	/^		default:$/;"	l
default	obj/user/testpipe.asm	/^		default:$/;"	l
default	obj/user/testpiperace.asm	/^		default:$/;"	l
default	obj/user/testpiperace2.asm	/^		default:$/;"	l
default	obj/user/testpteshare.asm	/^		default:$/;"	l
default	obj/user/testshell.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:	signature:(void)
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
dev_close	inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev	access:public
dev_id	inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev	access:public
dev_lookup	inc/fd.h	/^int	dev_lookup(int devid, struct Dev **dev_store);$/;"	p	signature:(int devid, struct Dev **dev_store)
dev_lookup	lib/fd.c	/^dev_lookup(int dev_id, struct Dev **dev)$/;"	f	signature:(int dev_id, struct Dev **dev)
dev_name	inc/fd.h	/^	const char *dev_name;$/;"	m	struct:Dev	access:public
dev_read	inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev	access:public
dev_stat	inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev	access:public
dev_trunc	inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev	access:public
dev_write	inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev	access:public
devcons	lib/console.c	/^struct Dev devcons =$/;"	v	typeref:struct:Dev
devcons_close	lib/console.c	/^devcons_close(struct Fd *fd)$/;"	f	file:	signature:(struct Fd *fd)
devcons_close	lib/console.c	/^static int devcons_close(struct Fd*);$/;"	p	file:	signature:(struct Fd*)
devcons_read	lib/console.c	/^devcons_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:	signature:(struct Fd *fd, void *vbuf, size_t n)
devcons_read	lib/console.c	/^static ssize_t devcons_read(struct Fd*, void*, size_t);$/;"	p	file:	signature:(struct Fd*, void*, size_t)
devcons_stat	lib/console.c	/^devcons_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:	signature:(struct Fd *fd, struct Stat *stat)
devcons_stat	lib/console.c	/^static int devcons_stat(struct Fd*, struct Stat*);$/;"	p	file:	signature:(struct Fd*, struct Stat*)
devcons_write	lib/console.c	/^devcons_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:	signature:(struct Fd *fd, const void *vbuf, size_t n)
devcons_write	lib/console.c	/^static ssize_t devcons_write(struct Fd*, const void*, size_t);$/;"	p	file:	signature:(struct Fd*, const void*, size_t)
devfile	lib/file.c	/^struct Dev devfile =$/;"	v	typeref:struct:Dev
devfile_flush	lib/file.c	/^devfile_flush(struct Fd *fd)$/;"	f	file:	signature:(struct Fd *fd)
devfile_flush	lib/file.c	/^static int devfile_flush(struct Fd *fd);$/;"	p	file:	signature:(struct Fd *fd)
devfile_read	lib/file.c	/^devfile_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:	signature:(struct Fd *fd, void *buf, size_t n)
devfile_read	lib/file.c	/^static ssize_t devfile_read(struct Fd *fd, void *buf, size_t n);$/;"	p	file:	signature:(struct Fd *fd, void *buf, size_t n)
devfile_stat	lib/file.c	/^devfile_stat(struct Fd *fd, struct Stat *st)$/;"	f	file:	signature:(struct Fd *fd, struct Stat *st)
devfile_stat	lib/file.c	/^static int devfile_stat(struct Fd *fd, struct Stat *stat);$/;"	p	file:	signature:(struct Fd *fd, struct Stat *stat)
devfile_trunc	lib/file.c	/^devfile_trunc(struct Fd *fd, off_t newsize)$/;"	f	file:	signature:(struct Fd *fd, off_t newsize)
devfile_trunc	lib/file.c	/^static int devfile_trunc(struct Fd *fd, off_t newsize);$/;"	p	file:	signature:(struct Fd *fd, off_t newsize)
devfile_write	lib/file.c	/^devfile_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:	signature:(struct Fd *fd, const void *buf, size_t n)
devfile_write	lib/file.c	/^static ssize_t devfile_write(struct Fd *fd, const void *buf, size_t n);$/;"	p	file:	signature:(struct Fd *fd, const void *buf, size_t n)
devpipe	lib/pipe.c	/^struct Dev devpipe =$/;"	v	typeref:struct:Dev
devpipe_close	lib/pipe.c	/^devpipe_close(struct Fd *fd)$/;"	f	file:	signature:(struct Fd *fd)
devpipe_close	lib/pipe.c	/^static int devpipe_close(struct Fd *fd);$/;"	p	file:	signature:(struct Fd *fd)
devpipe_read	lib/pipe.c	/^devpipe_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:	signature:(struct Fd *fd, void *vbuf, size_t n)
devpipe_read	lib/pipe.c	/^static ssize_t devpipe_read(struct Fd *fd, void *buf, size_t n);$/;"	p	file:	signature:(struct Fd *fd, void *buf, size_t n)
devpipe_stat	lib/pipe.c	/^devpipe_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:	signature:(struct Fd *fd, struct Stat *stat)
devpipe_stat	lib/pipe.c	/^static int devpipe_stat(struct Fd *fd, struct Stat *stat);$/;"	p	file:	signature:(struct Fd *fd, struct Stat *stat)
devpipe_write	lib/pipe.c	/^devpipe_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:	signature:(struct Fd *fd, const void *vbuf, size_t n)
devpipe_write	lib/pipe.c	/^static ssize_t devpipe_write(struct Fd *fd, const void *buf, size_t n);$/;"	p	file:	signature:(struct Fd *fd, const void *buf, size_t n)
devtab	lib/fd.c	/^static struct Dev *devtab[] =$/;"	v	typeref:struct:Dev	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultio.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultio.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultio.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spawnfaultio.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spawnfaultio.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spawnfaultio.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
dir	obj/fs/fs.asm	/^		dir = f;$/;"	d
dir	obj/fs/fs.asm	/^	dir = 0;$/;"	d
dir_alloc_file	fs/fs.c	/^dir_alloc_file(struct File *dir, struct File **file)$/;"	f	file:	signature:(struct File *dir, struct File **file)
dir_lookup	fs/fs.c	/^dir_lookup(struct File *dir, const char *name, struct File **file)$/;"	f	file:	signature:(struct File *dir, const char *name, struct File **file)
diradd	fs/fsformat.c	/^diradd(struct Dir *d, uint32_t type, const char *name)$/;"	f	signature:(struct Dir *d, uint32_t type, const char *name)
diskaddr	fs/bc.c	/^diskaddr(uint32_t blockno)$/;"	f	signature:(uint32_t blockno)
diskaddr	fs/fs.h	/^void*	diskaddr(uint32_t blockno);$/;"	p	signature:(uint32_t blockno)
diskmap	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
diskno	fs/ide.c	/^static int diskno = 1;$/;"	v	file:
diskno	obj/fs/fs.asm	/^	diskno = d;$/;"	d
diskpos	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
do_test	grade-lab5	/^    def do_test():$/;"	f	function:matchtest	access:public
dst_in	obj/fs/fs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/cat.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echo.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultio.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/icode.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/init.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/ls.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/lsfd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/num.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primespipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sh.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spawnfaultio.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spawnhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfdsharing.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfile.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testkbd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpteshare.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testshell.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f	signature:(void)
dumbfork	user/dumbfork.c	/^envid_t dumbfork(void);$/;"	p	file:	signature:(void)
dup	inc/lib.h	/^int	dup(int oldfd, int newfd);$/;"	p	signature:(int oldfd, int newfd)
dup	lib/fd.c	/^dup(int oldfdnum, int newfdnum)$/;"	f	signature:(int oldfdnum, int newfdnum)
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:	signature:(envid_t envid, unsigned pn)
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f	signature:(envid_t dstenv, void *addr)
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/init.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/sh.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testfdsharing.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpipe.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpteshare.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testshell.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)(* ebp);$/;"	d
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
echocmds	obj/user/sh.asm	/^			echocmds = 1;$/;"	d
echocmds	obj/user/sh.asm	/^	echocmds = 0;$/;"	d
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/sh.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/testkbd.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:	access:public
eip	obj/kern/kernel.asm	/^		eip = *(ebp + 1);$/;"	d
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:	access:public
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
elf	obj/user/icode.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/init.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/sh.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/spawnfaultio.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/spawnhello.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testpteshare.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testshell.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f	access:public
endofargs	obj/user/ls.asm	/^    endofargs:$/;"	l
endofargs	obj/user/lsfd.asm	/^    endofargs:$/;"	l
endofargs	obj/user/sh.asm	/^    endofargs:$/;"	l
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:	access:public
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:	access:public
entry	obj/kern/kernel.asm	/^	entry = pgdir_walk(pgdir, va, 0);$/;"	d
entry	obj/kern/kernel.asm	/^	entry = pgdir_walk(pgdir, va, 1);$/;"	d
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
ents	fs/fsformat.c	/^	struct File *ents;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:	access:public
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f	signature:(struct Env **newenv_store, envid_t parent_id)
env_alloc	kern/env.h	/^int	env_alloc(struct Env **e, envid_t parent_id);$/;"	p	signature:(struct Env **e, envid_t parent_id)
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env	access:public
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f	signature:(uint8_t *binary, enum EnvType type)
env_create	kern/env.h	/^void	env_create(uint8_t *binary, enum EnvType type);$/;"	p	signature:(uint8_t *binary, enum EnvType type)
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f	signature:(struct Env *e)
env_destroy	kern/env.h	/^void	env_destroy(struct Env *e);	\/\/ Does not return if e == curenv$/;"	p	signature:(struct Env *e)
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f	signature:(struct Env *e)
env_free	kern/env.h	/^void	env_free(struct Env *e);$/;"	p	signature:(struct Env *e)
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_free_list	obj/kern/kernel.asm	/^  env_free_list = envs;$/;"	d
env_from	obj/fs/fs.asm	/^    env_from = 0;$/;"	d
env_from	obj/fs/fs.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_from	obj/user/cat.asm	/^    env_from = 0;$/;"	d
env_from	obj/user/cat.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_from	obj/user/echo.asm	/^    env_from = 0;$/;"	d
env_from	obj/user/echo.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_from	obj/user/fairness.asm	/^    env_from = 0;$/;"	d
env_from	obj/user/fairness.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_from	obj/user/icode.asm	/^    env_from = 0;$/;"	d
env_from	obj/user/icode.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_from	obj/user/init.asm	/^    env_from = 0;$/;"	d
env_from	obj/user/init.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_from	obj/user/ls.asm	/^    env_from = 0;$/;"	d
env_from	obj/user/ls.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_from	obj/user/lsfd.asm	/^    env_from = 0;$/;"	d
env_from	obj/user/lsfd.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_from	obj/user/num.asm	/^    env_from = 0;$/;"	d
env_from	obj/user/num.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_from	obj/user/pingpong.asm	/^    env_from = 0;$/;"	d
env_from	obj/user/pingpong.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_from	obj/user/pingpongs.asm	/^    env_from = 0;$/;"	d
env_from	obj/user/pingpongs.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_from	obj/user/primes.asm	/^    env_from = 0;$/;"	d
env_from	obj/user/primes.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_from	obj/user/primespipe.asm	/^    env_from = 0;$/;"	d
env_from	obj/user/primespipe.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_from	obj/user/sendpage.asm	/^    env_from = 0;$/;"	d
env_from	obj/user/sendpage.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_from	obj/user/sh.asm	/^    env_from = 0;$/;"	d
env_from	obj/user/sh.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_from	obj/user/spawnfaultio.asm	/^    env_from = 0;$/;"	d
env_from	obj/user/spawnfaultio.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_from	obj/user/spawnhello.asm	/^    env_from = 0;$/;"	d
env_from	obj/user/spawnhello.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_from	obj/user/testfdsharing.asm	/^    env_from = 0;$/;"	d
env_from	obj/user/testfdsharing.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_from	obj/user/testfile.asm	/^    env_from = 0;$/;"	d
env_from	obj/user/testfile.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_from	obj/user/testkbd.asm	/^    env_from = 0;$/;"	d
env_from	obj/user/testkbd.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_from	obj/user/testpipe.asm	/^    env_from = 0;$/;"	d
env_from	obj/user/testpipe.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_from	obj/user/testpiperace.asm	/^    env_from = 0;$/;"	d
env_from	obj/user/testpiperace.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_from	obj/user/testpiperace2.asm	/^    env_from = 0;$/;"	d
env_from	obj/user/testpiperace2.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_from	obj/user/testpteshare.asm	/^    env_from = 0;$/;"	d
env_from	obj/user/testpteshare.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_from	obj/user/testshell.asm	/^    env_from = 0;$/;"	d
env_from	obj/user/testshell.asm	/^    env_from = thisenv->env_ipc_from;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env	access:public
env_index	obj/kern/kernel.asm	/^    env_index = (start_envi + i)%NENV;$/;"	d
env_init	kern/env.c	/^env_init(void)$/;"	f	signature:(void)
env_init	kern/env.h	/^void	env_init(void);$/;"	p	signature:(void)
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f	signature:(void)
env_init_percpu	kern/env.h	/^void	env_init_percpu(void);$/;"	p	signature:(void)
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env	access:public
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env	access:public
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env	access:public
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env	access:public
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env	access:public
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env	access:public
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env	access:public
env_perm	obj/fs/fs.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/fs/fs.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_perm	obj/user/cat.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/user/cat.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_perm	obj/user/echo.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/user/echo.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_perm	obj/user/fairness.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/user/fairness.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_perm	obj/user/icode.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/user/icode.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_perm	obj/user/init.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/user/init.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_perm	obj/user/ls.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/user/ls.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_perm	obj/user/lsfd.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/user/lsfd.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_perm	obj/user/num.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/user/num.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_perm	obj/user/pingpong.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/user/pingpong.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_perm	obj/user/pingpongs.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/user/pingpongs.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_perm	obj/user/primes.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/user/primes.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_perm	obj/user/primespipe.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/user/primespipe.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_perm	obj/user/sendpage.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/user/sendpage.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_perm	obj/user/sh.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/user/sh.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_perm	obj/user/spawnfaultio.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/user/spawnfaultio.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_perm	obj/user/spawnhello.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/user/spawnhello.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_perm	obj/user/testfdsharing.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/user/testfdsharing.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_perm	obj/user/testfile.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/user/testfile.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_perm	obj/user/testkbd.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/user/testkbd.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_perm	obj/user/testpipe.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/user/testpipe.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_perm	obj/user/testpiperace.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/user/testpiperace.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_perm	obj/user/testpiperace2.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/user/testpiperace2.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_perm	obj/user/testpteshare.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/user/testpteshare.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_perm	obj/user/testshell.asm	/^    env_perm = 0; $/;"	d
env_perm	obj/user/testshell.asm	/^    env_perm = thisenv->env_ipc_perm;$/;"	d
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env	access:public
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env	access:public
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
env_pop_tf	kern/env.h	/^void	env_pop_tf(struct Trapframe *tf) __attribute__((noreturn));$/;"	p	signature:(struct Trapframe *tf)
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f	signature:(struct Env *e)
env_run	kern/env.h	/^void	env_run(struct Env *e) __attribute__((noreturn));$/;"	p	signature:(struct Env *e)
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env	access:public
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:	signature:(struct Env *e)
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env	access:public
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe	access:public
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType	access:public
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/forktree.asm	/^  envid = sys_exofork();  \/\/ create child environment$/;"	d
envid	obj/user/forktree.asm	/^  envid = sys_getenvid(); \/\/ thisenv->env_id is error$/;"	d
envid	obj/user/pingpong.asm	/^  envid = sys_exofork();  \/\/ create child environment$/;"	d
envid	obj/user/pingpong.asm	/^  envid = sys_getenvid(); \/\/ thisenv->env_id is error$/;"	d
envid	obj/user/pingpongs.asm	/^  envid = sys_exofork();  \/\/ create child environment$/;"	d
envid	obj/user/pingpongs.asm	/^  envid = sys_getenvid(); \/\/ thisenv->env_id is error$/;"	d
envid	obj/user/primes.asm	/^  envid = sys_exofork();  \/\/ create child environment$/;"	d
envid	obj/user/primes.asm	/^  envid = sys_getenvid(); \/\/ thisenv->env_id is error$/;"	d
envid	obj/user/primespipe.asm	/^  envid = sys_exofork();  \/\/ create child environment$/;"	d
envid	obj/user/primespipe.asm	/^  envid = sys_getenvid(); \/\/ thisenv->env_id is error$/;"	d
envid	obj/user/sendpage.asm	/^  envid = sys_exofork();  \/\/ create child environment$/;"	d
envid	obj/user/sendpage.asm	/^  envid = sys_getenvid(); \/\/ thisenv->env_id is error$/;"	d
envid	obj/user/sh.asm	/^  envid = sys_exofork();  \/\/ create child environment$/;"	d
envid	obj/user/sh.asm	/^  envid = sys_getenvid(); \/\/ thisenv->env_id is error$/;"	d
envid	obj/user/spin.asm	/^  envid = sys_exofork();  \/\/ create child environment$/;"	d
envid	obj/user/spin.asm	/^  envid = sys_getenvid(); \/\/ thisenv->env_id is error$/;"	d
envid	obj/user/stresssched.asm	/^  envid = sys_exofork();  \/\/ create child environment$/;"	d
envid	obj/user/stresssched.asm	/^  envid = sys_getenvid(); \/\/ thisenv->env_id is error$/;"	d
envid	obj/user/testfdsharing.asm	/^  envid = sys_exofork();  \/\/ create child environment$/;"	d
envid	obj/user/testfdsharing.asm	/^  envid = sys_getenvid(); \/\/ thisenv->env_id is error$/;"	d
envid	obj/user/testpipe.asm	/^  envid = sys_exofork();  \/\/ create child environment$/;"	d
envid	obj/user/testpipe.asm	/^  envid = sys_getenvid(); \/\/ thisenv->env_id is error$/;"	d
envid	obj/user/testpiperace.asm	/^  envid = sys_exofork();  \/\/ create child environment$/;"	d
envid	obj/user/testpiperace.asm	/^  envid = sys_getenvid(); \/\/ thisenv->env_id is error$/;"	d
envid	obj/user/testpiperace2.asm	/^  envid = sys_exofork();  \/\/ create child environment$/;"	d
envid	obj/user/testpiperace2.asm	/^  envid = sys_getenvid(); \/\/ thisenv->env_id is error$/;"	d
envid	obj/user/testpteshare.asm	/^  envid = sys_exofork();  \/\/ create child environment$/;"	d
envid	obj/user/testpteshare.asm	/^  envid = sys_getenvid(); \/\/ thisenv->env_id is error$/;"	d
envid	obj/user/testshell.asm	/^  envid = sys_exofork();  \/\/ create child environment$/;"	d
envid	obj/user/testshell.asm	/^  envid = sys_getenvid(); \/\/ thisenv->env_id is error$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f	signature:(envid_t envid, struct Env **env_store, bool checkperm)
envid2env	kern/env.h	/^int	envid2env(envid_t envid, struct Env **env_store, bool checkperm);$/;"	p	signature:(envid_t envid, struct Env **env_store, bool checkperm)
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/fs/fs.asm	/^envid_t$/;"	l
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/cat.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/echo.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultio.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/icode.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/init.asm	/^envid_t$/;"	l
envid_t	obj/user/ls.asm	/^envid_t$/;"	l
envid_t	obj/user/lsfd.asm	/^envid_t$/;"	l
envid_t	obj/user/num.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/primespipe.asm	/^envid_t$/;"	l
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
envid_t	obj/user/sh.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spawnfaultio.asm	/^envid_t$/;"	l
envid_t	obj/user/spawnhello.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/testfdsharing.asm	/^envid_t$/;"	l
envid_t	obj/user/testfile.asm	/^envid_t$/;"	l
envid_t	obj/user/testkbd.asm	/^envid_t$/;"	l
envid_t	obj/user/testpipe.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace2.asm	/^envid_t$/;"	l
envid_t	obj/user/testpteshare.asm	/^envid_t$/;"	l
envid_t	obj/user/testshell.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^  envs = (struct Env *)boot_alloc(NENV * sizeof(struct Env));  $/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^  eph = ph + elf_head->e_phnum;$/;"	d
err	obj/fs/fs.asm	/^				err = -err;$/;"	d
err	obj/fs/fs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/fs/fs.asm	/^    err:$/;"	l
err	obj/fs/fs.asm	/^err:$/;"	l
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/cat.asm	/^				err = -err;$/;"	d
err	obj/user/cat.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/cat.asm	/^    err:$/;"	l
err	obj/user/cat.asm	/^err:$/;"	l
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echo.asm	/^				err = -err;$/;"	d
err	obj/user/echo.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echo.asm	/^    err:$/;"	l
err	obj/user/echo.asm	/^err:$/;"	l
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultio.asm	/^				err = -err;$/;"	d
err	obj/user/faultio.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^				err = -err;$/;"	d
err	obj/user/icode.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^    err:$/;"	l
err	obj/user/icode.asm	/^err:$/;"	l
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^				err = -err;$/;"	d
err	obj/user/init.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^    err:$/;"	l
err	obj/user/init.asm	/^err:$/;"	l
err	obj/user/ls.asm	/^				err = -err;$/;"	d
err	obj/user/ls.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/ls.asm	/^    err:$/;"	l
err	obj/user/ls.asm	/^err:$/;"	l
err	obj/user/lsfd.asm	/^				err = -err;$/;"	d
err	obj/user/lsfd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/lsfd.asm	/^    err:$/;"	l
err	obj/user/lsfd.asm	/^err:$/;"	l
err	obj/user/num.asm	/^				err = -err;$/;"	d
err	obj/user/num.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/num.asm	/^    err:$/;"	l
err	obj/user/num.asm	/^err:$/;"	l
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primespipe.asm	/^				err = -err;$/;"	d
err	obj/user/primespipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primespipe.asm	/^    err:$/;"	l
err	obj/user/primespipe.asm	/^err:$/;"	l
err	obj/user/sendpage.asm	/^				err = -err;$/;"	d
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sh.asm	/^				err = -err;$/;"	d
err	obj/user/sh.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sh.asm	/^    err:$/;"	l
err	obj/user/sh.asm	/^err:$/;"	l
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnfaultio.asm	/^				err = -err;$/;"	d
err	obj/user/spawnfaultio.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnfaultio.asm	/^    err:$/;"	l
err	obj/user/spawnfaultio.asm	/^err:$/;"	l
err	obj/user/spawnhello.asm	/^				err = -err;$/;"	d
err	obj/user/spawnhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnhello.asm	/^    err:$/;"	l
err	obj/user/spawnhello.asm	/^err:$/;"	l
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfdsharing.asm	/^				err = -err;$/;"	d
err	obj/user/testfdsharing.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfdsharing.asm	/^    err:$/;"	l
err	obj/user/testfdsharing.asm	/^err:$/;"	l
err	obj/user/testfile.asm	/^				err = -err;$/;"	d
err	obj/user/testfile.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfile.asm	/^    err:$/;"	l
err	obj/user/testfile.asm	/^err:$/;"	l
err	obj/user/testkbd.asm	/^				err = -err;$/;"	d
err	obj/user/testkbd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testkbd.asm	/^    err:$/;"	l
err	obj/user/testkbd.asm	/^err:$/;"	l
err	obj/user/testpipe.asm	/^				err = -err;$/;"	d
err	obj/user/testpipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpipe.asm	/^    err:$/;"	l
err	obj/user/testpipe.asm	/^err:$/;"	l
err	obj/user/testpiperace.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace.asm	/^    err:$/;"	l
err	obj/user/testpiperace.asm	/^err:$/;"	l
err	obj/user/testpiperace2.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace2.asm	/^    err:$/;"	l
err	obj/user/testpiperace2.asm	/^err:$/;"	l
err	obj/user/testpteshare.asm	/^				err = -err;$/;"	d
err	obj/user/testpteshare.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpteshare.asm	/^    err:$/;"	l
err	obj/user/testpteshare.asm	/^err:$/;"	l
err	obj/user/testshell.asm	/^				err = -err;$/;"	d
err	obj/user/testshell.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testshell.asm	/^    err:$/;"	l
err	obj/user/testshell.asm	/^err:$/;"	l
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
err1	obj/fs/fs.asm	/^    err1:$/;"	l
err1	obj/user/cat.asm	/^    err1:$/;"	l
err1	obj/user/echo.asm	/^    err1:$/;"	l
err1	obj/user/icode.asm	/^    err1:$/;"	l
err1	obj/user/init.asm	/^    err1:$/;"	l
err1	obj/user/ls.asm	/^    err1:$/;"	l
err1	obj/user/lsfd.asm	/^    err1:$/;"	l
err1	obj/user/num.asm	/^    err1:$/;"	l
err1	obj/user/primespipe.asm	/^    err1:$/;"	l
err1	obj/user/sh.asm	/^    err1:$/;"	l
err1	obj/user/spawnfaultio.asm	/^    err1:$/;"	l
err1	obj/user/spawnhello.asm	/^    err1:$/;"	l
err1	obj/user/testfdsharing.asm	/^    err1:$/;"	l
err1	obj/user/testfile.asm	/^    err1:$/;"	l
err1	obj/user/testkbd.asm	/^    err1:$/;"	l
err1	obj/user/testpipe.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace2.asm	/^    err1:$/;"	l
err1	obj/user/testpteshare.asm	/^    err1:$/;"	l
err1	obj/user/testshell.asm	/^    err1:$/;"	l
err2	obj/fs/fs.asm	/^    err2:$/;"	l
err2	obj/user/cat.asm	/^    err2:$/;"	l
err2	obj/user/echo.asm	/^    err2:$/;"	l
err2	obj/user/icode.asm	/^    err2:$/;"	l
err2	obj/user/init.asm	/^    err2:$/;"	l
err2	obj/user/ls.asm	/^    err2:$/;"	l
err2	obj/user/lsfd.asm	/^    err2:$/;"	l
err2	obj/user/num.asm	/^    err2:$/;"	l
err2	obj/user/primespipe.asm	/^    err2:$/;"	l
err2	obj/user/sh.asm	/^    err2:$/;"	l
err2	obj/user/spawnfaultio.asm	/^    err2:$/;"	l
err2	obj/user/spawnhello.asm	/^    err2:$/;"	l
err2	obj/user/testfdsharing.asm	/^    err2:$/;"	l
err2	obj/user/testfile.asm	/^    err2:$/;"	l
err2	obj/user/testkbd.asm	/^    err2:$/;"	l
err2	obj/user/testpipe.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace2.asm	/^    err2:$/;"	l
err2	obj/user/testpteshare.asm	/^    err2:$/;"	l
err2	obj/user/testshell.asm	/^    err2:$/;"	l
err3	obj/fs/fs.asm	/^    err3:$/;"	l
err3	obj/user/cat.asm	/^    err3:$/;"	l
err3	obj/user/echo.asm	/^    err3:$/;"	l
err3	obj/user/icode.asm	/^    err3:$/;"	l
err3	obj/user/init.asm	/^    err3:$/;"	l
err3	obj/user/ls.asm	/^    err3:$/;"	l
err3	obj/user/lsfd.asm	/^    err3:$/;"	l
err3	obj/user/num.asm	/^    err3:$/;"	l
err3	obj/user/primespipe.asm	/^    err3:$/;"	l
err3	obj/user/sh.asm	/^    err3:$/;"	l
err3	obj/user/spawnfaultio.asm	/^    err3:$/;"	l
err3	obj/user/spawnhello.asm	/^    err3:$/;"	l
err3	obj/user/testfdsharing.asm	/^    err3:$/;"	l
err3	obj/user/testfile.asm	/^    err3:$/;"	l
err3	obj/user/testkbd.asm	/^    err3:$/;"	l
err3	obj/user/testpipe.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace2.asm	/^    err3:$/;"	l
err3	obj/user/testpteshare.asm	/^    err3:$/;"	l
err3	obj/user/testshell.asm	/^    err3:$/;"	l
error	lib/fprintf.c	/^	int error;	\/\/ first error that occurred$/;"	m	struct:printbuf	file:	access:public
error	obj/user/icode.asm	/^error:$/;"	l
error	obj/user/init.asm	/^error:$/;"	l
error	obj/user/sh.asm	/^error:$/;"	l
error	obj/user/spawnfaultio.asm	/^error:$/;"	l
error	obj/user/spawnhello.asm	/^error:$/;"	l
error	obj/user/testpteshare.asm	/^error:$/;"	l
error	obj/user/testshell.asm	/^error:$/;"	l
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:	access:public
exit	inc/lib.h	/^void	exit(void);$/;"	p	signature:(void)
exit	lib/exit.c	/^exit(void)$/;"	f	signature:(void)
ext16mem	obj/kern/kernel.asm	/^	ext16mem = nvram_read(NVRAM_EXT16LO) * 64;$/;"	d
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
extmem	obj/kern/kernel.asm	/^	extmem = nvram_read(NVRAM_EXTLO);$/;"	d
f	fs/fsformat.c	/^	struct File *f;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:	access:public
f	obj/fs/fs.asm	/^	f = &super->s_root;$/;"	d
f	obj/user/cat.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f	obj/user/num.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 e0 11 00       	mov    $0x11e000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 e0 11 f0       	mov    $0xf011e000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 5c 00 00 00       	call   f010009a <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	83 3d 80 5e 1e f0 00 	cmpl   $0x0,0xf01e5e80$/;"	l
f010004f	obj/kern/kernel.asm	/^f010004f:	75 3a                	jne    f010008b <_panic+0x4b>$/;"	l
f0100051	obj/kern/kernel.asm	/^f0100051:	89 35 80 5e 1e f0    	mov    %esi,0xf01e5e80$/;"	l
f0100057	obj/kern/kernel.asm	/^f0100057:	fa                   	cli    $/;"	l
f0100058	obj/kern/kernel.asm	/^f0100058:	fc                   	cld    $/;"	l
f0100059	obj/kern/kernel.asm	/^f0100059:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	e8 71 59 00 00       	call   f01059d2 <cpunum>$/;"	l
f0100061	obj/kern/kernel.asm	/^f0100061:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	50                   	push   %eax$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	68 60 60 10 f0       	push   $0xf0106060$/;"	l
f010006d	obj/kern/kernel.asm	/^f010006d:	e8 38 36 00 00       	call   f01036aa <cprintf>$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100075	obj/kern/kernel.asm	/^f0100075:	53                   	push   %ebx$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	56                   	push   %esi$/;"	l
f0100077	obj/kern/kernel.asm	/^f0100077:	e8 08 36 00 00       	call   f0103684 <vcprintf>$/;"	l
f010007c	obj/kern/kernel.asm	/^f010007c:	c7 04 24 d2 72 10 f0 	movl   $0xf01072d2,(%esp)$/;"	l
f0100083	obj/kern/kernel.asm	/^f0100083:	e8 22 36 00 00       	call   f01036aa <cprintf>$/;"	l
f0100088	obj/kern/kernel.asm	/^f0100088:	83 c4 10             	add    $0x10,%esp$/;"	l
f010008b	obj/kern/kernel.asm	/^f010008b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	6a 00                	push   $0x0$/;"	l
f0100090	obj/kern/kernel.asm	/^f0100090:	e8 9e 08 00 00       	call   f0100933 <monitor>$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100098	obj/kern/kernel.asm	/^f0100098:	eb f1                	jmp    f010008b <_panic+0x4b>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a <i386_init>:$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	55                   	push   %ebp$/;"	l
f010009b	obj/kern/kernel.asm	/^f010009b:	89 e5                	mov    %esp,%ebp$/;"	l
f010009d	obj/kern/kernel.asm	/^f010009d:	53                   	push   %ebx$/;"	l
f010009e	obj/kern/kernel.asm	/^f010009e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	e8 87 05 00 00       	call   f010062d <cons_init>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f01000ae	obj/kern/kernel.asm	/^f01000ae:	68 cc 60 10 f0       	push   $0xf01060cc$/;"	l
f01000b3	obj/kern/kernel.asm	/^f01000b3:	e8 f2 35 00 00       	call   f01036aa <cprintf>$/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	e8 e7 11 00 00       	call   f01012a4 <mem_init>$/;"	l
f01000bd	obj/kern/kernel.asm	/^f01000bd:	e8 29 2e 00 00       	call   f0102eeb <env_init>$/;"	l
f01000c2	obj/kern/kernel.asm	/^f01000c2:	e8 c2 36 00 00       	call   f0103789 <trap_init>$/;"	l
f01000c7	obj/kern/kernel.asm	/^f01000c7:	e8 fc 55 00 00       	call   f01056c8 <mp_init>$/;"	l
f01000cc	obj/kern/kernel.asm	/^f01000cc:	e8 1c 59 00 00       	call   f01059ed <lapic_init>$/;"	l
f01000d1	obj/kern/kernel.asm	/^f01000d1:	e8 fb 34 00 00       	call   f01035d1 <pic_init>$/;"	l
f01000d6	obj/kern/kernel.asm	/^f01000d6:	c7 04 24 c0 03 12 f0 	movl   $0xf01203c0,(%esp)$/;"	l
f01000dd	obj/kern/kernel.asm	/^f01000dd:	e8 5e 5b 00 00       	call   f0105c40 <spin_lock>$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000e5	obj/kern/kernel.asm	/^f01000e5:	83 3d 88 5e 1e f0 07 	cmpl   $0x7,0xf01e5e88$/;"	l
f01000ec	obj/kern/kernel.asm	/^f01000ec:	77 16                	ja     f0100104 <i386_init+0x6a>$/;"	l
f01000ee	obj/kern/kernel.asm	/^f01000ee:	68 00 70 00 00       	push   $0x7000$/;"	l
f01000f3	obj/kern/kernel.asm	/^f01000f3:	68 84 60 10 f0       	push   $0xf0106084$/;"	l
f01000f8	obj/kern/kernel.asm	/^f01000f8:	6a 58                	push   $0x58$/;"	l
f01000fa	obj/kern/kernel.asm	/^f01000fa:	68 e7 60 10 f0       	push   $0xf01060e7$/;"	l
f01000ff	obj/kern/kernel.asm	/^f01000ff:	e8 3c ff ff ff       	call   f0100040 <_panic>$/;"	l
f0100104	obj/kern/kernel.asm	/^f0100104:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100107	obj/kern/kernel.asm	/^f0100107:	b8 2e 56 10 f0       	mov    $0xf010562e,%eax$/;"	l
f010010c	obj/kern/kernel.asm	/^f010010c:	2d b4 55 10 f0       	sub    $0xf01055b4,%eax$/;"	l
f0100111	obj/kern/kernel.asm	/^f0100111:	50                   	push   %eax$/;"	l
f0100112	obj/kern/kernel.asm	/^f0100112:	68 b4 55 10 f0       	push   $0xf01055b4$/;"	l
f0100117	obj/kern/kernel.asm	/^f0100117:	68 00 70 00 f0       	push   $0xf0007000$/;"	l
f010011c	obj/kern/kernel.asm	/^f010011c:	e8 dd 52 00 00       	call   f01053fe <memmove>$/;"	l
f0100121	obj/kern/kernel.asm	/^f0100121:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100124	obj/kern/kernel.asm	/^f0100124:	bb 20 60 1e f0       	mov    $0xf01e6020,%ebx$/;"	l
f0100129	obj/kern/kernel.asm	/^f0100129:	eb 4d                	jmp    f0100178 <i386_init+0xde>$/;"	l
f010012b	obj/kern/kernel.asm	/^f010012b:	e8 a2 58 00 00       	call   f01059d2 <cpunum>$/;"	l
f0100130	obj/kern/kernel.asm	/^f0100130:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100133	obj/kern/kernel.asm	/^f0100133:	05 20 60 1e f0       	add    $0xf01e6020,%eax$/;"	l
f0100138	obj/kern/kernel.asm	/^f0100138:	39 c3                	cmp    %eax,%ebx$/;"	l
f010013a	obj/kern/kernel.asm	/^f010013a:	74 39                	je     f0100175 <i386_init+0xdb>$/;"	l
f010013c	obj/kern/kernel.asm	/^f010013c:	89 d8                	mov    %ebx,%eax$/;"	l
f010013e	obj/kern/kernel.asm	/^f010013e:	2d 20 60 1e f0       	sub    $0xf01e6020,%eax$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0100146	obj/kern/kernel.asm	/^f0100146:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f010014c	obj/kern/kernel.asm	/^f010014c:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f010014f	obj/kern/kernel.asm	/^f010014f:	05 00 f0 1e f0       	add    $0xf01ef000,%eax$/;"	l
f0100154	obj/kern/kernel.asm	/^f0100154:	a3 84 5e 1e f0       	mov    %eax,0xf01e5e84$/;"	l
f0100159	obj/kern/kernel.asm	/^f0100159:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010015c	obj/kern/kernel.asm	/^f010015c:	68 00 70 00 00       	push   $0x7000$/;"	l
f0100161	obj/kern/kernel.asm	/^f0100161:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100164	obj/kern/kernel.asm	/^f0100164:	50                   	push   %eax$/;"	l
f0100165	obj/kern/kernel.asm	/^f0100165:	e8 d1 59 00 00       	call   f0105b3b <lapic_startap>$/;"	l
f010016a	obj/kern/kernel.asm	/^f010016a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010016d	obj/kern/kernel.asm	/^f010016d:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100173	obj/kern/kernel.asm	/^f0100173:	75 f8                	jne    f010016d <i386_init+0xd3>$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	83 c3 74             	add    $0x74,%ebx$/;"	l
f0100178	obj/kern/kernel.asm	/^f0100178:	6b 05 c4 63 1e f0 74 	imul   $0x74,0xf01e63c4,%eax$/;"	l
f010017f	obj/kern/kernel.asm	/^f010017f:	05 20 60 1e f0       	add    $0xf01e6020,%eax$/;"	l
f0100184	obj/kern/kernel.asm	/^f0100184:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100186	obj/kern/kernel.asm	/^f0100186:	72 a3                	jb     f010012b <i386_init+0x91>$/;"	l
f0100188	obj/kern/kernel.asm	/^f0100188:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010018b	obj/kern/kernel.asm	/^f010018b:	6a 00                	push   $0x0$/;"	l
f010018d	obj/kern/kernel.asm	/^f010018d:	68 d0 af 18 f0       	push   $0xf018afd0$/;"	l
f0100192	obj/kern/kernel.asm	/^f0100192:	e8 42 2f 00 00       	call   f01030d9 <env_create>$/;"	l
f0100197	obj/kern/kernel.asm	/^f0100197:	e8 35 04 00 00       	call   f01005d1 <kbd_intr>$/;"	l
f010019c	obj/kern/kernel.asm	/^f010019c:	e8 ef 40 00 00       	call   f0104290 <sched_yield>$/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1 <mp_main>:$/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1:	55                   	push   %ebp$/;"	l
f01001a2	obj/kern/kernel.asm	/^f01001a2:	89 e5                	mov    %esp,%ebp$/;"	l
f01001a4	obj/kern/kernel.asm	/^f01001a4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001a7	obj/kern/kernel.asm	/^f01001a7:	a1 8c 5e 1e f0       	mov    0xf01e5e8c,%eax$/;"	l
f01001ac	obj/kern/kernel.asm	/^f01001ac:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01001b1	obj/kern/kernel.asm	/^f01001b1:	77 12                	ja     f01001c5 <mp_main+0x24>$/;"	l
f01001b3	obj/kern/kernel.asm	/^f01001b3:	50                   	push   %eax$/;"	l
f01001b4	obj/kern/kernel.asm	/^f01001b4:	68 a8 60 10 f0       	push   $0xf01060a8$/;"	l
f01001b9	obj/kern/kernel.asm	/^f01001b9:	6a 6f                	push   $0x6f$/;"	l
f01001bb	obj/kern/kernel.asm	/^f01001bb:	68 e7 60 10 f0       	push   $0xf01060e7$/;"	l
f01001c0	obj/kern/kernel.asm	/^f01001c0:	e8 7b fe ff ff       	call   f0100040 <_panic>$/;"	l
f01001c5	obj/kern/kernel.asm	/^f01001c5:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01001ca	obj/kern/kernel.asm	/^f01001ca:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01001cd	obj/kern/kernel.asm	/^f01001cd:	e8 00 58 00 00       	call   f01059d2 <cpunum>$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001d5	obj/kern/kernel.asm	/^f01001d5:	50                   	push   %eax$/;"	l
f01001d6	obj/kern/kernel.asm	/^f01001d6:	68 f3 60 10 f0       	push   $0xf01060f3$/;"	l
f01001db	obj/kern/kernel.asm	/^f01001db:	e8 ca 34 00 00       	call   f01036aa <cprintf>$/;"	l
f01001e0	obj/kern/kernel.asm	/^f01001e0:	e8 08 58 00 00       	call   f01059ed <lapic_init>$/;"	l
f01001e5	obj/kern/kernel.asm	/^f01001e5:	e8 d1 2c 00 00       	call   f0102ebb <env_init_percpu>$/;"	l
f01001ea	obj/kern/kernel.asm	/^f01001ea:	e8 cf 34 00 00       	call   f01036be <trap_init_percpu>$/;"	l
f01001ef	obj/kern/kernel.asm	/^f01001ef:	e8 de 57 00 00       	call   f01059d2 <cpunum>$/;"	l
f01001f4	obj/kern/kernel.asm	/^f01001f4:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f01001f7	obj/kern/kernel.asm	/^f01001f7:	81 c2 20 60 1e f0    	add    $0xf01e6020,%edx$/;"	l
f01001fd	obj/kern/kernel.asm	/^f01001fd:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100202	obj/kern/kernel.asm	/^f0100202:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0100206	obj/kern/kernel.asm	/^f0100206:	c7 04 24 c0 03 12 f0 	movl   $0xf01203c0,(%esp)$/;"	l
f010020d	obj/kern/kernel.asm	/^f010020d:	e8 2e 5a 00 00       	call   f0105c40 <spin_lock>$/;"	l
f0100212	obj/kern/kernel.asm	/^f0100212:	e8 79 40 00 00       	call   f0104290 <sched_yield>$/;"	l
f0100217	obj/kern/kernel.asm	/^f0100217 <_warn>:$/;"	l
f0100217	obj/kern/kernel.asm	/^f0100217:	55                   	push   %ebp$/;"	l
f0100218	obj/kern/kernel.asm	/^f0100218:	89 e5                	mov    %esp,%ebp$/;"	l
f010021a	obj/kern/kernel.asm	/^f010021a:	53                   	push   %ebx$/;"	l
f010021b	obj/kern/kernel.asm	/^f010021b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010021e	obj/kern/kernel.asm	/^f010021e:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f0100221	obj/kern/kernel.asm	/^f0100221:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100227	obj/kern/kernel.asm	/^f0100227:	68 09 61 10 f0       	push   $0xf0106109$/;"	l
f010022c	obj/kern/kernel.asm	/^f010022c:	e8 79 34 00 00       	call   f01036aa <cprintf>$/;"	l
f0100231	obj/kern/kernel.asm	/^f0100231:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100234	obj/kern/kernel.asm	/^f0100234:	53                   	push   %ebx$/;"	l
f0100235	obj/kern/kernel.asm	/^f0100235:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100238	obj/kern/kernel.asm	/^f0100238:	e8 47 34 00 00       	call   f0103684 <vcprintf>$/;"	l
f010023d	obj/kern/kernel.asm	/^f010023d:	c7 04 24 d2 72 10 f0 	movl   $0xf01072d2,(%esp)$/;"	l
f0100244	obj/kern/kernel.asm	/^f0100244:	e8 61 34 00 00       	call   f01036aa <cprintf>$/;"	l
f0100249	obj/kern/kernel.asm	/^f0100249:	83 c4 10             	add    $0x10,%esp$/;"	l
f010024c	obj/kern/kernel.asm	/^f010024c:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	c9                   	leave  $/;"	l
f0100250	obj/kern/kernel.asm	/^f0100250:	c3                   	ret    $/;"	l
f0100251	obj/kern/kernel.asm	/^f0100251 <serial_proc_data>:$/;"	l
f0100251	obj/kern/kernel.asm	/^f0100251:	55                   	push   %ebp$/;"	l
f0100252	obj/kern/kernel.asm	/^f0100252:	89 e5                	mov    %esp,%ebp$/;"	l
f0100254	obj/kern/kernel.asm	/^f0100254:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100259	obj/kern/kernel.asm	/^f0100259:	ec                   	in     (%dx),%al$/;"	l
f010025a	obj/kern/kernel.asm	/^f010025a:	a8 01                	test   $0x1,%al$/;"	l
f010025c	obj/kern/kernel.asm	/^f010025c:	74 0b                	je     f0100269 <serial_proc_data+0x18>$/;"	l
f010025e	obj/kern/kernel.asm	/^f010025e:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100263	obj/kern/kernel.asm	/^f0100263:	ec                   	in     (%dx),%al$/;"	l
f0100264	obj/kern/kernel.asm	/^f0100264:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100267	obj/kern/kernel.asm	/^f0100267:	eb 05                	jmp    f010026e <serial_proc_data+0x1d>$/;"	l
f0100269	obj/kern/kernel.asm	/^f0100269:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010026e	obj/kern/kernel.asm	/^f010026e:	5d                   	pop    %ebp$/;"	l
f010026f	obj/kern/kernel.asm	/^f010026f:	c3                   	ret    $/;"	l
f0100270	obj/kern/kernel.asm	/^f0100270 <cons_intr>:$/;"	l
f0100270	obj/kern/kernel.asm	/^f0100270:	55                   	push   %ebp$/;"	l
f0100271	obj/kern/kernel.asm	/^f0100271:	89 e5                	mov    %esp,%ebp$/;"	l
f0100273	obj/kern/kernel.asm	/^f0100273:	53                   	push   %ebx$/;"	l
f0100274	obj/kern/kernel.asm	/^f0100274:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100277	obj/kern/kernel.asm	/^f0100277:	89 c3                	mov    %eax,%ebx$/;"	l
f0100279	obj/kern/kernel.asm	/^f0100279:	eb 2b                	jmp    f01002a6 <cons_intr+0x36>$/;"	l
f010027b	obj/kern/kernel.asm	/^f010027b:	85 c0                	test   %eax,%eax$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d:	74 27                	je     f01002a6 <cons_intr+0x36>$/;"	l
f010027f	obj/kern/kernel.asm	/^f010027f:	8b 0d 24 52 1e f0    	mov    0xf01e5224,%ecx$/;"	l
f0100285	obj/kern/kernel.asm	/^f0100285:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f0100288	obj/kern/kernel.asm	/^f0100288:	89 15 24 52 1e f0    	mov    %edx,0xf01e5224$/;"	l
f010028e	obj/kern/kernel.asm	/^f010028e:	88 81 20 50 1e f0    	mov    %al,-0xfe1afe0(%ecx)$/;"	l
f0100294	obj/kern/kernel.asm	/^f0100294:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f010029a	obj/kern/kernel.asm	/^f010029a:	75 0a                	jne    f01002a6 <cons_intr+0x36>$/;"	l
f010029c	obj/kern/kernel.asm	/^f010029c:	c7 05 24 52 1e f0 00 	movl   $0x0,0xf01e5224$/;"	l
f01002a3	obj/kern/kernel.asm	/^f01002a3:	00 00 00 $/;"	l
f01002a6	obj/kern/kernel.asm	/^f01002a6:	ff d3                	call   *%ebx$/;"	l
f01002a8	obj/kern/kernel.asm	/^f01002a8:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01002ab	obj/kern/kernel.asm	/^f01002ab:	75 ce                	jne    f010027b <cons_intr+0xb>$/;"	l
f01002ad	obj/kern/kernel.asm	/^f01002ad:	83 c4 04             	add    $0x4,%esp$/;"	l
f01002b0	obj/kern/kernel.asm	/^f01002b0:	5b                   	pop    %ebx$/;"	l
f01002b1	obj/kern/kernel.asm	/^f01002b1:	5d                   	pop    %ebp$/;"	l
f01002b2	obj/kern/kernel.asm	/^f01002b2:	c3                   	ret    $/;"	l
f01002b3	obj/kern/kernel.asm	/^f01002b3 <kbd_proc_data>:$/;"	l
f01002b3	obj/kern/kernel.asm	/^f01002b3:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f01002b8	obj/kern/kernel.asm	/^f01002b8:	ec                   	in     (%dx),%al$/;"	l
f01002b9	obj/kern/kernel.asm	/^f01002b9:	a8 01                	test   $0x1,%al$/;"	l
f01002bb	obj/kern/kernel.asm	/^f01002bb:	0f 84 f8 00 00 00    	je     f01003b9 <kbd_proc_data+0x106>$/;"	l
f01002c1	obj/kern/kernel.asm	/^f01002c1:	a8 20                	test   $0x20,%al$/;"	l
f01002c3	obj/kern/kernel.asm	/^f01002c3:	0f 85 f6 00 00 00    	jne    f01003bf <kbd_proc_data+0x10c>$/;"	l
f01002c9	obj/kern/kernel.asm	/^f01002c9:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f01002ce	obj/kern/kernel.asm	/^f01002ce:	ec                   	in     (%dx),%al$/;"	l
f01002cf	obj/kern/kernel.asm	/^f01002cf:	89 c2                	mov    %eax,%edx$/;"	l
f01002d1	obj/kern/kernel.asm	/^f01002d1:	3c e0                	cmp    $0xe0,%al$/;"	l
f01002d3	obj/kern/kernel.asm	/^f01002d3:	75 0d                	jne    f01002e2 <kbd_proc_data+0x2f>$/;"	l
f01002d5	obj/kern/kernel.asm	/^f01002d5:	83 0d 00 50 1e f0 40 	orl    $0x40,0xf01e5000$/;"	l
f01002dc	obj/kern/kernel.asm	/^f01002dc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01002e1	obj/kern/kernel.asm	/^f01002e1:	c3                   	ret    $/;"	l
f01002e2	obj/kern/kernel.asm	/^f01002e2:	55                   	push   %ebp$/;"	l
f01002e3	obj/kern/kernel.asm	/^f01002e3:	89 e5                	mov    %esp,%ebp$/;"	l
f01002e5	obj/kern/kernel.asm	/^f01002e5:	53                   	push   %ebx$/;"	l
f01002e6	obj/kern/kernel.asm	/^f01002e6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01002e9	obj/kern/kernel.asm	/^f01002e9:	84 c0                	test   %al,%al$/;"	l
f01002eb	obj/kern/kernel.asm	/^f01002eb:	79 36                	jns    f0100323 <kbd_proc_data+0x70>$/;"	l
f01002ed	obj/kern/kernel.asm	/^f01002ed:	8b 0d 00 50 1e f0    	mov    0xf01e5000,%ecx$/;"	l
f01002f3	obj/kern/kernel.asm	/^f01002f3:	89 cb                	mov    %ecx,%ebx$/;"	l
f01002f5	obj/kern/kernel.asm	/^f01002f5:	83 e3 40             	and    $0x40,%ebx$/;"	l
f01002f8	obj/kern/kernel.asm	/^f01002f8:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f01002fb	obj/kern/kernel.asm	/^f01002fb:	85 db                	test   %ebx,%ebx$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	0f b6 82 80 62 10 f0 	movzbl -0xfef9d80(%edx),%eax$/;"	l
f010030a	obj/kern/kernel.asm	/^f010030a:	83 c8 40             	or     $0x40,%eax$/;"	l
f010030d	obj/kern/kernel.asm	/^f010030d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100310	obj/kern/kernel.asm	/^f0100310:	f7 d0                	not    %eax$/;"	l
f0100312	obj/kern/kernel.asm	/^f0100312:	21 c8                	and    %ecx,%eax$/;"	l
f0100314	obj/kern/kernel.asm	/^f0100314:	a3 00 50 1e f0       	mov    %eax,0xf01e5000$/;"	l
f0100319	obj/kern/kernel.asm	/^f0100319:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010031e	obj/kern/kernel.asm	/^f010031e:	e9 a4 00 00 00       	jmp    f01003c7 <kbd_proc_data+0x114>$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	8b 0d 00 50 1e f0    	mov    0xf01e5000,%ecx$/;"	l
f0100329	obj/kern/kernel.asm	/^f0100329:	f6 c1 40             	test   $0x40,%cl$/;"	l
f010032c	obj/kern/kernel.asm	/^f010032c:	74 0e                	je     f010033c <kbd_proc_data+0x89>$/;"	l
f010032e	obj/kern/kernel.asm	/^f010032e:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0100331	obj/kern/kernel.asm	/^f0100331:	89 c2                	mov    %eax,%edx$/;"	l
f0100333	obj/kern/kernel.asm	/^f0100333:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f0100336	obj/kern/kernel.asm	/^f0100336:	89 0d 00 50 1e f0    	mov    %ecx,0xf01e5000$/;"	l
f010033c	obj/kern/kernel.asm	/^f010033c:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010033f	obj/kern/kernel.asm	/^f010033f:	0f b6 82 80 62 10 f0 	movzbl -0xfef9d80(%edx),%eax$/;"	l
f0100346	obj/kern/kernel.asm	/^f0100346:	0b 05 00 50 1e f0    	or     0xf01e5000,%eax$/;"	l
f010034c	obj/kern/kernel.asm	/^f010034c:	0f b6 8a 80 61 10 f0 	movzbl -0xfef9e80(%edx),%ecx$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	31 c8                	xor    %ecx,%eax$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	a3 00 50 1e f0       	mov    %eax,0xf01e5000$/;"	l
f010035a	obj/kern/kernel.asm	/^f010035a:	89 c1                	mov    %eax,%ecx$/;"	l
f010035c	obj/kern/kernel.asm	/^f010035c:	83 e1 03             	and    $0x3,%ecx$/;"	l
f010035f	obj/kern/kernel.asm	/^f010035f:	8b 0c 8d 60 61 10 f0 	mov    -0xfef9ea0(,%ecx,4),%ecx$/;"	l
f0100366	obj/kern/kernel.asm	/^f0100366:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f010036a	obj/kern/kernel.asm	/^f010036a:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f010036d	obj/kern/kernel.asm	/^f010036d:	a8 08                	test   $0x8,%al$/;"	l
f010036f	obj/kern/kernel.asm	/^f010036f:	74 1b                	je     f010038c <kbd_proc_data+0xd9>$/;"	l
f0100371	obj/kern/kernel.asm	/^f0100371:	89 da                	mov    %ebx,%edx$/;"	l
f0100373	obj/kern/kernel.asm	/^f0100373:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f0100376	obj/kern/kernel.asm	/^f0100376:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f0100379	obj/kern/kernel.asm	/^f0100379:	77 05                	ja     f0100380 <kbd_proc_data+0xcd>$/;"	l
f010037b	obj/kern/kernel.asm	/^f010037b:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f010037e	obj/kern/kernel.asm	/^f010037e:	eb 0c                	jmp    f010038c <kbd_proc_data+0xd9>$/;"	l
f0100380	obj/kern/kernel.asm	/^f0100380:	83 ea 41             	sub    $0x41,%edx$/;"	l
f0100383	obj/kern/kernel.asm	/^f0100383:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f0100386	obj/kern/kernel.asm	/^f0100386:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f0100389	obj/kern/kernel.asm	/^f0100389:	0f 46 d9             	cmovbe %ecx,%ebx$/;"	l
f010038c	obj/kern/kernel.asm	/^f010038c:	f7 d0                	not    %eax$/;"	l
f010038e	obj/kern/kernel.asm	/^f010038e:	a8 06                	test   $0x6,%al$/;"	l
f0100390	obj/kern/kernel.asm	/^f0100390:	75 33                	jne    f01003c5 <kbd_proc_data+0x112>$/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f0100398	obj/kern/kernel.asm	/^f0100398:	75 2b                	jne    f01003c5 <kbd_proc_data+0x112>$/;"	l
f010039a	obj/kern/kernel.asm	/^f010039a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010039d	obj/kern/kernel.asm	/^f010039d:	68 23 61 10 f0       	push   $0xf0106123$/;"	l
f01003a2	obj/kern/kernel.asm	/^f01003a2:	e8 03 33 00 00       	call   f01036aa <cprintf>$/;"	l
f01003a7	obj/kern/kernel.asm	/^f01003a7:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f01003ac	obj/kern/kernel.asm	/^f01003ac:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01003b1	obj/kern/kernel.asm	/^f01003b1:	ee                   	out    %al,(%dx)$/;"	l
f01003b2	obj/kern/kernel.asm	/^f01003b2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01003b5	obj/kern/kernel.asm	/^f01003b5:	89 d8                	mov    %ebx,%eax$/;"	l
f01003b7	obj/kern/kernel.asm	/^f01003b7:	eb 0e                	jmp    f01003c7 <kbd_proc_data+0x114>$/;"	l
f01003b9	obj/kern/kernel.asm	/^f01003b9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01003be	obj/kern/kernel.asm	/^f01003be:	c3                   	ret    $/;"	l
f01003bf	obj/kern/kernel.asm	/^f01003bf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01003c4	obj/kern/kernel.asm	/^f01003c4:	c3                   	ret    $/;"	l
f01003c5	obj/kern/kernel.asm	/^f01003c5:	89 d8                	mov    %ebx,%eax$/;"	l
f01003c7	obj/kern/kernel.asm	/^f01003c7:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01003ca	obj/kern/kernel.asm	/^f01003ca:	c9                   	leave  $/;"	l
f01003cb	obj/kern/kernel.asm	/^f01003cb:	c3                   	ret    $/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc <cons_putc>:$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	55                   	push   %ebp$/;"	l
f01003cd	obj/kern/kernel.asm	/^f01003cd:	89 e5                	mov    %esp,%ebp$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	57                   	push   %edi$/;"	l
f01003d0	obj/kern/kernel.asm	/^f01003d0:	56                   	push   %esi$/;"	l
f01003d1	obj/kern/kernel.asm	/^f01003d1:	53                   	push   %ebx$/;"	l
f01003d2	obj/kern/kernel.asm	/^f01003d2:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01003d5	obj/kern/kernel.asm	/^f01003d5:	89 c7                	mov    %eax,%edi$/;"	l
f01003d7	obj/kern/kernel.asm	/^f01003d7:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01003dc	obj/kern/kernel.asm	/^f01003dc:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f01003e1	obj/kern/kernel.asm	/^f01003e1:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f01003e6	obj/kern/kernel.asm	/^f01003e6:	eb 09                	jmp    f01003f1 <cons_putc+0x25>$/;"	l
f01003e8	obj/kern/kernel.asm	/^f01003e8:	89 ca                	mov    %ecx,%edx$/;"	l
f01003ea	obj/kern/kernel.asm	/^f01003ea:	ec                   	in     (%dx),%al$/;"	l
f01003eb	obj/kern/kernel.asm	/^f01003eb:	ec                   	in     (%dx),%al$/;"	l
f01003ec	obj/kern/kernel.asm	/^f01003ec:	ec                   	in     (%dx),%al$/;"	l
f01003ed	obj/kern/kernel.asm	/^f01003ed:	ec                   	in     (%dx),%al$/;"	l
f01003ee	obj/kern/kernel.asm	/^f01003ee:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01003f1	obj/kern/kernel.asm	/^f01003f1:	89 f2                	mov    %esi,%edx$/;"	l
f01003f3	obj/kern/kernel.asm	/^f01003f3:	ec                   	in     (%dx),%al$/;"	l
f01003f4	obj/kern/kernel.asm	/^f01003f4:	a8 20                	test   $0x20,%al$/;"	l
f01003f6	obj/kern/kernel.asm	/^f01003f6:	75 08                	jne    f0100400 <cons_putc+0x34>$/;"	l
f01003f8	obj/kern/kernel.asm	/^f01003f8:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f01003fe	obj/kern/kernel.asm	/^f01003fe:	7e e8                	jle    f01003e8 <cons_putc+0x1c>$/;"	l
f0100400	obj/kern/kernel.asm	/^f0100400:	89 f8                	mov    %edi,%eax$/;"	l
f0100402	obj/kern/kernel.asm	/^f0100402:	88 45 e7             	mov    %al,-0x19(%ebp)$/;"	l
f0100405	obj/kern/kernel.asm	/^f0100405:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010040a	obj/kern/kernel.asm	/^f010040a:	ee                   	out    %al,(%dx)$/;"	l
f010040b	obj/kern/kernel.asm	/^f010040b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100410	obj/kern/kernel.asm	/^f0100410:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f0100415	obj/kern/kernel.asm	/^f0100415:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f010041a	obj/kern/kernel.asm	/^f010041a:	eb 09                	jmp    f0100425 <cons_putc+0x59>$/;"	l
f010041c	obj/kern/kernel.asm	/^f010041c:	89 ca                	mov    %ecx,%edx$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	ec                   	in     (%dx),%al$/;"	l
f010041f	obj/kern/kernel.asm	/^f010041f:	ec                   	in     (%dx),%al$/;"	l
f0100420	obj/kern/kernel.asm	/^f0100420:	ec                   	in     (%dx),%al$/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421:	ec                   	in     (%dx),%al$/;"	l
f0100422	obj/kern/kernel.asm	/^f0100422:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100425	obj/kern/kernel.asm	/^f0100425:	89 f2                	mov    %esi,%edx$/;"	l
f0100427	obj/kern/kernel.asm	/^f0100427:	ec                   	in     (%dx),%al$/;"	l
f0100428	obj/kern/kernel.asm	/^f0100428:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f010042e	obj/kern/kernel.asm	/^f010042e:	7f 04                	jg     f0100434 <cons_putc+0x68>$/;"	l
f0100430	obj/kern/kernel.asm	/^f0100430:	84 c0                	test   %al,%al$/;"	l
f0100432	obj/kern/kernel.asm	/^f0100432:	79 e8                	jns    f010041c <cons_putc+0x50>$/;"	l
f0100434	obj/kern/kernel.asm	/^f0100434:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f010043d	obj/kern/kernel.asm	/^f010043d:	ee                   	out    %al,(%dx)$/;"	l
f010043e	obj/kern/kernel.asm	/^f010043e:	ba 7a 03 00 00       	mov    $0x37a,%edx$/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f0100448	obj/kern/kernel.asm	/^f0100448:	ee                   	out    %al,(%dx)$/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f010044e	obj/kern/kernel.asm	/^f010044e:	ee                   	out    %al,(%dx)$/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	89 fa                	mov    %edi,%edx$/;"	l
f0100451	obj/kern/kernel.asm	/^f0100451:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f0100457	obj/kern/kernel.asm	/^f0100457:	89 f8                	mov    %edi,%eax$/;"	l
f0100459	obj/kern/kernel.asm	/^f0100459:	80 cc 07             	or     $0x7,%ah$/;"	l
f010045c	obj/kern/kernel.asm	/^f010045c:	85 d2                	test   %edx,%edx$/;"	l
f010045e	obj/kern/kernel.asm	/^f010045e:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f0100461	obj/kern/kernel.asm	/^f0100461:	89 f8                	mov    %edi,%eax$/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100466	obj/kern/kernel.asm	/^f0100466:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100469	obj/kern/kernel.asm	/^f0100469:	74 74                	je     f01004df <cons_putc+0x113>$/;"	l
f010046b	obj/kern/kernel.asm	/^f010046b:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010046e	obj/kern/kernel.asm	/^f010046e:	7f 0a                	jg     f010047a <cons_putc+0xae>$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100473	obj/kern/kernel.asm	/^f0100473:	74 14                	je     f0100489 <cons_putc+0xbd>$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	e9 99 00 00 00       	jmp    f0100513 <cons_putc+0x147>$/;"	l
f010047a	obj/kern/kernel.asm	/^f010047a:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f010047d	obj/kern/kernel.asm	/^f010047d:	74 3a                	je     f01004b9 <cons_putc+0xed>$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0100482	obj/kern/kernel.asm	/^f0100482:	74 3d                	je     f01004c1 <cons_putc+0xf5>$/;"	l
f0100484	obj/kern/kernel.asm	/^f0100484:	e9 8a 00 00 00       	jmp    f0100513 <cons_putc+0x147>$/;"	l
f0100489	obj/kern/kernel.asm	/^f0100489:	0f b7 05 28 52 1e f0 	movzwl 0xf01e5228,%eax$/;"	l
f0100490	obj/kern/kernel.asm	/^f0100490:	66 85 c0             	test   %ax,%ax$/;"	l
f0100493	obj/kern/kernel.asm	/^f0100493:	0f 84 e6 00 00 00    	je     f010057f <cons_putc+0x1b3>$/;"	l
f0100499	obj/kern/kernel.asm	/^f0100499:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010049c	obj/kern/kernel.asm	/^f010049c:	66 a3 28 52 1e f0    	mov    %ax,0xf01e5228$/;"	l
f01004a2	obj/kern/kernel.asm	/^f01004a2:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01004a5	obj/kern/kernel.asm	/^f01004a5:	66 81 e7 00 ff       	and    $0xff00,%di$/;"	l
f01004aa	obj/kern/kernel.asm	/^f01004aa:	83 cf 20             	or     $0x20,%edi$/;"	l
f01004ad	obj/kern/kernel.asm	/^f01004ad:	8b 15 2c 52 1e f0    	mov    0xf01e522c,%edx$/;"	l
f01004b3	obj/kern/kernel.asm	/^f01004b3:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f01004b7	obj/kern/kernel.asm	/^f01004b7:	eb 78                	jmp    f0100531 <cons_putc+0x165>$/;"	l
f01004b9	obj/kern/kernel.asm	/^f01004b9:	66 83 05 28 52 1e f0 	addw   $0x50,0xf01e5228$/;"	l
f01004c0	obj/kern/kernel.asm	/^f01004c0:	50 $/;"	l
f01004c1	obj/kern/kernel.asm	/^f01004c1:	0f b7 05 28 52 1e f0 	movzwl 0xf01e5228,%eax$/;"	l
f01004c8	obj/kern/kernel.asm	/^f01004c8:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f01004ce	obj/kern/kernel.asm	/^f01004ce:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f01004d1	obj/kern/kernel.asm	/^f01004d1:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01004d4	obj/kern/kernel.asm	/^f01004d4:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01004d7	obj/kern/kernel.asm	/^f01004d7:	66 a3 28 52 1e f0    	mov    %ax,0xf01e5228$/;"	l
f01004dd	obj/kern/kernel.asm	/^f01004dd:	eb 52                	jmp    f0100531 <cons_putc+0x165>$/;"	l
f01004df	obj/kern/kernel.asm	/^f01004df:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004e4	obj/kern/kernel.asm	/^f01004e4:	e8 e3 fe ff ff       	call   f01003cc <cons_putc>$/;"	l
f01004e9	obj/kern/kernel.asm	/^f01004e9:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004ee	obj/kern/kernel.asm	/^f01004ee:	e8 d9 fe ff ff       	call   f01003cc <cons_putc>$/;"	l
f01004f3	obj/kern/kernel.asm	/^f01004f3:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004f8	obj/kern/kernel.asm	/^f01004f8:	e8 cf fe ff ff       	call   f01003cc <cons_putc>$/;"	l
f01004fd	obj/kern/kernel.asm	/^f01004fd:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100502	obj/kern/kernel.asm	/^f0100502:	e8 c5 fe ff ff       	call   f01003cc <cons_putc>$/;"	l
f0100507	obj/kern/kernel.asm	/^f0100507:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010050c	obj/kern/kernel.asm	/^f010050c:	e8 bb fe ff ff       	call   f01003cc <cons_putc>$/;"	l
f0100511	obj/kern/kernel.asm	/^f0100511:	eb 1e                	jmp    f0100531 <cons_putc+0x165>$/;"	l
f0100513	obj/kern/kernel.asm	/^f0100513:	0f b7 05 28 52 1e f0 	movzwl 0xf01e5228,%eax$/;"	l
f010051a	obj/kern/kernel.asm	/^f010051a:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	66 89 15 28 52 1e f0 	mov    %dx,0xf01e5228$/;"	l
f0100524	obj/kern/kernel.asm	/^f0100524:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100527	obj/kern/kernel.asm	/^f0100527:	8b 15 2c 52 1e f0    	mov    0xf01e522c,%edx$/;"	l
f010052d	obj/kern/kernel.asm	/^f010052d:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f0100531	obj/kern/kernel.asm	/^f0100531:	66 81 3d 28 52 1e f0 	cmpw   $0x7cf,0xf01e5228$/;"	l
f0100538	obj/kern/kernel.asm	/^f0100538:	cf 07 $/;"	l
f010053a	obj/kern/kernel.asm	/^f010053a:	76 43                	jbe    f010057f <cons_putc+0x1b3>$/;"	l
f010053c	obj/kern/kernel.asm	/^f010053c:	a1 2c 52 1e f0       	mov    0xf01e522c,%eax$/;"	l
f0100541	obj/kern/kernel.asm	/^f0100541:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100544	obj/kern/kernel.asm	/^f0100544:	68 00 0f 00 00       	push   $0xf00$/;"	l
f0100549	obj/kern/kernel.asm	/^f0100549:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f010054f	obj/kern/kernel.asm	/^f010054f:	52                   	push   %edx$/;"	l
f0100550	obj/kern/kernel.asm	/^f0100550:	50                   	push   %eax$/;"	l
f0100551	obj/kern/kernel.asm	/^f0100551:	e8 a8 4e 00 00       	call   f01053fe <memmove>$/;"	l
f0100556	obj/kern/kernel.asm	/^f0100556:	8b 15 2c 52 1e f0    	mov    0xf01e522c,%edx$/;"	l
f010055c	obj/kern/kernel.asm	/^f010055c:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f0100562	obj/kern/kernel.asm	/^f0100562:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f0100568	obj/kern/kernel.asm	/^f0100568:	83 c4 10             	add    $0x10,%esp$/;"	l
f010056b	obj/kern/kernel.asm	/^f010056b:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f0100570	obj/kern/kernel.asm	/^f0100570:	83 c0 02             	add    $0x2,%eax$/;"	l
f0100573	obj/kern/kernel.asm	/^f0100573:	39 d0                	cmp    %edx,%eax$/;"	l
f0100575	obj/kern/kernel.asm	/^f0100575:	75 f4                	jne    f010056b <cons_putc+0x19f>$/;"	l
f0100577	obj/kern/kernel.asm	/^f0100577:	66 83 2d 28 52 1e f0 	subw   $0x50,0xf01e5228$/;"	l
f010057e	obj/kern/kernel.asm	/^f010057e:	50 $/;"	l
f010057f	obj/kern/kernel.asm	/^f010057f:	8b 0d 30 52 1e f0    	mov    0xf01e5230,%ecx$/;"	l
f0100585	obj/kern/kernel.asm	/^f0100585:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010058a	obj/kern/kernel.asm	/^f010058a:	89 ca                	mov    %ecx,%edx$/;"	l
f010058c	obj/kern/kernel.asm	/^f010058c:	ee                   	out    %al,(%dx)$/;"	l
f010058d	obj/kern/kernel.asm	/^f010058d:	0f b7 1d 28 52 1e f0 	movzwl 0xf01e5228,%ebx$/;"	l
f0100594	obj/kern/kernel.asm	/^f0100594:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f0100597	obj/kern/kernel.asm	/^f0100597:	89 d8                	mov    %ebx,%eax$/;"	l
f0100599	obj/kern/kernel.asm	/^f0100599:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f010059d	obj/kern/kernel.asm	/^f010059d:	89 f2                	mov    %esi,%edx$/;"	l
f010059f	obj/kern/kernel.asm	/^f010059f:	ee                   	out    %al,(%dx)$/;"	l
f01005a0	obj/kern/kernel.asm	/^f01005a0:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01005a5	obj/kern/kernel.asm	/^f01005a5:	89 ca                	mov    %ecx,%edx$/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7:	ee                   	out    %al,(%dx)$/;"	l
f01005a8	obj/kern/kernel.asm	/^f01005a8:	89 d8                	mov    %ebx,%eax$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	89 f2                	mov    %esi,%edx$/;"	l
f01005ac	obj/kern/kernel.asm	/^f01005ac:	ee                   	out    %al,(%dx)$/;"	l
f01005ad	obj/kern/kernel.asm	/^f01005ad:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01005b0	obj/kern/kernel.asm	/^f01005b0:	5b                   	pop    %ebx$/;"	l
f01005b1	obj/kern/kernel.asm	/^f01005b1:	5e                   	pop    %esi$/;"	l
f01005b2	obj/kern/kernel.asm	/^f01005b2:	5f                   	pop    %edi$/;"	l
f01005b3	obj/kern/kernel.asm	/^f01005b3:	5d                   	pop    %ebp$/;"	l
f01005b4	obj/kern/kernel.asm	/^f01005b4:	c3                   	ret    $/;"	l
f01005b5	obj/kern/kernel.asm	/^f01005b5 <serial_intr>:$/;"	l
f01005b5	obj/kern/kernel.asm	/^f01005b5:	80 3d 34 52 1e f0 00 	cmpb   $0x0,0xf01e5234$/;"	l
f01005bc	obj/kern/kernel.asm	/^f01005bc:	74 11                	je     f01005cf <serial_intr+0x1a>$/;"	l
f01005be	obj/kern/kernel.asm	/^f01005be:	55                   	push   %ebp$/;"	l
f01005bf	obj/kern/kernel.asm	/^f01005bf:	89 e5                	mov    %esp,%ebp$/;"	l
f01005c1	obj/kern/kernel.asm	/^f01005c1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005c4	obj/kern/kernel.asm	/^f01005c4:	b8 51 02 10 f0       	mov    $0xf0100251,%eax$/;"	l
f01005c9	obj/kern/kernel.asm	/^f01005c9:	e8 a2 fc ff ff       	call   f0100270 <cons_intr>$/;"	l
f01005ce	obj/kern/kernel.asm	/^f01005ce:	c9                   	leave  $/;"	l
f01005cf	obj/kern/kernel.asm	/^f01005cf:	f3 c3                	repz ret $/;"	l
f01005d1	obj/kern/kernel.asm	/^f01005d1 <kbd_intr>:$/;"	l
f01005d1	obj/kern/kernel.asm	/^f01005d1:	55                   	push   %ebp$/;"	l
f01005d2	obj/kern/kernel.asm	/^f01005d2:	89 e5                	mov    %esp,%ebp$/;"	l
f01005d4	obj/kern/kernel.asm	/^f01005d4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005d7	obj/kern/kernel.asm	/^f01005d7:	b8 b3 02 10 f0       	mov    $0xf01002b3,%eax$/;"	l
f01005dc	obj/kern/kernel.asm	/^f01005dc:	e8 8f fc ff ff       	call   f0100270 <cons_intr>$/;"	l
f01005e1	obj/kern/kernel.asm	/^f01005e1:	c9                   	leave  $/;"	l
f01005e2	obj/kern/kernel.asm	/^f01005e2:	c3                   	ret    $/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3 <cons_getc>:$/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3:	55                   	push   %ebp$/;"	l
f01005e4	obj/kern/kernel.asm	/^f01005e4:	89 e5                	mov    %esp,%ebp$/;"	l
f01005e6	obj/kern/kernel.asm	/^f01005e6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005e9	obj/kern/kernel.asm	/^f01005e9:	e8 c7 ff ff ff       	call   f01005b5 <serial_intr>$/;"	l
f01005ee	obj/kern/kernel.asm	/^f01005ee:	e8 de ff ff ff       	call   f01005d1 <kbd_intr>$/;"	l
f01005f3	obj/kern/kernel.asm	/^f01005f3:	a1 20 52 1e f0       	mov    0xf01e5220,%eax$/;"	l
f01005f8	obj/kern/kernel.asm	/^f01005f8:	3b 05 24 52 1e f0    	cmp    0xf01e5224,%eax$/;"	l
f01005fe	obj/kern/kernel.asm	/^f01005fe:	74 26                	je     f0100626 <cons_getc+0x43>$/;"	l
f0100600	obj/kern/kernel.asm	/^f0100600:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100603	obj/kern/kernel.asm	/^f0100603:	89 15 20 52 1e f0    	mov    %edx,0xf01e5220$/;"	l
f0100609	obj/kern/kernel.asm	/^f0100609:	0f b6 88 20 50 1e f0 	movzbl -0xfe1afe0(%eax),%ecx$/;"	l
f0100610	obj/kern/kernel.asm	/^f0100610:	89 c8                	mov    %ecx,%eax$/;"	l
f0100612	obj/kern/kernel.asm	/^f0100612:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f0100618	obj/kern/kernel.asm	/^f0100618:	75 11                	jne    f010062b <cons_getc+0x48>$/;"	l
f010061a	obj/kern/kernel.asm	/^f010061a:	c7 05 20 52 1e f0 00 	movl   $0x0,0xf01e5220$/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621:	00 00 00 $/;"	l
f0100624	obj/kern/kernel.asm	/^f0100624:	eb 05                	jmp    f010062b <cons_getc+0x48>$/;"	l
f0100626	obj/kern/kernel.asm	/^f0100626:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010062b	obj/kern/kernel.asm	/^f010062b:	c9                   	leave  $/;"	l
f010062c	obj/kern/kernel.asm	/^f010062c:	c3                   	ret    $/;"	l
f010062d	obj/kern/kernel.asm	/^f010062d <cons_init>:$/;"	l
f010062d	obj/kern/kernel.asm	/^f010062d:	55                   	push   %ebp$/;"	l
f010062e	obj/kern/kernel.asm	/^f010062e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	57                   	push   %edi$/;"	l
f0100631	obj/kern/kernel.asm	/^f0100631:	56                   	push   %esi$/;"	l
f0100632	obj/kern/kernel.asm	/^f0100632:	53                   	push   %ebx$/;"	l
f0100633	obj/kern/kernel.asm	/^f0100633:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100636	obj/kern/kernel.asm	/^f0100636:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f0100644	obj/kern/kernel.asm	/^f0100644:	5a a5 $/;"	l
f0100646	obj/kern/kernel.asm	/^f0100646:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f010064d	obj/kern/kernel.asm	/^f010064d:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f0100651	obj/kern/kernel.asm	/^f0100651:	74 11                	je     f0100664 <cons_init+0x37>$/;"	l
f0100653	obj/kern/kernel.asm	/^f0100653:	c7 05 30 52 1e f0 b4 	movl   $0x3b4,0xf01e5230$/;"	l
f010065a	obj/kern/kernel.asm	/^f010065a:	03 00 00 $/;"	l
f010065d	obj/kern/kernel.asm	/^f010065d:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f0100662	obj/kern/kernel.asm	/^f0100662:	eb 16                	jmp    f010067a <cons_init+0x4d>$/;"	l
f0100664	obj/kern/kernel.asm	/^f0100664:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f010066b	obj/kern/kernel.asm	/^f010066b:	c7 05 30 52 1e f0 d4 	movl   $0x3d4,0xf01e5230$/;"	l
f0100672	obj/kern/kernel.asm	/^f0100672:	03 00 00 $/;"	l
f0100675	obj/kern/kernel.asm	/^f0100675:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f010067a	obj/kern/kernel.asm	/^f010067a:	8b 3d 30 52 1e f0    	mov    0xf01e5230,%edi$/;"	l
f0100680	obj/kern/kernel.asm	/^f0100680:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100685	obj/kern/kernel.asm	/^f0100685:	89 fa                	mov    %edi,%edx$/;"	l
f0100687	obj/kern/kernel.asm	/^f0100687:	ee                   	out    %al,(%dx)$/;"	l
f0100688	obj/kern/kernel.asm	/^f0100688:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f010068b	obj/kern/kernel.asm	/^f010068b:	89 da                	mov    %ebx,%edx$/;"	l
f010068d	obj/kern/kernel.asm	/^f010068d:	ec                   	in     (%dx),%al$/;"	l
f010068e	obj/kern/kernel.asm	/^f010068e:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f0100691	obj/kern/kernel.asm	/^f0100691:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f0100694	obj/kern/kernel.asm	/^f0100694:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100699	obj/kern/kernel.asm	/^f0100699:	89 fa                	mov    %edi,%edx$/;"	l
f010069b	obj/kern/kernel.asm	/^f010069b:	ee                   	out    %al,(%dx)$/;"	l
f010069c	obj/kern/kernel.asm	/^f010069c:	89 da                	mov    %ebx,%edx$/;"	l
f010069e	obj/kern/kernel.asm	/^f010069e:	ec                   	in     (%dx),%al$/;"	l
f010069f	obj/kern/kernel.asm	/^f010069f:	89 35 2c 52 1e f0    	mov    %esi,0xf01e522c$/;"	l
f01006a5	obj/kern/kernel.asm	/^f01006a5:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01006a8	obj/kern/kernel.asm	/^f01006a8:	09 c8                	or     %ecx,%eax$/;"	l
f01006aa	obj/kern/kernel.asm	/^f01006aa:	66 a3 28 52 1e f0    	mov    %ax,0xf01e5228$/;"	l
f01006b0	obj/kern/kernel.asm	/^f01006b0:	e8 1c ff ff ff       	call   f01005d1 <kbd_intr>$/;"	l
f01006b5	obj/kern/kernel.asm	/^f01006b5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01006b8	obj/kern/kernel.asm	/^f01006b8:	0f b7 05 a8 03 12 f0 	movzwl 0xf01203a8,%eax$/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f01006c4	obj/kern/kernel.asm	/^f01006c4:	50                   	push   %eax$/;"	l
f01006c5	obj/kern/kernel.asm	/^f01006c5:	e8 8f 2e 00 00       	call   f0103559 <irq_setmask_8259A>$/;"	l
f01006ca	obj/kern/kernel.asm	/^f01006ca:	be fa 03 00 00       	mov    $0x3fa,%esi$/;"	l
f01006cf	obj/kern/kernel.asm	/^f01006cf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006d4	obj/kern/kernel.asm	/^f01006d4:	89 f2                	mov    %esi,%edx$/;"	l
f01006d6	obj/kern/kernel.asm	/^f01006d6:	ee                   	out    %al,(%dx)$/;"	l
f01006d7	obj/kern/kernel.asm	/^f01006d7:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f01006dc	obj/kern/kernel.asm	/^f01006dc:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	ee                   	out    %al,(%dx)$/;"	l
f01006e2	obj/kern/kernel.asm	/^f01006e2:	bb f8 03 00 00       	mov    $0x3f8,%ebx$/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f01006ec	obj/kern/kernel.asm	/^f01006ec:	89 da                	mov    %ebx,%edx$/;"	l
f01006ee	obj/kern/kernel.asm	/^f01006ee:	ee                   	out    %al,(%dx)$/;"	l
f01006ef	obj/kern/kernel.asm	/^f01006ef:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f01006f4	obj/kern/kernel.asm	/^f01006f4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006f9	obj/kern/kernel.asm	/^f01006f9:	ee                   	out    %al,(%dx)$/;"	l
f01006fa	obj/kern/kernel.asm	/^f01006fa:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f01006ff	obj/kern/kernel.asm	/^f01006ff:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100704	obj/kern/kernel.asm	/^f0100704:	ee                   	out    %al,(%dx)$/;"	l
f0100705	obj/kern/kernel.asm	/^f0100705:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
f010070a	obj/kern/kernel.asm	/^f010070a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010070f	obj/kern/kernel.asm	/^f010070f:	ee                   	out    %al,(%dx)$/;"	l
f0100710	obj/kern/kernel.asm	/^f0100710:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f0100715	obj/kern/kernel.asm	/^f0100715:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010071a	obj/kern/kernel.asm	/^f010071a:	ee                   	out    %al,(%dx)$/;"	l
f010071b	obj/kern/kernel.asm	/^f010071b:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100720	obj/kern/kernel.asm	/^f0100720:	ec                   	in     (%dx),%al$/;"	l
f0100721	obj/kern/kernel.asm	/^f0100721:	89 c1                	mov    %eax,%ecx$/;"	l
f0100723	obj/kern/kernel.asm	/^f0100723:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	3c ff                	cmp    $0xff,%al$/;"	l
f0100728	obj/kern/kernel.asm	/^f0100728:	0f 95 05 34 52 1e f0 	setne  0xf01e5234$/;"	l
f010072f	obj/kern/kernel.asm	/^f010072f:	89 f2                	mov    %esi,%edx$/;"	l
f0100731	obj/kern/kernel.asm	/^f0100731:	ec                   	in     (%dx),%al$/;"	l
f0100732	obj/kern/kernel.asm	/^f0100732:	89 da                	mov    %ebx,%edx$/;"	l
f0100734	obj/kern/kernel.asm	/^f0100734:	ec                   	in     (%dx),%al$/;"	l
f0100735	obj/kern/kernel.asm	/^f0100735:	80 f9 ff             	cmp    $0xff,%cl$/;"	l
f0100738	obj/kern/kernel.asm	/^f0100738:	74 21                	je     f010075b <cons_init+0x12e>$/;"	l
f010073a	obj/kern/kernel.asm	/^f010073a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010073d	obj/kern/kernel.asm	/^f010073d:	0f b7 05 a8 03 12 f0 	movzwl 0xf01203a8,%eax$/;"	l
f0100744	obj/kern/kernel.asm	/^f0100744:	25 ef ff 00 00       	and    $0xffef,%eax$/;"	l
f0100749	obj/kern/kernel.asm	/^f0100749:	50                   	push   %eax$/;"	l
f010074a	obj/kern/kernel.asm	/^f010074a:	e8 0a 2e 00 00       	call   f0103559 <irq_setmask_8259A>$/;"	l
f010074f	obj/kern/kernel.asm	/^f010074f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100752	obj/kern/kernel.asm	/^f0100752:	80 3d 34 52 1e f0 00 	cmpb   $0x0,0xf01e5234$/;"	l
f0100759	obj/kern/kernel.asm	/^f0100759:	75 10                	jne    f010076b <cons_init+0x13e>$/;"	l
f010075b	obj/kern/kernel.asm	/^f010075b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010075e	obj/kern/kernel.asm	/^f010075e:	68 2f 61 10 f0       	push   $0xf010612f$/;"	l
f0100763	obj/kern/kernel.asm	/^f0100763:	e8 42 2f 00 00       	call   f01036aa <cprintf>$/;"	l
f0100768	obj/kern/kernel.asm	/^f0100768:	83 c4 10             	add    $0x10,%esp$/;"	l
f010076b	obj/kern/kernel.asm	/^f010076b:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010076e	obj/kern/kernel.asm	/^f010076e:	5b                   	pop    %ebx$/;"	l
f010076f	obj/kern/kernel.asm	/^f010076f:	5e                   	pop    %esi$/;"	l
f0100770	obj/kern/kernel.asm	/^f0100770:	5f                   	pop    %edi$/;"	l
f0100771	obj/kern/kernel.asm	/^f0100771:	5d                   	pop    %ebp$/;"	l
f0100772	obj/kern/kernel.asm	/^f0100772:	c3                   	ret    $/;"	l
f0100773	obj/kern/kernel.asm	/^f0100773 <cputchar>:$/;"	l
f0100773	obj/kern/kernel.asm	/^f0100773:	55                   	push   %ebp$/;"	l
f0100774	obj/kern/kernel.asm	/^f0100774:	89 e5                	mov    %esp,%ebp$/;"	l
f0100776	obj/kern/kernel.asm	/^f0100776:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100779	obj/kern/kernel.asm	/^f0100779:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010077c	obj/kern/kernel.asm	/^f010077c:	e8 4b fc ff ff       	call   f01003cc <cons_putc>$/;"	l
f0100781	obj/kern/kernel.asm	/^f0100781:	c9                   	leave  $/;"	l
f0100782	obj/kern/kernel.asm	/^f0100782:	c3                   	ret    $/;"	l
f0100783	obj/kern/kernel.asm	/^f0100783 <getchar>:$/;"	l
f0100783	obj/kern/kernel.asm	/^f0100783:	55                   	push   %ebp$/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784:	89 e5                	mov    %esp,%ebp$/;"	l
f0100786	obj/kern/kernel.asm	/^f0100786:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100789	obj/kern/kernel.asm	/^f0100789:	e8 55 fe ff ff       	call   f01005e3 <cons_getc>$/;"	l
f010078e	obj/kern/kernel.asm	/^f010078e:	85 c0                	test   %eax,%eax$/;"	l
f0100790	obj/kern/kernel.asm	/^f0100790:	74 f7                	je     f0100789 <getchar+0x6>$/;"	l
f0100792	obj/kern/kernel.asm	/^f0100792:	c9                   	leave  $/;"	l
f0100793	obj/kern/kernel.asm	/^f0100793:	c3                   	ret    $/;"	l
f0100794	obj/kern/kernel.asm	/^f0100794 <iscons>:$/;"	l
f0100794	obj/kern/kernel.asm	/^f0100794:	55                   	push   %ebp$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	89 e5                	mov    %esp,%ebp$/;"	l
f0100797	obj/kern/kernel.asm	/^f0100797:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010079c	obj/kern/kernel.asm	/^f010079c:	5d                   	pop    %ebp$/;"	l
f010079d	obj/kern/kernel.asm	/^f010079d:	c3                   	ret    $/;"	l
f010079e	obj/kern/kernel.asm	/^f010079e <mon_help>:$/;"	l
f010079e	obj/kern/kernel.asm	/^f010079e:	55                   	push   %ebp$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	89 e5                	mov    %esp,%ebp$/;"	l
f01007a1	obj/kern/kernel.asm	/^f01007a1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01007a4	obj/kern/kernel.asm	/^f01007a4:	68 80 63 10 f0       	push   $0xf0106380$/;"	l
f01007a9	obj/kern/kernel.asm	/^f01007a9:	68 9e 63 10 f0       	push   $0xf010639e$/;"	l
f01007ae	obj/kern/kernel.asm	/^f01007ae:	68 a3 63 10 f0       	push   $0xf01063a3$/;"	l
f01007b3	obj/kern/kernel.asm	/^f01007b3:	e8 f2 2e 00 00       	call   f01036aa <cprintf>$/;"	l
f01007b8	obj/kern/kernel.asm	/^f01007b8:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007bb	obj/kern/kernel.asm	/^f01007bb:	68 60 64 10 f0       	push   $0xf0106460$/;"	l
f01007c0	obj/kern/kernel.asm	/^f01007c0:	68 ac 63 10 f0       	push   $0xf01063ac$/;"	l
f01007c5	obj/kern/kernel.asm	/^f01007c5:	68 a3 63 10 f0       	push   $0xf01063a3$/;"	l
f01007ca	obj/kern/kernel.asm	/^f01007ca:	e8 db 2e 00 00       	call   f01036aa <cprintf>$/;"	l
f01007cf	obj/kern/kernel.asm	/^f01007cf:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007d2	obj/kern/kernel.asm	/^f01007d2:	68 b5 63 10 f0       	push   $0xf01063b5$/;"	l
f01007d7	obj/kern/kernel.asm	/^f01007d7:	68 d3 63 10 f0       	push   $0xf01063d3$/;"	l
f01007dc	obj/kern/kernel.asm	/^f01007dc:	68 a3 63 10 f0       	push   $0xf01063a3$/;"	l
f01007e1	obj/kern/kernel.asm	/^f01007e1:	e8 c4 2e 00 00       	call   f01036aa <cprintf>$/;"	l
f01007e6	obj/kern/kernel.asm	/^f01007e6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007eb	obj/kern/kernel.asm	/^f01007eb:	c9                   	leave  $/;"	l
f01007ec	obj/kern/kernel.asm	/^f01007ec:	c3                   	ret    $/;"	l
f01007ed	obj/kern/kernel.asm	/^f01007ed <mon_kerninfo>:$/;"	l
f01007ed	obj/kern/kernel.asm	/^f01007ed:	55                   	push   %ebp$/;"	l
f01007ee	obj/kern/kernel.asm	/^f01007ee:	89 e5                	mov    %esp,%ebp$/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01007f3	obj/kern/kernel.asm	/^f01007f3:	68 dd 63 10 f0       	push   $0xf01063dd$/;"	l
f01007f8	obj/kern/kernel.asm	/^f01007f8:	e8 ad 2e 00 00       	call   f01036aa <cprintf>$/;"	l
f01007fd	obj/kern/kernel.asm	/^f01007fd:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f0100805	obj/kern/kernel.asm	/^f0100805:	68 88 64 10 f0       	push   $0xf0106488$/;"	l
f010080a	obj/kern/kernel.asm	/^f010080a:	e8 9b 2e 00 00       	call   f01036aa <cprintf>$/;"	l
f010080f	obj/kern/kernel.asm	/^f010080f:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100812	obj/kern/kernel.asm	/^f0100812:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f0100817	obj/kern/kernel.asm	/^f0100817:	68 0c 00 10 f0       	push   $0xf010000c$/;"	l
f010081c	obj/kern/kernel.asm	/^f010081c:	68 b0 64 10 f0       	push   $0xf01064b0$/;"	l
f0100821	obj/kern/kernel.asm	/^f0100821:	e8 84 2e 00 00       	call   f01036aa <cprintf>$/;"	l
f0100826	obj/kern/kernel.asm	/^f0100826:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100829	obj/kern/kernel.asm	/^f0100829:	68 51 60 10 00       	push   $0x106051$/;"	l
f010082e	obj/kern/kernel.asm	/^f010082e:	68 51 60 10 f0       	push   $0xf0106051$/;"	l
f0100833	obj/kern/kernel.asm	/^f0100833:	68 d4 64 10 f0       	push   $0xf01064d4$/;"	l
f0100838	obj/kern/kernel.asm	/^f0100838:	e8 6d 2e 00 00       	call   f01036aa <cprintf>$/;"	l
f010083d	obj/kern/kernel.asm	/^f010083d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100840	obj/kern/kernel.asm	/^f0100840:	68 00 50 1e 00       	push   $0x1e5000$/;"	l
f0100845	obj/kern/kernel.asm	/^f0100845:	68 00 50 1e f0       	push   $0xf01e5000$/;"	l
f010084a	obj/kern/kernel.asm	/^f010084a:	68 f8 64 10 f0       	push   $0xf01064f8$/;"	l
f010084f	obj/kern/kernel.asm	/^f010084f:	e8 56 2e 00 00       	call   f01036aa <cprintf>$/;"	l
f0100854	obj/kern/kernel.asm	/^f0100854:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100857	obj/kern/kernel.asm	/^f0100857:	68 08 70 22 00       	push   $0x227008$/;"	l
f010085c	obj/kern/kernel.asm	/^f010085c:	68 08 70 22 f0       	push   $0xf0227008$/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861:	68 1c 65 10 f0       	push   $0xf010651c$/;"	l
f0100866	obj/kern/kernel.asm	/^f0100866:	e8 3f 2e 00 00       	call   f01036aa <cprintf>$/;"	l
f010086b	obj/kern/kernel.asm	/^f010086b:	b8 07 74 22 f0       	mov    $0xf0227407,%eax$/;"	l
f0100870	obj/kern/kernel.asm	/^f0100870:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f0100875	obj/kern/kernel.asm	/^f0100875:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100878	obj/kern/kernel.asm	/^f0100878:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f010087d	obj/kern/kernel.asm	/^f010087d:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f0100883	obj/kern/kernel.asm	/^f0100883:	85 c0                	test   %eax,%eax$/;"	l
f0100885	obj/kern/kernel.asm	/^f0100885:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0100888	obj/kern/kernel.asm	/^f0100888:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f010088b	obj/kern/kernel.asm	/^f010088b:	50                   	push   %eax$/;"	l
f010088c	obj/kern/kernel.asm	/^f010088c:	68 40 65 10 f0       	push   $0xf0106540$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	e8 14 2e 00 00       	call   f01036aa <cprintf>$/;"	l
f0100896	obj/kern/kernel.asm	/^f0100896:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010089b	obj/kern/kernel.asm	/^f010089b:	c9                   	leave  $/;"	l
f010089c	obj/kern/kernel.asm	/^f010089c:	c3                   	ret    $/;"	l
f010089d	obj/kern/kernel.asm	/^f010089d <mon_backtrace>:$/;"	l
f010089d	obj/kern/kernel.asm	/^f010089d:	55                   	push   %ebp$/;"	l
f010089e	obj/kern/kernel.asm	/^f010089e:	89 e5                	mov    %esp,%ebp$/;"	l
f01008a0	obj/kern/kernel.asm	/^f01008a0:	57                   	push   %edi$/;"	l
f01008a1	obj/kern/kernel.asm	/^f01008a1:	56                   	push   %esi$/;"	l
f01008a2	obj/kern/kernel.asm	/^f01008a2:	53                   	push   %ebx$/;"	l
f01008a3	obj/kern/kernel.asm	/^f01008a3:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01008a6	obj/kern/kernel.asm	/^f01008a6:	89 ee                	mov    %ebp,%esi$/;"	l
f01008a8	obj/kern/kernel.asm	/^f01008a8:	eb 78                	jmp    f0100922 <mon_backtrace+0x85>$/;"	l
f01008aa	obj/kern/kernel.asm	/^f01008aa:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f01008ad	obj/kern/kernel.asm	/^f01008ad:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f01008b0	obj/kern/kernel.asm	/^f01008b0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01008b3	obj/kern/kernel.asm	/^f01008b3:	50                   	push   %eax$/;"	l
f01008b4	obj/kern/kernel.asm	/^f01008b4:	56                   	push   %esi$/;"	l
f01008b5	obj/kern/kernel.asm	/^f01008b5:	68 f6 63 10 f0       	push   $0xf01063f6$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	e8 eb 2d 00 00       	call   f01036aa <cprintf>$/;"	l
f01008bf	obj/kern/kernel.asm	/^f01008bf:	8d 5e 08             	lea    0x8(%esi),%ebx$/;"	l
f01008c2	obj/kern/kernel.asm	/^f01008c2:	8d 7e 1c             	lea    0x1c(%esi),%edi$/;"	l
f01008c5	obj/kern/kernel.asm	/^f01008c5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008c8	obj/kern/kernel.asm	/^f01008c8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008cb	obj/kern/kernel.asm	/^f01008cb:	ff 33                	pushl  (%ebx)$/;"	l
f01008cd	obj/kern/kernel.asm	/^f01008cd:	68 0d 64 10 f0       	push   $0xf010640d$/;"	l
f01008d2	obj/kern/kernel.asm	/^f01008d2:	e8 d3 2d 00 00       	call   f01036aa <cprintf>$/;"	l
f01008d7	obj/kern/kernel.asm	/^f01008d7:	83 c3 04             	add    $0x4,%ebx$/;"	l
f01008da	obj/kern/kernel.asm	/^f01008da:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008dd	obj/kern/kernel.asm	/^f01008dd:	39 fb                	cmp    %edi,%ebx$/;"	l
f01008df	obj/kern/kernel.asm	/^f01008df:	75 e7                	jne    f01008c8 <mon_backtrace+0x2b>$/;"	l
f01008e1	obj/kern/kernel.asm	/^f01008e1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008e4	obj/kern/kernel.asm	/^f01008e4:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
f01008e7	obj/kern/kernel.asm	/^f01008e7:	50                   	push   %eax$/;"	l
f01008e8	obj/kern/kernel.asm	/^f01008e8:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f01008eb	obj/kern/kernel.asm	/^f01008eb:	57                   	push   %edi$/;"	l
f01008ec	obj/kern/kernel.asm	/^f01008ec:	e8 0f 40 00 00       	call   f0104900 <debuginfo_eip>$/;"	l
f01008f1	obj/kern/kernel.asm	/^f01008f1:	83 c4 08             	add    $0x8,%esp$/;"	l
f01008f4	obj/kern/kernel.asm	/^f01008f4:	89 f8                	mov    %edi,%eax$/;"	l
f01008f6	obj/kern/kernel.asm	/^f01008f6:	2b 45 e0             	sub    -0x20(%ebp),%eax$/;"	l
f01008f9	obj/kern/kernel.asm	/^f01008f9:	50                   	push   %eax$/;"	l
f01008fa	obj/kern/kernel.asm	/^f01008fa:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f01008fd	obj/kern/kernel.asm	/^f01008fd:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0100900	obj/kern/kernel.asm	/^f0100900:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0100903	obj/kern/kernel.asm	/^f0100903:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	68 13 64 10 f0       	push   $0xf0106413$/;"	l
f010090b	obj/kern/kernel.asm	/^f010090b:	e8 9a 2d 00 00       	call   f01036aa <cprintf>$/;"	l
f0100910	obj/kern/kernel.asm	/^f0100910:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100913	obj/kern/kernel.asm	/^f0100913:	68 d2 72 10 f0       	push   $0xf01072d2$/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918:	e8 8d 2d 00 00       	call   f01036aa <cprintf>$/;"	l
f010091d	obj/kern/kernel.asm	/^f010091d:	8b 36                	mov    (%esi),%esi$/;"	l
f010091f	obj/kern/kernel.asm	/^f010091f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100922	obj/kern/kernel.asm	/^f0100922:	85 f6                	test   %esi,%esi$/;"	l
f0100924	obj/kern/kernel.asm	/^f0100924:	75 84                	jne    f01008aa <mon_backtrace+0xd>$/;"	l
f0100926	obj/kern/kernel.asm	/^f0100926:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010092b	obj/kern/kernel.asm	/^f010092b:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010092e	obj/kern/kernel.asm	/^f010092e:	5b                   	pop    %ebx$/;"	l
f010092f	obj/kern/kernel.asm	/^f010092f:	5e                   	pop    %esi$/;"	l
f0100930	obj/kern/kernel.asm	/^f0100930:	5f                   	pop    %edi$/;"	l
f0100931	obj/kern/kernel.asm	/^f0100931:	5d                   	pop    %ebp$/;"	l
f0100932	obj/kern/kernel.asm	/^f0100932:	c3                   	ret    $/;"	l
f0100933	obj/kern/kernel.asm	/^f0100933 <monitor>:$/;"	l
f0100933	obj/kern/kernel.asm	/^f0100933:	55                   	push   %ebp$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	89 e5                	mov    %esp,%ebp$/;"	l
f0100936	obj/kern/kernel.asm	/^f0100936:	57                   	push   %edi$/;"	l
f0100937	obj/kern/kernel.asm	/^f0100937:	56                   	push   %esi$/;"	l
f0100938	obj/kern/kernel.asm	/^f0100938:	53                   	push   %ebx$/;"	l
f0100939	obj/kern/kernel.asm	/^f0100939:	83 ec 58             	sub    $0x58,%esp$/;"	l
f010093c	obj/kern/kernel.asm	/^f010093c:	68 6c 65 10 f0       	push   $0xf010656c$/;"	l
f0100941	obj/kern/kernel.asm	/^f0100941:	e8 64 2d 00 00       	call   f01036aa <cprintf>$/;"	l
f0100946	obj/kern/kernel.asm	/^f0100946:	c7 04 24 90 65 10 f0 	movl   $0xf0106590,(%esp)$/;"	l
f010094d	obj/kern/kernel.asm	/^f010094d:	e8 58 2d 00 00       	call   f01036aa <cprintf>$/;"	l
f0100952	obj/kern/kernel.asm	/^f0100952:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100955	obj/kern/kernel.asm	/^f0100955:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100959	obj/kern/kernel.asm	/^f0100959:	74 0e                	je     f0100969 <monitor+0x36>$/;"	l
f010095b	obj/kern/kernel.asm	/^f010095b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010095e	obj/kern/kernel.asm	/^f010095e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100961	obj/kern/kernel.asm	/^f0100961:	e8 f1 32 00 00       	call   f0103c57 <print_trapframe>$/;"	l
f0100966	obj/kern/kernel.asm	/^f0100966:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100969	obj/kern/kernel.asm	/^f0100969:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010096c	obj/kern/kernel.asm	/^f010096c:	68 23 64 10 f0       	push   $0xf0106423$/;"	l
f0100971	obj/kern/kernel.asm	/^f0100971:	e8 cc 47 00 00       	call   f0105142 <readline>$/;"	l
f0100976	obj/kern/kernel.asm	/^f0100976:	89 c3                	mov    %eax,%ebx$/;"	l
f0100978	obj/kern/kernel.asm	/^f0100978:	83 c4 10             	add    $0x10,%esp$/;"	l
f010097b	obj/kern/kernel.asm	/^f010097b:	85 c0                	test   %eax,%eax$/;"	l
f010097d	obj/kern/kernel.asm	/^f010097d:	74 ea                	je     f0100969 <monitor+0x36>$/;"	l
f010097f	obj/kern/kernel.asm	/^f010097f:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100986	obj/kern/kernel.asm	/^f0100986:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010098b	obj/kern/kernel.asm	/^f010098b:	eb 0a                	jmp    f0100997 <monitor+0x64>$/;"	l
f010098d	obj/kern/kernel.asm	/^f010098d:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100990	obj/kern/kernel.asm	/^f0100990:	89 f7                	mov    %esi,%edi$/;"	l
f0100992	obj/kern/kernel.asm	/^f0100992:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f0100995	obj/kern/kernel.asm	/^f0100995:	89 fe                	mov    %edi,%esi$/;"	l
f0100997	obj/kern/kernel.asm	/^f0100997:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f010099a	obj/kern/kernel.asm	/^f010099a:	84 c0                	test   %al,%al$/;"	l
f010099c	obj/kern/kernel.asm	/^f010099c:	74 63                	je     f0100a01 <monitor+0xce>$/;"	l
f010099e	obj/kern/kernel.asm	/^f010099e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009a1	obj/kern/kernel.asm	/^f01009a1:	0f be c0             	movsbl %al,%eax$/;"	l
f01009a4	obj/kern/kernel.asm	/^f01009a4:	50                   	push   %eax$/;"	l
f01009a5	obj/kern/kernel.asm	/^f01009a5:	68 27 64 10 f0       	push   $0xf0106427$/;"	l
f01009aa	obj/kern/kernel.asm	/^f01009aa:	e8 c5 49 00 00       	call   f0105374 <strchr>$/;"	l
f01009af	obj/kern/kernel.asm	/^f01009af:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009b2	obj/kern/kernel.asm	/^f01009b2:	85 c0                	test   %eax,%eax$/;"	l
f01009b4	obj/kern/kernel.asm	/^f01009b4:	75 d7                	jne    f010098d <monitor+0x5a>$/;"	l
f01009b6	obj/kern/kernel.asm	/^f01009b6:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f01009b9	obj/kern/kernel.asm	/^f01009b9:	74 46                	je     f0100a01 <monitor+0xce>$/;"	l
f01009bb	obj/kern/kernel.asm	/^f01009bb:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f01009be	obj/kern/kernel.asm	/^f01009be:	75 14                	jne    f01009d4 <monitor+0xa1>$/;"	l
f01009c0	obj/kern/kernel.asm	/^f01009c0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009c3	obj/kern/kernel.asm	/^f01009c3:	6a 10                	push   $0x10$/;"	l
f01009c5	obj/kern/kernel.asm	/^f01009c5:	68 2c 64 10 f0       	push   $0xf010642c$/;"	l
f01009ca	obj/kern/kernel.asm	/^f01009ca:	e8 db 2c 00 00       	call   f01036aa <cprintf>$/;"	l
f01009cf	obj/kern/kernel.asm	/^f01009cf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009d2	obj/kern/kernel.asm	/^f01009d2:	eb 95                	jmp    f0100969 <monitor+0x36>$/;"	l
f01009d4	obj/kern/kernel.asm	/^f01009d4:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f01009d7	obj/kern/kernel.asm	/^f01009d7:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f01009db	obj/kern/kernel.asm	/^f01009db:	eb 03                	jmp    f01009e0 <monitor+0xad>$/;"	l
f01009dd	obj/kern/kernel.asm	/^f01009dd:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01009e0	obj/kern/kernel.asm	/^f01009e0:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01009e3	obj/kern/kernel.asm	/^f01009e3:	84 c0                	test   %al,%al$/;"	l
f01009e5	obj/kern/kernel.asm	/^f01009e5:	74 ae                	je     f0100995 <monitor+0x62>$/;"	l
f01009e7	obj/kern/kernel.asm	/^f01009e7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009ea	obj/kern/kernel.asm	/^f01009ea:	0f be c0             	movsbl %al,%eax$/;"	l
f01009ed	obj/kern/kernel.asm	/^f01009ed:	50                   	push   %eax$/;"	l
f01009ee	obj/kern/kernel.asm	/^f01009ee:	68 27 64 10 f0       	push   $0xf0106427$/;"	l
f01009f3	obj/kern/kernel.asm	/^f01009f3:	e8 7c 49 00 00       	call   f0105374 <strchr>$/;"	l
f01009f8	obj/kern/kernel.asm	/^f01009f8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009fb	obj/kern/kernel.asm	/^f01009fb:	85 c0                	test   %eax,%eax$/;"	l
f01009fd	obj/kern/kernel.asm	/^f01009fd:	74 de                	je     f01009dd <monitor+0xaa>$/;"	l
f01009ff	obj/kern/kernel.asm	/^f01009ff:	eb 94                	jmp    f0100995 <monitor+0x62>$/;"	l
f0100a01	obj/kern/kernel.asm	/^f0100a01:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100a08	obj/kern/kernel.asm	/^f0100a08:	00 $/;"	l
f0100a09	obj/kern/kernel.asm	/^f0100a09:	85 f6                	test   %esi,%esi$/;"	l
f0100a0b	obj/kern/kernel.asm	/^f0100a0b:	0f 84 58 ff ff ff    	je     f0100969 <monitor+0x36>$/;"	l
f0100a11	obj/kern/kernel.asm	/^f0100a11:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100a16	obj/kern/kernel.asm	/^f0100a16:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a19	obj/kern/kernel.asm	/^f0100a19:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100a1c	obj/kern/kernel.asm	/^f0100a1c:	ff 34 85 c0 65 10 f0 	pushl  -0xfef9a40(,%eax,4)$/;"	l
f0100a23	obj/kern/kernel.asm	/^f0100a23:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100a26	obj/kern/kernel.asm	/^f0100a26:	e8 eb 48 00 00       	call   f0105316 <strcmp>$/;"	l
f0100a2b	obj/kern/kernel.asm	/^f0100a2b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a2e	obj/kern/kernel.asm	/^f0100a2e:	85 c0                	test   %eax,%eax$/;"	l
f0100a30	obj/kern/kernel.asm	/^f0100a30:	75 21                	jne    f0100a53 <monitor+0x120>$/;"	l
f0100a32	obj/kern/kernel.asm	/^f0100a32:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100a35	obj/kern/kernel.asm	/^f0100a35:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100a38	obj/kern/kernel.asm	/^f0100a38:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100a3b	obj/kern/kernel.asm	/^f0100a3b:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f0100a3e	obj/kern/kernel.asm	/^f0100a3e:	52                   	push   %edx$/;"	l
f0100a3f	obj/kern/kernel.asm	/^f0100a3f:	56                   	push   %esi$/;"	l
f0100a40	obj/kern/kernel.asm	/^f0100a40:	ff 14 85 c8 65 10 f0 	call   *-0xfef9a38(,%eax,4)$/;"	l
f0100a47	obj/kern/kernel.asm	/^f0100a47:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a4a	obj/kern/kernel.asm	/^f0100a4a:	85 c0                	test   %eax,%eax$/;"	l
f0100a4c	obj/kern/kernel.asm	/^f0100a4c:	78 25                	js     f0100a73 <monitor+0x140>$/;"	l
f0100a4e	obj/kern/kernel.asm	/^f0100a4e:	e9 16 ff ff ff       	jmp    f0100969 <monitor+0x36>$/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100a56	obj/kern/kernel.asm	/^f0100a56:	83 fb 03             	cmp    $0x3,%ebx$/;"	l
f0100a59	obj/kern/kernel.asm	/^f0100a59:	75 bb                	jne    f0100a16 <monitor+0xe3>$/;"	l
f0100a5b	obj/kern/kernel.asm	/^f0100a5b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a5e	obj/kern/kernel.asm	/^f0100a5e:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100a61	obj/kern/kernel.asm	/^f0100a61:	68 49 64 10 f0       	push   $0xf0106449$/;"	l
f0100a66	obj/kern/kernel.asm	/^f0100a66:	e8 3f 2c 00 00       	call   f01036aa <cprintf>$/;"	l
f0100a6b	obj/kern/kernel.asm	/^f0100a6b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a6e	obj/kern/kernel.asm	/^f0100a6e:	e9 f6 fe ff ff       	jmp    f0100969 <monitor+0x36>$/;"	l
f0100a73	obj/kern/kernel.asm	/^f0100a73:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100a76	obj/kern/kernel.asm	/^f0100a76:	5b                   	pop    %ebx$/;"	l
f0100a77	obj/kern/kernel.asm	/^f0100a77:	5e                   	pop    %esi$/;"	l
f0100a78	obj/kern/kernel.asm	/^f0100a78:	5f                   	pop    %edi$/;"	l
f0100a79	obj/kern/kernel.asm	/^f0100a79:	5d                   	pop    %ebp$/;"	l
f0100a7a	obj/kern/kernel.asm	/^f0100a7a:	c3                   	ret    $/;"	l
f0100a7b	obj/kern/kernel.asm	/^f0100a7b <boot_alloc>:$/;"	l
f0100a7b	obj/kern/kernel.asm	/^f0100a7b:	55                   	push   %ebp$/;"	l
f0100a7c	obj/kern/kernel.asm	/^f0100a7c:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a7e	obj/kern/kernel.asm	/^f0100a7e:	53                   	push   %ebx$/;"	l
f0100a7f	obj/kern/kernel.asm	/^f0100a7f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100a82	obj/kern/kernel.asm	/^f0100a82:	89 c3                	mov    %eax,%ebx$/;"	l
f0100a84	obj/kern/kernel.asm	/^f0100a84:	83 3d 38 52 1e f0 00 	cmpl   $0x0,0xf01e5238$/;"	l
f0100a8b	obj/kern/kernel.asm	/^f0100a8b:	75 0f                	jne    f0100a9c <boot_alloc+0x21>$/;"	l
f0100a8d	obj/kern/kernel.asm	/^f0100a8d:	b8 07 80 22 f0       	mov    $0xf0228007,%eax$/;"	l
f0100a92	obj/kern/kernel.asm	/^f0100a92:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100a97	obj/kern/kernel.asm	/^f0100a97:	a3 38 52 1e f0       	mov    %eax,0xf01e5238$/;"	l
f0100a9c	obj/kern/kernel.asm	/^f0100a9c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100a9f	obj/kern/kernel.asm	/^f0100a9f:	ff 35 38 52 1e f0    	pushl  0xf01e5238$/;"	l
f0100aa5	obj/kern/kernel.asm	/^f0100aa5:	53                   	push   %ebx$/;"	l
f0100aa6	obj/kern/kernel.asm	/^f0100aa6:	68 e4 65 10 f0       	push   $0xf01065e4$/;"	l
f0100aab	obj/kern/kernel.asm	/^f0100aab:	e8 fa 2b 00 00       	call   f01036aa <cprintf>$/;"	l
f0100ab0	obj/kern/kernel.asm	/^f0100ab0:	a1 38 52 1e f0       	mov    0xf01e5238,%eax$/;"	l
f0100ab5	obj/kern/kernel.asm	/^f0100ab5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ab8	obj/kern/kernel.asm	/^f0100ab8:	85 db                	test   %ebx,%ebx$/;"	l
f0100aba	obj/kern/kernel.asm	/^f0100aba:	74 13                	je     f0100acf <boot_alloc+0x54>$/;"	l
f0100abc	obj/kern/kernel.asm	/^f0100abc:	8d 94 18 ff 0f 00 00 	lea    0xfff(%eax,%ebx,1),%edx$/;"	l
f0100ac3	obj/kern/kernel.asm	/^f0100ac3:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100ac9	obj/kern/kernel.asm	/^f0100ac9:	89 15 38 52 1e f0    	mov    %edx,0xf01e5238$/;"	l
f0100acf	obj/kern/kernel.asm	/^f0100acf:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100ad2	obj/kern/kernel.asm	/^f0100ad2:	c9                   	leave  $/;"	l
f0100ad3	obj/kern/kernel.asm	/^f0100ad3:	c3                   	ret    $/;"	l
f0100ad4	obj/kern/kernel.asm	/^f0100ad4 <nvram_read>:$/;"	l
f0100ad4	obj/kern/kernel.asm	/^f0100ad4:	55                   	push   %ebp$/;"	l
f0100ad5	obj/kern/kernel.asm	/^f0100ad5:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ad7	obj/kern/kernel.asm	/^f0100ad7:	56                   	push   %esi$/;"	l
f0100ad8	obj/kern/kernel.asm	/^f0100ad8:	53                   	push   %ebx$/;"	l
f0100ad9	obj/kern/kernel.asm	/^f0100ad9:	89 c3                	mov    %eax,%ebx$/;"	l
f0100adb	obj/kern/kernel.asm	/^f0100adb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100ade	obj/kern/kernel.asm	/^f0100ade:	50                   	push   %eax$/;"	l
f0100adf	obj/kern/kernel.asm	/^f0100adf:	e8 47 2a 00 00       	call   f010352b <mc146818_read>$/;"	l
f0100ae4	obj/kern/kernel.asm	/^f0100ae4:	89 c6                	mov    %eax,%esi$/;"	l
f0100ae6	obj/kern/kernel.asm	/^f0100ae6:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100ae9	obj/kern/kernel.asm	/^f0100ae9:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100aec	obj/kern/kernel.asm	/^f0100aec:	e8 3a 2a 00 00       	call   f010352b <mc146818_read>$/;"	l
f0100af1	obj/kern/kernel.asm	/^f0100af1:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0100af4	obj/kern/kernel.asm	/^f0100af4:	09 f0                	or     %esi,%eax$/;"	l
f0100af6	obj/kern/kernel.asm	/^f0100af6:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100af9	obj/kern/kernel.asm	/^f0100af9:	5b                   	pop    %ebx$/;"	l
f0100afa	obj/kern/kernel.asm	/^f0100afa:	5e                   	pop    %esi$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	5d                   	pop    %ebp$/;"	l
f0100afc	obj/kern/kernel.asm	/^f0100afc:	c3                   	ret    $/;"	l
f0100afd	obj/kern/kernel.asm	/^f0100afd <check_va2pa>:$/;"	l
f0100afd	obj/kern/kernel.asm	/^f0100afd:	89 d1                	mov    %edx,%ecx$/;"	l
f0100aff	obj/kern/kernel.asm	/^f0100aff:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100b02	obj/kern/kernel.asm	/^f0100b02:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100b05	obj/kern/kernel.asm	/^f0100b05:	a8 01                	test   $0x1,%al$/;"	l
f0100b07	obj/kern/kernel.asm	/^f0100b07:	74 52                	je     f0100b5b <check_va2pa+0x5e>$/;"	l
f0100b09	obj/kern/kernel.asm	/^f0100b09:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100b0e	obj/kern/kernel.asm	/^f0100b0e:	89 c1                	mov    %eax,%ecx$/;"	l
f0100b10	obj/kern/kernel.asm	/^f0100b10:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100b13	obj/kern/kernel.asm	/^f0100b13:	3b 0d 88 5e 1e f0    	cmp    0xf01e5e88,%ecx$/;"	l
f0100b19	obj/kern/kernel.asm	/^f0100b19:	72 1b                	jb     f0100b36 <check_va2pa+0x39>$/;"	l
f0100b1b	obj/kern/kernel.asm	/^f0100b1b:	55                   	push   %ebp$/;"	l
f0100b1c	obj/kern/kernel.asm	/^f0100b1c:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b1e	obj/kern/kernel.asm	/^f0100b1e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100b21	obj/kern/kernel.asm	/^f0100b21:	50                   	push   %eax$/;"	l
f0100b22	obj/kern/kernel.asm	/^f0100b22:	68 84 60 10 f0       	push   $0xf0106084$/;"	l
f0100b27	obj/kern/kernel.asm	/^f0100b27:	68 b4 03 00 00       	push   $0x3b4$/;"	l
f0100b2c	obj/kern/kernel.asm	/^f0100b2c:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0100b31	obj/kern/kernel.asm	/^f0100b31:	e8 0a f5 ff ff       	call   f0100040 <_panic>$/;"	l
f0100b36	obj/kern/kernel.asm	/^f0100b36:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100b3f	obj/kern/kernel.asm	/^f0100b3f:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100b46	obj/kern/kernel.asm	/^f0100b46:	89 c2                	mov    %eax,%edx$/;"	l
f0100b48	obj/kern/kernel.asm	/^f0100b48:	83 e2 01             	and    $0x1,%edx$/;"	l
f0100b4b	obj/kern/kernel.asm	/^f0100b4b:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100b50	obj/kern/kernel.asm	/^f0100b50:	85 d2                	test   %edx,%edx$/;"	l
f0100b52	obj/kern/kernel.asm	/^f0100b52:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0100b57	obj/kern/kernel.asm	/^f0100b57:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100b5a	obj/kern/kernel.asm	/^f0100b5a:	c3                   	ret    $/;"	l
f0100b5b	obj/kern/kernel.asm	/^f0100b5b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100b60	obj/kern/kernel.asm	/^f0100b60:	c3                   	ret    $/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61 <check_page_free_list>:$/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61:	55                   	push   %ebp$/;"	l
f0100b62	obj/kern/kernel.asm	/^f0100b62:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b64	obj/kern/kernel.asm	/^f0100b64:	57                   	push   %edi$/;"	l
f0100b65	obj/kern/kernel.asm	/^f0100b65:	56                   	push   %esi$/;"	l
f0100b66	obj/kern/kernel.asm	/^f0100b66:	53                   	push   %ebx$/;"	l
f0100b67	obj/kern/kernel.asm	/^f0100b67:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100b6a	obj/kern/kernel.asm	/^f0100b6a:	84 c0                	test   %al,%al$/;"	l
f0100b6c	obj/kern/kernel.asm	/^f0100b6c:	0f 85 a0 02 00 00    	jne    f0100e12 <check_page_free_list+0x2b1>$/;"	l
f0100b72	obj/kern/kernel.asm	/^f0100b72:	e9 ad 02 00 00       	jmp    f0100e24 <check_page_free_list+0x2c3>$/;"	l
f0100b77	obj/kern/kernel.asm	/^f0100b77:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100b7a	obj/kern/kernel.asm	/^f0100b7a:	68 10 66 10 f0       	push   $0xf0106610$/;"	l
f0100b7f	obj/kern/kernel.asm	/^f0100b7f:	68 e7 02 00 00       	push   $0x2e7$/;"	l
f0100b84	obj/kern/kernel.asm	/^f0100b84:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0100b89	obj/kern/kernel.asm	/^f0100b89:	e8 b2 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100b8e	obj/kern/kernel.asm	/^f0100b8e:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0100b91	obj/kern/kernel.asm	/^f0100b91:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100b94	obj/kern/kernel.asm	/^f0100b94:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100b97	obj/kern/kernel.asm	/^f0100b97:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100b9a	obj/kern/kernel.asm	/^f0100b9a:	89 c2                	mov    %eax,%edx$/;"	l
f0100b9c	obj/kern/kernel.asm	/^f0100b9c:	2b 15 90 5e 1e f0    	sub    0xf01e5e90,%edx$/;"	l
f0100ba2	obj/kern/kernel.asm	/^f0100ba2:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0100ba8	obj/kern/kernel.asm	/^f0100ba8:	0f 95 c2             	setne  %dl$/;"	l
f0100bab	obj/kern/kernel.asm	/^f0100bab:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100bae	obj/kern/kernel.asm	/^f0100bae:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0100bb2	obj/kern/kernel.asm	/^f0100bb2:	89 01                	mov    %eax,(%ecx)$/;"	l
f0100bb4	obj/kern/kernel.asm	/^f0100bb4:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f0100bb8	obj/kern/kernel.asm	/^f0100bb8:	8b 00                	mov    (%eax),%eax$/;"	l
f0100bba	obj/kern/kernel.asm	/^f0100bba:	85 c0                	test   %eax,%eax$/;"	l
f0100bbc	obj/kern/kernel.asm	/^f0100bbc:	75 dc                	jne    f0100b9a <check_page_free_list+0x39>$/;"	l
f0100bbe	obj/kern/kernel.asm	/^f0100bbe:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100bc1	obj/kern/kernel.asm	/^f0100bc1:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100bc7	obj/kern/kernel.asm	/^f0100bc7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100bca	obj/kern/kernel.asm	/^f0100bca:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100bcd	obj/kern/kernel.asm	/^f0100bcd:	89 10                	mov    %edx,(%eax)$/;"	l
f0100bcf	obj/kern/kernel.asm	/^f0100bcf:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100bd2	obj/kern/kernel.asm	/^f0100bd2:	a3 40 52 1e f0       	mov    %eax,0xf01e5240$/;"	l
f0100bd7	obj/kern/kernel.asm	/^f0100bd7:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0100bdc	obj/kern/kernel.asm	/^f0100bdc:	8b 1d 40 52 1e f0    	mov    0xf01e5240,%ebx$/;"	l
f0100be2	obj/kern/kernel.asm	/^f0100be2:	eb 53                	jmp    f0100c37 <check_page_free_list+0xd6>$/;"	l
f0100be4	obj/kern/kernel.asm	/^f0100be4:	89 d8                	mov    %ebx,%eax$/;"	l
f0100be6	obj/kern/kernel.asm	/^f0100be6:	2b 05 90 5e 1e f0    	sub    0xf01e5e90,%eax$/;"	l
f0100bec	obj/kern/kernel.asm	/^f0100bec:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100bef	obj/kern/kernel.asm	/^f0100bef:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100bf2	obj/kern/kernel.asm	/^f0100bf2:	89 c2                	mov    %eax,%edx$/;"	l
f0100bf4	obj/kern/kernel.asm	/^f0100bf4:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100bf7	obj/kern/kernel.asm	/^f0100bf7:	39 f2                	cmp    %esi,%edx$/;"	l
f0100bf9	obj/kern/kernel.asm	/^f0100bf9:	73 3a                	jae    f0100c35 <check_page_free_list+0xd4>$/;"	l
f0100bfb	obj/kern/kernel.asm	/^f0100bfb:	89 c2                	mov    %eax,%edx$/;"	l
f0100bfd	obj/kern/kernel.asm	/^f0100bfd:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100c00	obj/kern/kernel.asm	/^f0100c00:	3b 15 88 5e 1e f0    	cmp    0xf01e5e88,%edx$/;"	l
f0100c06	obj/kern/kernel.asm	/^f0100c06:	72 12                	jb     f0100c1a <check_page_free_list+0xb9>$/;"	l
f0100c08	obj/kern/kernel.asm	/^f0100c08:	50                   	push   %eax$/;"	l
f0100c09	obj/kern/kernel.asm	/^f0100c09:	68 84 60 10 f0       	push   $0xf0106084$/;"	l
f0100c0e	obj/kern/kernel.asm	/^f0100c0e:	6a 58                	push   $0x58$/;"	l
f0100c10	obj/kern/kernel.asm	/^f0100c10:	68 c9 6f 10 f0       	push   $0xf0106fc9$/;"	l
f0100c15	obj/kern/kernel.asm	/^f0100c15:	e8 26 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c1a	obj/kern/kernel.asm	/^f0100c1a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100c1d	obj/kern/kernel.asm	/^f0100c1d:	68 80 00 00 00       	push   $0x80$/;"	l
f0100c22	obj/kern/kernel.asm	/^f0100c22:	68 97 00 00 00       	push   $0x97$/;"	l
f0100c27	obj/kern/kernel.asm	/^f0100c27:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100c2c	obj/kern/kernel.asm	/^f0100c2c:	50                   	push   %eax$/;"	l
f0100c2d	obj/kern/kernel.asm	/^f0100c2d:	e8 7f 47 00 00       	call   f01053b1 <memset>$/;"	l
f0100c32	obj/kern/kernel.asm	/^f0100c32:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100c37	obj/kern/kernel.asm	/^f0100c37:	85 db                	test   %ebx,%ebx$/;"	l
f0100c39	obj/kern/kernel.asm	/^f0100c39:	75 a9                	jne    f0100be4 <check_page_free_list+0x83>$/;"	l
f0100c3b	obj/kern/kernel.asm	/^f0100c3b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c40	obj/kern/kernel.asm	/^f0100c40:	e8 36 fe ff ff       	call   f0100a7b <boot_alloc>$/;"	l
f0100c45	obj/kern/kernel.asm	/^f0100c45:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0100c48	obj/kern/kernel.asm	/^f0100c48:	8b 15 40 52 1e f0    	mov    0xf01e5240,%edx$/;"	l
f0100c4e	obj/kern/kernel.asm	/^f0100c4e:	8b 0d 90 5e 1e f0    	mov    0xf01e5e90,%ecx$/;"	l
f0100c54	obj/kern/kernel.asm	/^f0100c54:	a1 88 5e 1e f0       	mov    0xf01e5e88,%eax$/;"	l
f0100c59	obj/kern/kernel.asm	/^f0100c59:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0100c5c	obj/kern/kernel.asm	/^f0100c5c:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f0100c5f	obj/kern/kernel.asm	/^f0100c5f:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0100c62	obj/kern/kernel.asm	/^f0100c62:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100c6a	obj/kern/kernel.asm	/^f0100c6a:	e9 52 01 00 00       	jmp    f0100dc1 <check_page_free_list+0x260>$/;"	l
f0100c6f	obj/kern/kernel.asm	/^f0100c6f:	39 ca                	cmp    %ecx,%edx$/;"	l
f0100c71	obj/kern/kernel.asm	/^f0100c71:	73 19                	jae    f0100c8c <check_page_free_list+0x12b>$/;"	l
f0100c73	obj/kern/kernel.asm	/^f0100c73:	68 d7 6f 10 f0       	push   $0xf0106fd7$/;"	l
f0100c78	obj/kern/kernel.asm	/^f0100c78:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0100c7d	obj/kern/kernel.asm	/^f0100c7d:	68 01 03 00 00       	push   $0x301$/;"	l
f0100c82	obj/kern/kernel.asm	/^f0100c82:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0100c87	obj/kern/kernel.asm	/^f0100c87:	e8 b4 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c8c	obj/kern/kernel.asm	/^f0100c8c:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f0100c8f	obj/kern/kernel.asm	/^f0100c8f:	72 19                	jb     f0100caa <check_page_free_list+0x149>$/;"	l
f0100c91	obj/kern/kernel.asm	/^f0100c91:	68 f8 6f 10 f0       	push   $0xf0106ff8$/;"	l
f0100c96	obj/kern/kernel.asm	/^f0100c96:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0100c9b	obj/kern/kernel.asm	/^f0100c9b:	68 02 03 00 00       	push   $0x302$/;"	l
f0100ca0	obj/kern/kernel.asm	/^f0100ca0:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0100ca5	obj/kern/kernel.asm	/^f0100ca5:	e8 96 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100caa	obj/kern/kernel.asm	/^f0100caa:	89 d0                	mov    %edx,%eax$/;"	l
f0100cac	obj/kern/kernel.asm	/^f0100cac:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f0100caf	obj/kern/kernel.asm	/^f0100caf:	a8 07                	test   $0x7,%al$/;"	l
f0100cb1	obj/kern/kernel.asm	/^f0100cb1:	74 19                	je     f0100ccc <check_page_free_list+0x16b>$/;"	l
f0100cb3	obj/kern/kernel.asm	/^f0100cb3:	68 34 66 10 f0       	push   $0xf0106634$/;"	l
f0100cb8	obj/kern/kernel.asm	/^f0100cb8:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0100cbd	obj/kern/kernel.asm	/^f0100cbd:	68 03 03 00 00       	push   $0x303$/;"	l
f0100cc2	obj/kern/kernel.asm	/^f0100cc2:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0100cc7	obj/kern/kernel.asm	/^f0100cc7:	e8 74 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ccc	obj/kern/kernel.asm	/^f0100ccc:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100ccf	obj/kern/kernel.asm	/^f0100ccf:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100cd2	obj/kern/kernel.asm	/^f0100cd2:	85 c0                	test   %eax,%eax$/;"	l
f0100cd4	obj/kern/kernel.asm	/^f0100cd4:	75 19                	jne    f0100cef <check_page_free_list+0x18e>$/;"	l
f0100cd6	obj/kern/kernel.asm	/^f0100cd6:	68 0c 70 10 f0       	push   $0xf010700c$/;"	l
f0100cdb	obj/kern/kernel.asm	/^f0100cdb:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0100ce0	obj/kern/kernel.asm	/^f0100ce0:	68 06 03 00 00       	push   $0x306$/;"	l
f0100ce5	obj/kern/kernel.asm	/^f0100ce5:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0100cea	obj/kern/kernel.asm	/^f0100cea:	e8 51 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100cef	obj/kern/kernel.asm	/^f0100cef:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0100cf4	obj/kern/kernel.asm	/^f0100cf4:	75 19                	jne    f0100d0f <check_page_free_list+0x1ae>$/;"	l
f0100cf6	obj/kern/kernel.asm	/^f0100cf6:	68 1d 70 10 f0       	push   $0xf010701d$/;"	l
f0100cfb	obj/kern/kernel.asm	/^f0100cfb:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0100d00	obj/kern/kernel.asm	/^f0100d00:	68 07 03 00 00       	push   $0x307$/;"	l
f0100d05	obj/kern/kernel.asm	/^f0100d05:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0100d0a	obj/kern/kernel.asm	/^f0100d0a:	e8 31 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d0f	obj/kern/kernel.asm	/^f0100d0f:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	75 19                	jne    f0100d2f <check_page_free_list+0x1ce>$/;"	l
f0100d16	obj/kern/kernel.asm	/^f0100d16:	68 68 66 10 f0       	push   $0xf0106668$/;"	l
f0100d1b	obj/kern/kernel.asm	/^f0100d1b:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0100d20	obj/kern/kernel.asm	/^f0100d20:	68 08 03 00 00       	push   $0x308$/;"	l
f0100d25	obj/kern/kernel.asm	/^f0100d25:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0100d2a	obj/kern/kernel.asm	/^f0100d2a:	e8 11 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d2f	obj/kern/kernel.asm	/^f0100d2f:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0100d34	obj/kern/kernel.asm	/^f0100d34:	75 19                	jne    f0100d4f <check_page_free_list+0x1ee>$/;"	l
f0100d36	obj/kern/kernel.asm	/^f0100d36:	68 36 70 10 f0       	push   $0xf0107036$/;"	l
f0100d3b	obj/kern/kernel.asm	/^f0100d3b:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0100d40	obj/kern/kernel.asm	/^f0100d40:	68 09 03 00 00       	push   $0x309$/;"	l
f0100d45	obj/kern/kernel.asm	/^f0100d45:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0100d4a	obj/kern/kernel.asm	/^f0100d4a:	e8 f1 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d4f	obj/kern/kernel.asm	/^f0100d4f:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0100d54	obj/kern/kernel.asm	/^f0100d54:	0f 86 f1 00 00 00    	jbe    f0100e4b <check_page_free_list+0x2ea>$/;"	l
f0100d5a	obj/kern/kernel.asm	/^f0100d5a:	89 c7                	mov    %eax,%edi$/;"	l
f0100d5c	obj/kern/kernel.asm	/^f0100d5c:	c1 ef 0c             	shr    $0xc,%edi$/;"	l
f0100d5f	obj/kern/kernel.asm	/^f0100d5f:	39 7d c8             	cmp    %edi,-0x38(%ebp)$/;"	l
f0100d62	obj/kern/kernel.asm	/^f0100d62:	77 12                	ja     f0100d76 <check_page_free_list+0x215>$/;"	l
f0100d64	obj/kern/kernel.asm	/^f0100d64:	50                   	push   %eax$/;"	l
f0100d65	obj/kern/kernel.asm	/^f0100d65:	68 84 60 10 f0       	push   $0xf0106084$/;"	l
f0100d6a	obj/kern/kernel.asm	/^f0100d6a:	6a 58                	push   $0x58$/;"	l
f0100d6c	obj/kern/kernel.asm	/^f0100d6c:	68 c9 6f 10 f0       	push   $0xf0106fc9$/;"	l
f0100d71	obj/kern/kernel.asm	/^f0100d71:	e8 ca f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d76	obj/kern/kernel.asm	/^f0100d76:	8d b8 00 00 00 f0    	lea    -0x10000000(%eax),%edi$/;"	l
f0100d7c	obj/kern/kernel.asm	/^f0100d7c:	39 7d cc             	cmp    %edi,-0x34(%ebp)$/;"	l
f0100d7f	obj/kern/kernel.asm	/^f0100d7f:	0f 86 b6 00 00 00    	jbe    f0100e3b <check_page_free_list+0x2da>$/;"	l
f0100d85	obj/kern/kernel.asm	/^f0100d85:	68 8c 66 10 f0       	push   $0xf010668c$/;"	l
f0100d8a	obj/kern/kernel.asm	/^f0100d8a:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0100d8f	obj/kern/kernel.asm	/^f0100d8f:	68 0a 03 00 00       	push   $0x30a$/;"	l
f0100d94	obj/kern/kernel.asm	/^f0100d94:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0100d99	obj/kern/kernel.asm	/^f0100d99:	e8 a2 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d9e	obj/kern/kernel.asm	/^f0100d9e:	68 50 70 10 f0       	push   $0xf0107050$/;"	l
f0100da3	obj/kern/kernel.asm	/^f0100da3:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0100da8	obj/kern/kernel.asm	/^f0100da8:	68 0c 03 00 00       	push   $0x30c$/;"	l
f0100dad	obj/kern/kernel.asm	/^f0100dad:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0100db2	obj/kern/kernel.asm	/^f0100db2:	e8 89 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100db7	obj/kern/kernel.asm	/^f0100db7:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100dba	obj/kern/kernel.asm	/^f0100dba:	eb 03                	jmp    f0100dbf <check_page_free_list+0x25e>$/;"	l
f0100dbc	obj/kern/kernel.asm	/^f0100dbc:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100dbf	obj/kern/kernel.asm	/^f0100dbf:	8b 12                	mov    (%edx),%edx$/;"	l
f0100dc1	obj/kern/kernel.asm	/^f0100dc1:	85 d2                	test   %edx,%edx$/;"	l
f0100dc3	obj/kern/kernel.asm	/^f0100dc3:	0f 85 a6 fe ff ff    	jne    f0100c6f <check_page_free_list+0x10e>$/;"	l
f0100dc9	obj/kern/kernel.asm	/^f0100dc9:	85 f6                	test   %esi,%esi$/;"	l
f0100dcb	obj/kern/kernel.asm	/^f0100dcb:	7f 19                	jg     f0100de6 <check_page_free_list+0x285>$/;"	l
f0100dcd	obj/kern/kernel.asm	/^f0100dcd:	68 6d 70 10 f0       	push   $0xf010706d$/;"	l
f0100dd2	obj/kern/kernel.asm	/^f0100dd2:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0100dd7	obj/kern/kernel.asm	/^f0100dd7:	68 14 03 00 00       	push   $0x314$/;"	l
f0100ddc	obj/kern/kernel.asm	/^f0100ddc:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0100de1	obj/kern/kernel.asm	/^f0100de1:	e8 5a f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100de6	obj/kern/kernel.asm	/^f0100de6:	85 db                	test   %ebx,%ebx$/;"	l
f0100de8	obj/kern/kernel.asm	/^f0100de8:	7f 19                	jg     f0100e03 <check_page_free_list+0x2a2>$/;"	l
f0100dea	obj/kern/kernel.asm	/^f0100dea:	68 7f 70 10 f0       	push   $0xf010707f$/;"	l
f0100def	obj/kern/kernel.asm	/^f0100def:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0100df4	obj/kern/kernel.asm	/^f0100df4:	68 15 03 00 00       	push   $0x315$/;"	l
f0100df9	obj/kern/kernel.asm	/^f0100df9:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0100dfe	obj/kern/kernel.asm	/^f0100dfe:	e8 3d f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e03	obj/kern/kernel.asm	/^f0100e03:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100e06	obj/kern/kernel.asm	/^f0100e06:	68 d4 66 10 f0       	push   $0xf01066d4$/;"	l
f0100e0b	obj/kern/kernel.asm	/^f0100e0b:	e8 9a 28 00 00       	call   f01036aa <cprintf>$/;"	l
f0100e10	obj/kern/kernel.asm	/^f0100e10:	eb 49                	jmp    f0100e5b <check_page_free_list+0x2fa>$/;"	l
f0100e12	obj/kern/kernel.asm	/^f0100e12:	a1 40 52 1e f0       	mov    0xf01e5240,%eax$/;"	l
f0100e17	obj/kern/kernel.asm	/^f0100e17:	85 c0                	test   %eax,%eax$/;"	l
f0100e19	obj/kern/kernel.asm	/^f0100e19:	0f 85 6f fd ff ff    	jne    f0100b8e <check_page_free_list+0x2d>$/;"	l
f0100e1f	obj/kern/kernel.asm	/^f0100e1f:	e9 53 fd ff ff       	jmp    f0100b77 <check_page_free_list+0x16>$/;"	l
f0100e24	obj/kern/kernel.asm	/^f0100e24:	83 3d 40 52 1e f0 00 	cmpl   $0x0,0xf01e5240$/;"	l
f0100e2b	obj/kern/kernel.asm	/^f0100e2b:	0f 84 46 fd ff ff    	je     f0100b77 <check_page_free_list+0x16>$/;"	l
f0100e31	obj/kern/kernel.asm	/^f0100e31:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f0100e36	obj/kern/kernel.asm	/^f0100e36:	e9 a1 fd ff ff       	jmp    f0100bdc <check_page_free_list+0x7b>$/;"	l
f0100e3b	obj/kern/kernel.asm	/^f0100e3b:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0100e40	obj/kern/kernel.asm	/^f0100e40:	0f 85 76 ff ff ff    	jne    f0100dbc <check_page_free_list+0x25b>$/;"	l
f0100e46	obj/kern/kernel.asm	/^f0100e46:	e9 53 ff ff ff       	jmp    f0100d9e <check_page_free_list+0x23d>$/;"	l
f0100e4b	obj/kern/kernel.asm	/^f0100e4b:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0100e50	obj/kern/kernel.asm	/^f0100e50:	0f 85 61 ff ff ff    	jne    f0100db7 <check_page_free_list+0x256>$/;"	l
f0100e56	obj/kern/kernel.asm	/^f0100e56:	e9 43 ff ff ff       	jmp    f0100d9e <check_page_free_list+0x23d>$/;"	l
f0100e5b	obj/kern/kernel.asm	/^f0100e5b:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100e5e	obj/kern/kernel.asm	/^f0100e5e:	5b                   	pop    %ebx$/;"	l
f0100e5f	obj/kern/kernel.asm	/^f0100e5f:	5e                   	pop    %esi$/;"	l
f0100e60	obj/kern/kernel.asm	/^f0100e60:	5f                   	pop    %edi$/;"	l
f0100e61	obj/kern/kernel.asm	/^f0100e61:	5d                   	pop    %ebp$/;"	l
f0100e62	obj/kern/kernel.asm	/^f0100e62:	c3                   	ret    $/;"	l
f0100e63	obj/kern/kernel.asm	/^f0100e63 <page_init>:$/;"	l
f0100e63	obj/kern/kernel.asm	/^f0100e63:	55                   	push   %ebp$/;"	l
f0100e64	obj/kern/kernel.asm	/^f0100e64:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e66	obj/kern/kernel.asm	/^f0100e66:	57                   	push   %edi$/;"	l
f0100e67	obj/kern/kernel.asm	/^f0100e67:	56                   	push   %esi$/;"	l
f0100e68	obj/kern/kernel.asm	/^f0100e68:	53                   	push   %ebx$/;"	l
f0100e69	obj/kern/kernel.asm	/^f0100e69:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100e6c	obj/kern/kernel.asm	/^f0100e6c:	c7 05 40 52 1e f0 00 	movl   $0x0,0xf01e5240$/;"	l
f0100e73	obj/kern/kernel.asm	/^f0100e73:	00 00 00 $/;"	l
f0100e76	obj/kern/kernel.asm	/^f0100e76:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e7b	obj/kern/kernel.asm	/^f0100e7b:	e8 fb fb ff ff       	call   f0100a7b <boot_alloc>$/;"	l
f0100e80	obj/kern/kernel.asm	/^f0100e80:	8b 35 44 52 1e f0    	mov    0xf01e5244,%esi$/;"	l
f0100e86	obj/kern/kernel.asm	/^f0100e86:	05 00 00 f0 0f       	add    $0xff00000,%eax$/;"	l
f0100e8b	obj/kern/kernel.asm	/^f0100e8b:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100e8e	obj/kern/kernel.asm	/^f0100e8e:	8d 7c 06 60          	lea    0x60(%esi,%eax,1),%edi$/;"	l
f0100e92	obj/kern/kernel.asm	/^f0100e92:	8b 1d 40 52 1e f0    	mov    0xf01e5240,%ebx$/;"	l
f0100e98	obj/kern/kernel.asm	/^f0100e98:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100e9d	obj/kern/kernel.asm	/^f0100e9d:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0100ea2	obj/kern/kernel.asm	/^f0100ea2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ea7	obj/kern/kernel.asm	/^f0100ea7:	89 7d e4             	mov    %edi,-0x1c(%ebp)$/;"	l
f0100eaa	obj/kern/kernel.asm	/^f0100eaa:	eb 53                	jmp    f0100eff <page_init+0x9c>$/;"	l
f0100eac	obj/kern/kernel.asm	/^f0100eac:	85 c0                	test   %eax,%eax$/;"	l
f0100eae	obj/kern/kernel.asm	/^f0100eae:	74 05                	je     f0100eb5 <page_init+0x52>$/;"	l
f0100eb0	obj/kern/kernel.asm	/^f0100eb0:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0100eb3	obj/kern/kernel.asm	/^f0100eb3:	75 0f                	jne    f0100ec4 <page_init+0x61>$/;"	l
f0100eb5	obj/kern/kernel.asm	/^f0100eb5:	8b 3d 90 5e 1e f0    	mov    0xf01e5e90,%edi$/;"	l
f0100ebb	obj/kern/kernel.asm	/^f0100ebb:	66 c7 44 17 04 01 00 	movw   $0x1,0x4(%edi,%edx,1)$/;"	l
f0100ec2	obj/kern/kernel.asm	/^f0100ec2:	eb 35                	jmp    f0100ef9 <page_init+0x96>$/;"	l
f0100ec4	obj/kern/kernel.asm	/^f0100ec4:	39 f0                	cmp    %esi,%eax$/;"	l
f0100ec6	obj/kern/kernel.asm	/^f0100ec6:	72 14                	jb     f0100edc <page_init+0x79>$/;"	l
f0100ec8	obj/kern/kernel.asm	/^f0100ec8:	3b 45 e4             	cmp    -0x1c(%ebp),%eax$/;"	l
f0100ecb	obj/kern/kernel.asm	/^f0100ecb:	73 0f                	jae    f0100edc <page_init+0x79>$/;"	l
f0100ecd	obj/kern/kernel.asm	/^f0100ecd:	8b 3d 90 5e 1e f0    	mov    0xf01e5e90,%edi$/;"	l
f0100ed3	obj/kern/kernel.asm	/^f0100ed3:	66 c7 44 17 04 01 00 	movw   $0x1,0x4(%edi,%edx,1)$/;"	l
f0100eda	obj/kern/kernel.asm	/^f0100eda:	eb 1d                	jmp    f0100ef9 <page_init+0x96>$/;"	l
f0100edc	obj/kern/kernel.asm	/^f0100edc:	89 d1                	mov    %edx,%ecx$/;"	l
f0100ede	obj/kern/kernel.asm	/^f0100ede:	03 0d 90 5e 1e f0    	add    0xf01e5e90,%ecx$/;"	l
f0100ee4	obj/kern/kernel.asm	/^f0100ee4:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)$/;"	l
f0100eea	obj/kern/kernel.asm	/^f0100eea:	89 19                	mov    %ebx,(%ecx)$/;"	l
f0100eec	obj/kern/kernel.asm	/^f0100eec:	89 d3                	mov    %edx,%ebx$/;"	l
f0100eee	obj/kern/kernel.asm	/^f0100eee:	03 1d 90 5e 1e f0    	add    0xf01e5e90,%ebx$/;"	l
f0100ef4	obj/kern/kernel.asm	/^f0100ef4:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
f0100ef9	obj/kern/kernel.asm	/^f0100ef9:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100efc	obj/kern/kernel.asm	/^f0100efc:	83 c2 08             	add    $0x8,%edx$/;"	l
f0100eff	obj/kern/kernel.asm	/^f0100eff:	3b 05 88 5e 1e f0    	cmp    0xf01e5e88,%eax$/;"	l
f0100f05	obj/kern/kernel.asm	/^f0100f05:	72 a5                	jb     f0100eac <page_init+0x49>$/;"	l
f0100f07	obj/kern/kernel.asm	/^f0100f07:	84 c9                	test   %cl,%cl$/;"	l
f0100f09	obj/kern/kernel.asm	/^f0100f09:	74 06                	je     f0100f11 <page_init+0xae>$/;"	l
f0100f0b	obj/kern/kernel.asm	/^f0100f0b:	89 1d 40 52 1e f0    	mov    %ebx,0xf01e5240$/;"	l
f0100f11	obj/kern/kernel.asm	/^f0100f11:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0100f14	obj/kern/kernel.asm	/^f0100f14:	5b                   	pop    %ebx$/;"	l
f0100f15	obj/kern/kernel.asm	/^f0100f15:	5e                   	pop    %esi$/;"	l
f0100f16	obj/kern/kernel.asm	/^f0100f16:	5f                   	pop    %edi$/;"	l
f0100f17	obj/kern/kernel.asm	/^f0100f17:	5d                   	pop    %ebp$/;"	l
f0100f18	obj/kern/kernel.asm	/^f0100f18:	c3                   	ret    $/;"	l
f0100f19	obj/kern/kernel.asm	/^f0100f19 <page_alloc>:$/;"	l
f0100f19	obj/kern/kernel.asm	/^f0100f19:	55                   	push   %ebp$/;"	l
f0100f1a	obj/kern/kernel.asm	/^f0100f1a:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f1c	obj/kern/kernel.asm	/^f0100f1c:	53                   	push   %ebx$/;"	l
f0100f1d	obj/kern/kernel.asm	/^f0100f1d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100f20	obj/kern/kernel.asm	/^f0100f20:	8b 1d 40 52 1e f0    	mov    0xf01e5240,%ebx$/;"	l
f0100f26	obj/kern/kernel.asm	/^f0100f26:	85 db                	test   %ebx,%ebx$/;"	l
f0100f28	obj/kern/kernel.asm	/^f0100f28:	74 5c                	je     f0100f86 <page_alloc+0x6d>$/;"	l
f0100f2a	obj/kern/kernel.asm	/^f0100f2a:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100f2c	obj/kern/kernel.asm	/^f0100f2c:	a3 40 52 1e f0       	mov    %eax,0xf01e5240$/;"	l
f0100f31	obj/kern/kernel.asm	/^f0100f31:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f0100f37	obj/kern/kernel.asm	/^f0100f37:	89 d8                	mov    %ebx,%eax$/;"	l
f0100f39	obj/kern/kernel.asm	/^f0100f39:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f0100f3d	obj/kern/kernel.asm	/^f0100f3d:	74 4c                	je     f0100f8b <page_alloc+0x72>$/;"	l
f0100f3f	obj/kern/kernel.asm	/^f0100f3f:	2b 05 90 5e 1e f0    	sub    0xf01e5e90,%eax$/;"	l
f0100f45	obj/kern/kernel.asm	/^f0100f45:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100f48	obj/kern/kernel.asm	/^f0100f48:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100f4b	obj/kern/kernel.asm	/^f0100f4b:	89 c2                	mov    %eax,%edx$/;"	l
f0100f4d	obj/kern/kernel.asm	/^f0100f4d:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100f50	obj/kern/kernel.asm	/^f0100f50:	3b 15 88 5e 1e f0    	cmp    0xf01e5e88,%edx$/;"	l
f0100f56	obj/kern/kernel.asm	/^f0100f56:	72 12                	jb     f0100f6a <page_alloc+0x51>$/;"	l
f0100f58	obj/kern/kernel.asm	/^f0100f58:	50                   	push   %eax$/;"	l
f0100f59	obj/kern/kernel.asm	/^f0100f59:	68 84 60 10 f0       	push   $0xf0106084$/;"	l
f0100f5e	obj/kern/kernel.asm	/^f0100f5e:	6a 58                	push   $0x58$/;"	l
f0100f60	obj/kern/kernel.asm	/^f0100f60:	68 c9 6f 10 f0       	push   $0xf0106fc9$/;"	l
f0100f65	obj/kern/kernel.asm	/^f0100f65:	e8 d6 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f6a	obj/kern/kernel.asm	/^f0100f6a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100f6d	obj/kern/kernel.asm	/^f0100f6d:	68 00 10 00 00       	push   $0x1000$/;"	l
f0100f72	obj/kern/kernel.asm	/^f0100f72:	6a 00                	push   $0x0$/;"	l
f0100f74	obj/kern/kernel.asm	/^f0100f74:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100f79	obj/kern/kernel.asm	/^f0100f79:	50                   	push   %eax$/;"	l
f0100f7a	obj/kern/kernel.asm	/^f0100f7a:	e8 32 44 00 00       	call   f01053b1 <memset>$/;"	l
f0100f7f	obj/kern/kernel.asm	/^f0100f7f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f82	obj/kern/kernel.asm	/^f0100f82:	89 d8                	mov    %ebx,%eax$/;"	l
f0100f84	obj/kern/kernel.asm	/^f0100f84:	eb 05                	jmp    f0100f8b <page_alloc+0x72>$/;"	l
f0100f86	obj/kern/kernel.asm	/^f0100f86:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100f8b	obj/kern/kernel.asm	/^f0100f8b:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100f8e	obj/kern/kernel.asm	/^f0100f8e:	c9                   	leave  $/;"	l
f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	c3                   	ret    $/;"	l
f0100f90	obj/kern/kernel.asm	/^f0100f90 <page_free>:$/;"	l
f0100f90	obj/kern/kernel.asm	/^f0100f90:	55                   	push   %ebp$/;"	l
f0100f91	obj/kern/kernel.asm	/^f0100f91:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f93	obj/kern/kernel.asm	/^f0100f93:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100f96	obj/kern/kernel.asm	/^f0100f96:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100f99	obj/kern/kernel.asm	/^f0100f99:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0100f9e	obj/kern/kernel.asm	/^f0100f9e:	74 19                	je     f0100fb9 <page_free+0x29>$/;"	l
f0100fa0	obj/kern/kernel.asm	/^f0100fa0:	68 90 70 10 f0       	push   $0xf0107090$/;"	l
f0100fa5	obj/kern/kernel.asm	/^f0100fa5:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0100faa	obj/kern/kernel.asm	/^f0100faa:	68 97 01 00 00       	push   $0x197$/;"	l
f0100faf	obj/kern/kernel.asm	/^f0100faf:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0100fb4	obj/kern/kernel.asm	/^f0100fb4:	e8 87 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100fb9	obj/kern/kernel.asm	/^f0100fb9:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0100fbc	obj/kern/kernel.asm	/^f0100fbc:	74 19                	je     f0100fd7 <page_free+0x47>$/;"	l
f0100fbe	obj/kern/kernel.asm	/^f0100fbe:	68 a0 70 10 f0       	push   $0xf01070a0$/;"	l
f0100fc3	obj/kern/kernel.asm	/^f0100fc3:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0100fc8	obj/kern/kernel.asm	/^f0100fc8:	68 98 01 00 00       	push   $0x198$/;"	l
f0100fcd	obj/kern/kernel.asm	/^f0100fcd:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0100fd2	obj/kern/kernel.asm	/^f0100fd2:	e8 69 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100fd7	obj/kern/kernel.asm	/^f0100fd7:	8b 15 40 52 1e f0    	mov    0xf01e5240,%edx$/;"	l
f0100fdd	obj/kern/kernel.asm	/^f0100fdd:	89 10                	mov    %edx,(%eax)$/;"	l
f0100fdf	obj/kern/kernel.asm	/^f0100fdf:	a3 40 52 1e f0       	mov    %eax,0xf01e5240$/;"	l
f0100fe4	obj/kern/kernel.asm	/^f0100fe4:	c9                   	leave  $/;"	l
f0100fe5	obj/kern/kernel.asm	/^f0100fe5:	c3                   	ret    $/;"	l
f0100fe6	obj/kern/kernel.asm	/^f0100fe6 <page_decref>:$/;"	l
f0100fe6	obj/kern/kernel.asm	/^f0100fe6:	55                   	push   %ebp$/;"	l
f0100fe7	obj/kern/kernel.asm	/^f0100fe7:	89 e5                	mov    %esp,%ebp$/;"	l
f0100fe9	obj/kern/kernel.asm	/^f0100fe9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100fef	obj/kern/kernel.asm	/^f0100fef:	0f b7 42 04          	movzwl 0x4(%edx),%eax$/;"	l
f0100ff3	obj/kern/kernel.asm	/^f0100ff3:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100ff6	obj/kern/kernel.asm	/^f0100ff6:	66 89 42 04          	mov    %ax,0x4(%edx)$/;"	l
f0100ffa	obj/kern/kernel.asm	/^f0100ffa:	66 85 c0             	test   %ax,%ax$/;"	l
f0100ffd	obj/kern/kernel.asm	/^f0100ffd:	75 0c                	jne    f010100b <page_decref+0x25>$/;"	l
f0100fff	obj/kern/kernel.asm	/^f0100fff:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101002	obj/kern/kernel.asm	/^f0101002:	52                   	push   %edx$/;"	l
f0101003	obj/kern/kernel.asm	/^f0101003:	e8 88 ff ff ff       	call   f0100f90 <page_free>$/;"	l
f0101008	obj/kern/kernel.asm	/^f0101008:	83 c4 10             	add    $0x10,%esp$/;"	l
f010100b	obj/kern/kernel.asm	/^f010100b:	c9                   	leave  $/;"	l
f010100c	obj/kern/kernel.asm	/^f010100c:	c3                   	ret    $/;"	l
f010100d	obj/kern/kernel.asm	/^f010100d <pgdir_walk>:$/;"	l
f010100d	obj/kern/kernel.asm	/^f010100d:	55                   	push   %ebp$/;"	l
f010100e	obj/kern/kernel.asm	/^f010100e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101010	obj/kern/kernel.asm	/^f0101010:	56                   	push   %esi$/;"	l
f0101011	obj/kern/kernel.asm	/^f0101011:	53                   	push   %ebx$/;"	l
f0101012	obj/kern/kernel.asm	/^f0101012:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101015	obj/kern/kernel.asm	/^f0101015:	89 de                	mov    %ebx,%esi$/;"	l
f0101017	obj/kern/kernel.asm	/^f0101017:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f010101a	obj/kern/kernel.asm	/^f010101a:	81 e6 ff 03 00 00    	and    $0x3ff,%esi$/;"	l
f0101020	obj/kern/kernel.asm	/^f0101020:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f0101023	obj/kern/kernel.asm	/^f0101023:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f0101026	obj/kern/kernel.asm	/^f0101026:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f0101029	obj/kern/kernel.asm	/^f0101029:	f6 03 01             	testb  $0x1,(%ebx)$/;"	l
f010102c	obj/kern/kernel.asm	/^f010102c:	75 2d                	jne    f010105b <pgdir_walk+0x4e>$/;"	l
f010102e	obj/kern/kernel.asm	/^f010102e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0101032	obj/kern/kernel.asm	/^f0101032:	74 59                	je     f010108d <pgdir_walk+0x80>$/;"	l
f0101034	obj/kern/kernel.asm	/^f0101034:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101037	obj/kern/kernel.asm	/^f0101037:	6a 01                	push   $0x1$/;"	l
f0101039	obj/kern/kernel.asm	/^f0101039:	e8 db fe ff ff       	call   f0100f19 <page_alloc>$/;"	l
f010103e	obj/kern/kernel.asm	/^f010103e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101041	obj/kern/kernel.asm	/^f0101041:	85 c0                	test   %eax,%eax$/;"	l
f0101043	obj/kern/kernel.asm	/^f0101043:	74 4f                	je     f0101094 <pgdir_walk+0x87>$/;"	l
f0101045	obj/kern/kernel.asm	/^f0101045:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f010104a	obj/kern/kernel.asm	/^f010104a:	2b 05 90 5e 1e f0    	sub    0xf01e5e90,%eax$/;"	l
f0101050	obj/kern/kernel.asm	/^f0101050:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101053	obj/kern/kernel.asm	/^f0101053:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101056	obj/kern/kernel.asm	/^f0101056:	83 c8 07             	or     $0x7,%eax$/;"	l
f0101059	obj/kern/kernel.asm	/^f0101059:	89 03                	mov    %eax,(%ebx)$/;"	l
f010105b	obj/kern/kernel.asm	/^f010105b:	8b 03                	mov    (%ebx),%eax$/;"	l
f010105d	obj/kern/kernel.asm	/^f010105d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101062	obj/kern/kernel.asm	/^f0101062:	89 c2                	mov    %eax,%edx$/;"	l
f0101064	obj/kern/kernel.asm	/^f0101064:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101067	obj/kern/kernel.asm	/^f0101067:	3b 15 88 5e 1e f0    	cmp    0xf01e5e88,%edx$/;"	l
f010106d	obj/kern/kernel.asm	/^f010106d:	72 15                	jb     f0101084 <pgdir_walk+0x77>$/;"	l
f010106f	obj/kern/kernel.asm	/^f010106f:	50                   	push   %eax$/;"	l
f0101070	obj/kern/kernel.asm	/^f0101070:	68 84 60 10 f0       	push   $0xf0106084$/;"	l
f0101075	obj/kern/kernel.asm	/^f0101075:	68 d5 01 00 00       	push   $0x1d5$/;"	l
f010107a	obj/kern/kernel.asm	/^f010107a:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f010107f	obj/kern/kernel.asm	/^f010107f:	e8 bc ef ff ff       	call   f0100040 <_panic>$/;"	l
f0101084	obj/kern/kernel.asm	/^f0101084:	8d 84 b0 00 00 00 f0 	lea    -0x10000000(%eax,%esi,4),%eax$/;"	l
f010108b	obj/kern/kernel.asm	/^f010108b:	eb 0c                	jmp    f0101099 <pgdir_walk+0x8c>$/;"	l
f010108d	obj/kern/kernel.asm	/^f010108d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101092	obj/kern/kernel.asm	/^f0101092:	eb 05                	jmp    f0101099 <pgdir_walk+0x8c>$/;"	l
f0101094	obj/kern/kernel.asm	/^f0101094:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101099	obj/kern/kernel.asm	/^f0101099:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010109c	obj/kern/kernel.asm	/^f010109c:	5b                   	pop    %ebx$/;"	l
f010109d	obj/kern/kernel.asm	/^f010109d:	5e                   	pop    %esi$/;"	l
f010109e	obj/kern/kernel.asm	/^f010109e:	5d                   	pop    %ebp$/;"	l
f010109f	obj/kern/kernel.asm	/^f010109f:	c3                   	ret    $/;"	l
f01010a0	obj/kern/kernel.asm	/^f01010a0 <boot_map_region>:$/;"	l
f01010a0	obj/kern/kernel.asm	/^f01010a0:	55                   	push   %ebp$/;"	l
f01010a1	obj/kern/kernel.asm	/^f01010a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01010a3	obj/kern/kernel.asm	/^f01010a3:	57                   	push   %edi$/;"	l
f01010a4	obj/kern/kernel.asm	/^f01010a4:	56                   	push   %esi$/;"	l
f01010a5	obj/kern/kernel.asm	/^f01010a5:	53                   	push   %ebx$/;"	l
f01010a6	obj/kern/kernel.asm	/^f01010a6:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01010a9	obj/kern/kernel.asm	/^f01010a9:	89 c7                	mov    %eax,%edi$/;"	l
f01010ab	obj/kern/kernel.asm	/^f01010ab:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f01010ae	obj/kern/kernel.asm	/^f01010ae:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f01010b1	obj/kern/kernel.asm	/^f01010b1:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01010b6	obj/kern/kernel.asm	/^f01010b6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01010b9	obj/kern/kernel.asm	/^f01010b9:	83 c8 01             	or     $0x1,%eax$/;"	l
f01010bc	obj/kern/kernel.asm	/^f01010bc:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01010bf	obj/kern/kernel.asm	/^f01010bf:	eb 1f                	jmp    f01010e0 <boot_map_region+0x40>$/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01010c4	obj/kern/kernel.asm	/^f01010c4:	6a 01                	push   $0x1$/;"	l
f01010c6	obj/kern/kernel.asm	/^f01010c6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01010c9	obj/kern/kernel.asm	/^f01010c9:	01 d8                	add    %ebx,%eax$/;"	l
f01010cb	obj/kern/kernel.asm	/^f01010cb:	50                   	push   %eax$/;"	l
f01010cc	obj/kern/kernel.asm	/^f01010cc:	57                   	push   %edi$/;"	l
f01010cd	obj/kern/kernel.asm	/^f01010cd:	e8 3b ff ff ff       	call   f010100d <pgdir_walk>$/;"	l
f01010d2	obj/kern/kernel.asm	/^f01010d2:	0b 75 dc             	or     -0x24(%ebp),%esi$/;"	l
f01010d5	obj/kern/kernel.asm	/^f01010d5:	89 30                	mov    %esi,(%eax)$/;"	l
f01010d7	obj/kern/kernel.asm	/^f01010d7:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01010dd	obj/kern/kernel.asm	/^f01010dd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010e0	obj/kern/kernel.asm	/^f01010e0:	89 de                	mov    %ebx,%esi$/;"	l
f01010e2	obj/kern/kernel.asm	/^f01010e2:	03 75 08             	add    0x8(%ebp),%esi$/;"	l
f01010e5	obj/kern/kernel.asm	/^f01010e5:	39 5d e4             	cmp    %ebx,-0x1c(%ebp)$/;"	l
f01010e8	obj/kern/kernel.asm	/^f01010e8:	77 d7                	ja     f01010c1 <boot_map_region+0x21>$/;"	l
f01010ea	obj/kern/kernel.asm	/^f01010ea:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01010ed	obj/kern/kernel.asm	/^f01010ed:	5b                   	pop    %ebx$/;"	l
f01010ee	obj/kern/kernel.asm	/^f01010ee:	5e                   	pop    %esi$/;"	l
f01010ef	obj/kern/kernel.asm	/^f01010ef:	5f                   	pop    %edi$/;"	l
f01010f0	obj/kern/kernel.asm	/^f01010f0:	5d                   	pop    %ebp$/;"	l
f01010f1	obj/kern/kernel.asm	/^f01010f1:	c3                   	ret    $/;"	l
f01010f2	obj/kern/kernel.asm	/^f01010f2 <page_lookup>:$/;"	l
f01010f2	obj/kern/kernel.asm	/^f01010f2:	55                   	push   %ebp$/;"	l
f01010f3	obj/kern/kernel.asm	/^f01010f3:	89 e5                	mov    %esp,%ebp$/;"	l
f01010f5	obj/kern/kernel.asm	/^f01010f5:	53                   	push   %ebx$/;"	l
f01010f6	obj/kern/kernel.asm	/^f01010f6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01010f9	obj/kern/kernel.asm	/^f01010f9:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01010fc	obj/kern/kernel.asm	/^f01010fc:	6a 00                	push   $0x0$/;"	l
f01010fe	obj/kern/kernel.asm	/^f01010fe:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101101	obj/kern/kernel.asm	/^f0101101:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101104	obj/kern/kernel.asm	/^f0101104:	e8 04 ff ff ff       	call   f010100d <pgdir_walk>$/;"	l
f0101109	obj/kern/kernel.asm	/^f0101109:	83 c4 10             	add    $0x10,%esp$/;"	l
f010110c	obj/kern/kernel.asm	/^f010110c:	85 c0                	test   %eax,%eax$/;"	l
f010110e	obj/kern/kernel.asm	/^f010110e:	74 38                	je     f0101148 <page_lookup+0x56>$/;"	l
f0101110	obj/kern/kernel.asm	/^f0101110:	89 c1                	mov    %eax,%ecx$/;"	l
f0101112	obj/kern/kernel.asm	/^f0101112:	8b 10                	mov    (%eax),%edx$/;"	l
f0101114	obj/kern/kernel.asm	/^f0101114:	f6 c2 01             	test   $0x1,%dl$/;"	l
f0101117	obj/kern/kernel.asm	/^f0101117:	74 36                	je     f010114f <page_lookup+0x5d>$/;"	l
f0101119	obj/kern/kernel.asm	/^f0101119:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010111c	obj/kern/kernel.asm	/^f010111c:	3b 15 88 5e 1e f0    	cmp    0xf01e5e88,%edx$/;"	l
f0101122	obj/kern/kernel.asm	/^f0101122:	72 14                	jb     f0101138 <page_lookup+0x46>$/;"	l
f0101124	obj/kern/kernel.asm	/^f0101124:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	68 f8 66 10 f0       	push   $0xf01066f8$/;"	l
f010112c	obj/kern/kernel.asm	/^f010112c:	6a 51                	push   $0x51$/;"	l
f010112e	obj/kern/kernel.asm	/^f010112e:	68 c9 6f 10 f0       	push   $0xf0106fc9$/;"	l
f0101133	obj/kern/kernel.asm	/^f0101133:	e8 08 ef ff ff       	call   f0100040 <_panic>$/;"	l
f0101138	obj/kern/kernel.asm	/^f0101138:	a1 90 5e 1e f0       	mov    0xf01e5e90,%eax$/;"	l
f010113d	obj/kern/kernel.asm	/^f010113d:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f0101140	obj/kern/kernel.asm	/^f0101140:	85 db                	test   %ebx,%ebx$/;"	l
f0101142	obj/kern/kernel.asm	/^f0101142:	74 10                	je     f0101154 <page_lookup+0x62>$/;"	l
f0101144	obj/kern/kernel.asm	/^f0101144:	89 0b                	mov    %ecx,(%ebx)$/;"	l
f0101146	obj/kern/kernel.asm	/^f0101146:	eb 0c                	jmp    f0101154 <page_lookup+0x62>$/;"	l
f0101148	obj/kern/kernel.asm	/^f0101148:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010114d	obj/kern/kernel.asm	/^f010114d:	eb 05                	jmp    f0101154 <page_lookup+0x62>$/;"	l
f010114f	obj/kern/kernel.asm	/^f010114f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101154	obj/kern/kernel.asm	/^f0101154:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0101157	obj/kern/kernel.asm	/^f0101157:	c9                   	leave  $/;"	l
f0101158	obj/kern/kernel.asm	/^f0101158:	c3                   	ret    $/;"	l
f0101159	obj/kern/kernel.asm	/^f0101159 <tlb_invalidate>:$/;"	l
f0101159	obj/kern/kernel.asm	/^f0101159:	55                   	push   %ebp$/;"	l
f010115a	obj/kern/kernel.asm	/^f010115a:	89 e5                	mov    %esp,%ebp$/;"	l
f010115c	obj/kern/kernel.asm	/^f010115c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010115f	obj/kern/kernel.asm	/^f010115f:	e8 6e 48 00 00       	call   f01059d2 <cpunum>$/;"	l
f0101164	obj/kern/kernel.asm	/^f0101164:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0101167	obj/kern/kernel.asm	/^f0101167:	83 b8 28 60 1e f0 00 	cmpl   $0x0,-0xfe19fd8(%eax)$/;"	l
f010116e	obj/kern/kernel.asm	/^f010116e:	74 16                	je     f0101186 <tlb_invalidate+0x2d>$/;"	l
f0101170	obj/kern/kernel.asm	/^f0101170:	e8 5d 48 00 00       	call   f01059d2 <cpunum>$/;"	l
f0101175	obj/kern/kernel.asm	/^f0101175:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0101178	obj/kern/kernel.asm	/^f0101178:	8b 80 28 60 1e f0    	mov    -0xfe19fd8(%eax),%eax$/;"	l
f010117e	obj/kern/kernel.asm	/^f010117e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101181	obj/kern/kernel.asm	/^f0101181:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f0101184	obj/kern/kernel.asm	/^f0101184:	75 06                	jne    f010118c <tlb_invalidate+0x33>$/;"	l
f0101186	obj/kern/kernel.asm	/^f0101186:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101189	obj/kern/kernel.asm	/^f0101189:	0f 01 38             	invlpg (%eax)$/;"	l
f010118c	obj/kern/kernel.asm	/^f010118c:	c9                   	leave  $/;"	l
f010118d	obj/kern/kernel.asm	/^f010118d:	c3                   	ret    $/;"	l
f010118e	obj/kern/kernel.asm	/^f010118e <page_remove>:$/;"	l
f010118e	obj/kern/kernel.asm	/^f010118e:	55                   	push   %ebp$/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101191	obj/kern/kernel.asm	/^f0101191:	56                   	push   %esi$/;"	l
f0101192	obj/kern/kernel.asm	/^f0101192:	53                   	push   %ebx$/;"	l
f0101193	obj/kern/kernel.asm	/^f0101193:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101196	obj/kern/kernel.asm	/^f0101196:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0101199	obj/kern/kernel.asm	/^f0101199:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01011a3	obj/kern/kernel.asm	/^f01011a3:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01011a6	obj/kern/kernel.asm	/^f01011a6:	50                   	push   %eax$/;"	l
f01011a7	obj/kern/kernel.asm	/^f01011a7:	56                   	push   %esi$/;"	l
f01011a8	obj/kern/kernel.asm	/^f01011a8:	53                   	push   %ebx$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	e8 44 ff ff ff       	call   f01010f2 <page_lookup>$/;"	l
f01011ae	obj/kern/kernel.asm	/^f01011ae:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1:	85 c0                	test   %eax,%eax$/;"	l
f01011b3	obj/kern/kernel.asm	/^f01011b3:	74 1f                	je     f01011d4 <page_remove+0x46>$/;"	l
f01011b5	obj/kern/kernel.asm	/^f01011b5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01011b8	obj/kern/kernel.asm	/^f01011b8:	50                   	push   %eax$/;"	l
f01011b9	obj/kern/kernel.asm	/^f01011b9:	e8 28 fe ff ff       	call   f0100fe6 <page_decref>$/;"	l
f01011be	obj/kern/kernel.asm	/^f01011be:	83 c4 08             	add    $0x8,%esp$/;"	l
f01011c1	obj/kern/kernel.asm	/^f01011c1:	56                   	push   %esi$/;"	l
f01011c2	obj/kern/kernel.asm	/^f01011c2:	53                   	push   %ebx$/;"	l
f01011c3	obj/kern/kernel.asm	/^f01011c3:	e8 91 ff ff ff       	call   f0101159 <tlb_invalidate>$/;"	l
f01011c8	obj/kern/kernel.asm	/^f01011c8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01011d1	obj/kern/kernel.asm	/^f01011d1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011d4	obj/kern/kernel.asm	/^f01011d4:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01011d7	obj/kern/kernel.asm	/^f01011d7:	5b                   	pop    %ebx$/;"	l
f01011d8	obj/kern/kernel.asm	/^f01011d8:	5e                   	pop    %esi$/;"	l
f01011d9	obj/kern/kernel.asm	/^f01011d9:	5d                   	pop    %ebp$/;"	l
f01011da	obj/kern/kernel.asm	/^f01011da:	c3                   	ret    $/;"	l
f01011db	obj/kern/kernel.asm	/^f01011db <page_insert>:$/;"	l
f01011db	obj/kern/kernel.asm	/^f01011db:	55                   	push   %ebp$/;"	l
f01011dc	obj/kern/kernel.asm	/^f01011dc:	89 e5                	mov    %esp,%ebp$/;"	l
f01011de	obj/kern/kernel.asm	/^f01011de:	57                   	push   %edi$/;"	l
f01011df	obj/kern/kernel.asm	/^f01011df:	56                   	push   %esi$/;"	l
f01011e0	obj/kern/kernel.asm	/^f01011e0:	53                   	push   %ebx$/;"	l
f01011e1	obj/kern/kernel.asm	/^f01011e1:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01011e4	obj/kern/kernel.asm	/^f01011e4:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01011e7	obj/kern/kernel.asm	/^f01011e7:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f01011ea	obj/kern/kernel.asm	/^f01011ea:	6a 01                	push   $0x1$/;"	l
f01011ec	obj/kern/kernel.asm	/^f01011ec:	57                   	push   %edi$/;"	l
f01011ed	obj/kern/kernel.asm	/^f01011ed:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01011f0	obj/kern/kernel.asm	/^f01011f0:	e8 18 fe ff ff       	call   f010100d <pgdir_walk>$/;"	l
f01011f5	obj/kern/kernel.asm	/^f01011f5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011f8	obj/kern/kernel.asm	/^f01011f8:	85 c0                	test   %eax,%eax$/;"	l
f01011fa	obj/kern/kernel.asm	/^f01011fa:	74 38                	je     f0101234 <page_insert+0x59>$/;"	l
f01011fc	obj/kern/kernel.asm	/^f01011fc:	89 c6                	mov    %eax,%esi$/;"	l
f01011fe	obj/kern/kernel.asm	/^f01011fe:	66 83 43 04 01       	addw   $0x1,0x4(%ebx)$/;"	l
f0101203	obj/kern/kernel.asm	/^f0101203:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0101206	obj/kern/kernel.asm	/^f0101206:	74 0f                	je     f0101217 <page_insert+0x3c>$/;"	l
f0101208	obj/kern/kernel.asm	/^f0101208:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010120b	obj/kern/kernel.asm	/^f010120b:	57                   	push   %edi$/;"	l
f010120c	obj/kern/kernel.asm	/^f010120c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010120f	obj/kern/kernel.asm	/^f010120f:	e8 7a ff ff ff       	call   f010118e <page_remove>$/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101217	obj/kern/kernel.asm	/^f0101217:	2b 1d 90 5e 1e f0    	sub    0xf01e5e90,%ebx$/;"	l
f010121d	obj/kern/kernel.asm	/^f010121d:	c1 fb 03             	sar    $0x3,%ebx$/;"	l
f0101220	obj/kern/kernel.asm	/^f0101220:	c1 e3 0c             	shl    $0xc,%ebx$/;"	l
f0101223	obj/kern/kernel.asm	/^f0101223:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101226	obj/kern/kernel.asm	/^f0101226:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101229	obj/kern/kernel.asm	/^f0101229:	09 c3                	or     %eax,%ebx$/;"	l
f010122b	obj/kern/kernel.asm	/^f010122b:	89 1e                	mov    %ebx,(%esi)$/;"	l
f010122d	obj/kern/kernel.asm	/^f010122d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101232	obj/kern/kernel.asm	/^f0101232:	eb 05                	jmp    f0101239 <page_insert+0x5e>$/;"	l
f0101234	obj/kern/kernel.asm	/^f0101234:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0101239	obj/kern/kernel.asm	/^f0101239:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010123c	obj/kern/kernel.asm	/^f010123c:	5b                   	pop    %ebx$/;"	l
f010123d	obj/kern/kernel.asm	/^f010123d:	5e                   	pop    %esi$/;"	l
f010123e	obj/kern/kernel.asm	/^f010123e:	5f                   	pop    %edi$/;"	l
f010123f	obj/kern/kernel.asm	/^f010123f:	5d                   	pop    %ebp$/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240:	c3                   	ret    $/;"	l
f0101241	obj/kern/kernel.asm	/^f0101241 <mmio_map_region>:$/;"	l
f0101241	obj/kern/kernel.asm	/^f0101241:	55                   	push   %ebp$/;"	l
f0101242	obj/kern/kernel.asm	/^f0101242:	89 e5                	mov    %esp,%ebp$/;"	l
f0101244	obj/kern/kernel.asm	/^f0101244:	56                   	push   %esi$/;"	l
f0101245	obj/kern/kernel.asm	/^f0101245:	53                   	push   %ebx$/;"	l
f0101246	obj/kern/kernel.asm	/^f0101246:	8b 35 00 03 12 f0    	mov    0xf0120300,%esi$/;"	l
f010124c	obj/kern/kernel.asm	/^f010124c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	8d 98 ff 0f 00 00    	lea    0xfff(%eax),%ebx$/;"	l
f0101255	obj/kern/kernel.asm	/^f0101255:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f010125b	obj/kern/kernel.asm	/^f010125b:	8d 83 00 00 80 ef    	lea    -0x10800000(%ebx),%eax$/;"	l
f0101261	obj/kern/kernel.asm	/^f0101261:	3d 00 00 c0 ef       	cmp    $0xefc00000,%eax$/;"	l
f0101266	obj/kern/kernel.asm	/^f0101266:	76 17                	jbe    f010127f <mmio_map_region+0x3e>$/;"	l
f0101268	obj/kern/kernel.asm	/^f0101268:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010126b	obj/kern/kernel.asm	/^f010126b:	68 18 67 10 f0       	push   $0xf0106718$/;"	l
f0101270	obj/kern/kernel.asm	/^f0101270:	68 8e 02 00 00       	push   $0x28e$/;"	l
f0101275	obj/kern/kernel.asm	/^f0101275:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f010127a	obj/kern/kernel.asm	/^f010127a:	e8 c1 ed ff ff       	call   f0100040 <_panic>$/;"	l
f010127f	obj/kern/kernel.asm	/^f010127f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101282	obj/kern/kernel.asm	/^f0101282:	6a 1a                	push   $0x1a$/;"	l
f0101284	obj/kern/kernel.asm	/^f0101284:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101287	obj/kern/kernel.asm	/^f0101287:	89 d9                	mov    %ebx,%ecx$/;"	l
f0101289	obj/kern/kernel.asm	/^f0101289:	89 f2                	mov    %esi,%edx$/;"	l
f010128b	obj/kern/kernel.asm	/^f010128b:	a1 8c 5e 1e f0       	mov    0xf01e5e8c,%eax$/;"	l
f0101290	obj/kern/kernel.asm	/^f0101290:	e8 0b fe ff ff       	call   f01010a0 <boot_map_region>$/;"	l
f0101295	obj/kern/kernel.asm	/^f0101295:	01 1d 00 03 12 f0    	add    %ebx,0xf0120300$/;"	l
f010129b	obj/kern/kernel.asm	/^f010129b:	89 f0                	mov    %esi,%eax$/;"	l
f010129d	obj/kern/kernel.asm	/^f010129d:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01012a0	obj/kern/kernel.asm	/^f01012a0:	5b                   	pop    %ebx$/;"	l
f01012a1	obj/kern/kernel.asm	/^f01012a1:	5e                   	pop    %esi$/;"	l
f01012a2	obj/kern/kernel.asm	/^f01012a2:	5d                   	pop    %ebp$/;"	l
f01012a3	obj/kern/kernel.asm	/^f01012a3:	c3                   	ret    $/;"	l
f01012a4	obj/kern/kernel.asm	/^f01012a4 <mem_init>:$/;"	l
f01012a4	obj/kern/kernel.asm	/^f01012a4:	55                   	push   %ebp$/;"	l
f01012a5	obj/kern/kernel.asm	/^f01012a5:	89 e5                	mov    %esp,%ebp$/;"	l
f01012a7	obj/kern/kernel.asm	/^f01012a7:	57                   	push   %edi$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	56                   	push   %esi$/;"	l
f01012a9	obj/kern/kernel.asm	/^f01012a9:	53                   	push   %ebx$/;"	l
f01012aa	obj/kern/kernel.asm	/^f01012aa:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01012ad	obj/kern/kernel.asm	/^f01012ad:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f01012b2	obj/kern/kernel.asm	/^f01012b2:	e8 1d f8 ff ff       	call   f0100ad4 <nvram_read>$/;"	l
f01012b7	obj/kern/kernel.asm	/^f01012b7:	89 c3                	mov    %eax,%ebx$/;"	l
f01012b9	obj/kern/kernel.asm	/^f01012b9:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f01012be	obj/kern/kernel.asm	/^f01012be:	e8 11 f8 ff ff       	call   f0100ad4 <nvram_read>$/;"	l
f01012c3	obj/kern/kernel.asm	/^f01012c3:	89 c6                	mov    %eax,%esi$/;"	l
f01012c5	obj/kern/kernel.asm	/^f01012c5:	b8 34 00 00 00       	mov    $0x34,%eax$/;"	l
f01012ca	obj/kern/kernel.asm	/^f01012ca:	e8 05 f8 ff ff       	call   f0100ad4 <nvram_read>$/;"	l
f01012cf	obj/kern/kernel.asm	/^f01012cf:	c1 e0 06             	shl    $0x6,%eax$/;"	l
f01012d2	obj/kern/kernel.asm	/^f01012d2:	85 c0                	test   %eax,%eax$/;"	l
f01012d4	obj/kern/kernel.asm	/^f01012d4:	74 07                	je     f01012dd <mem_init+0x39>$/;"	l
f01012d6	obj/kern/kernel.asm	/^f01012d6:	05 00 40 00 00       	add    $0x4000,%eax$/;"	l
f01012db	obj/kern/kernel.asm	/^f01012db:	eb 0b                	jmp    f01012e8 <mem_init+0x44>$/;"	l
f01012dd	obj/kern/kernel.asm	/^f01012dd:	8d 86 00 04 00 00    	lea    0x400(%esi),%eax$/;"	l
f01012e3	obj/kern/kernel.asm	/^f01012e3:	85 f6                	test   %esi,%esi$/;"	l
f01012e5	obj/kern/kernel.asm	/^f01012e5:	0f 44 c3             	cmove  %ebx,%eax$/;"	l
f01012e8	obj/kern/kernel.asm	/^f01012e8:	89 c2                	mov    %eax,%edx$/;"	l
f01012ea	obj/kern/kernel.asm	/^f01012ea:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f01012ed	obj/kern/kernel.asm	/^f01012ed:	89 15 88 5e 1e f0    	mov    %edx,0xf01e5e88$/;"	l
f01012f3	obj/kern/kernel.asm	/^f01012f3:	89 da                	mov    %ebx,%edx$/;"	l
f01012f5	obj/kern/kernel.asm	/^f01012f5:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f01012f8	obj/kern/kernel.asm	/^f01012f8:	89 15 44 52 1e f0    	mov    %edx,0xf01e5244$/;"	l
f01012fe	obj/kern/kernel.asm	/^f01012fe:	89 c2                	mov    %eax,%edx$/;"	l
f0101300	obj/kern/kernel.asm	/^f0101300:	29 da                	sub    %ebx,%edx$/;"	l
f0101302	obj/kern/kernel.asm	/^f0101302:	52                   	push   %edx$/;"	l
f0101303	obj/kern/kernel.asm	/^f0101303:	53                   	push   %ebx$/;"	l
f0101304	obj/kern/kernel.asm	/^f0101304:	50                   	push   %eax$/;"	l
f0101305	obj/kern/kernel.asm	/^f0101305:	68 3c 67 10 f0       	push   $0xf010673c$/;"	l
f010130a	obj/kern/kernel.asm	/^f010130a:	e8 9b 23 00 00       	call   f01036aa <cprintf>$/;"	l
f010130f	obj/kern/kernel.asm	/^f010130f:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0101314	obj/kern/kernel.asm	/^f0101314:	e8 62 f7 ff ff       	call   f0100a7b <boot_alloc>$/;"	l
f0101319	obj/kern/kernel.asm	/^f0101319:	a3 8c 5e 1e f0       	mov    %eax,0xf01e5e8c$/;"	l
f010131e	obj/kern/kernel.asm	/^f010131e:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0101321	obj/kern/kernel.asm	/^f0101321:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101326	obj/kern/kernel.asm	/^f0101326:	6a 00                	push   $0x0$/;"	l
f0101328	obj/kern/kernel.asm	/^f0101328:	50                   	push   %eax$/;"	l
f0101329	obj/kern/kernel.asm	/^f0101329:	e8 83 40 00 00       	call   f01053b1 <memset>$/;"	l
f010132e	obj/kern/kernel.asm	/^f010132e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0101331	obj/kern/kernel.asm	/^f0101331:	ff 35 8c 5e 1e f0    	pushl  0xf01e5e8c$/;"	l
f0101337	obj/kern/kernel.asm	/^f0101337:	68 b4 70 10 f0       	push   $0xf01070b4$/;"	l
f010133c	obj/kern/kernel.asm	/^f010133c:	e8 69 23 00 00       	call   f01036aa <cprintf>$/;"	l
f0101341	obj/kern/kernel.asm	/^f0101341:	a1 8c 5e 1e f0       	mov    0xf01e5e8c,%eax$/;"	l
f0101346	obj/kern/kernel.asm	/^f0101346:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101349	obj/kern/kernel.asm	/^f0101349:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010134e	obj/kern/kernel.asm	/^f010134e:	77 15                	ja     f0101365 <mem_init+0xc1>$/;"	l
f0101350	obj/kern/kernel.asm	/^f0101350:	50                   	push   %eax$/;"	l
f0101351	obj/kern/kernel.asm	/^f0101351:	68 a8 60 10 f0       	push   $0xf01060a8$/;"	l
f0101356	obj/kern/kernel.asm	/^f0101356:	68 9e 00 00 00       	push   $0x9e$/;"	l
f010135b	obj/kern/kernel.asm	/^f010135b:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101360	obj/kern/kernel.asm	/^f0101360:	e8 db ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101365	obj/kern/kernel.asm	/^f0101365:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f010136b	obj/kern/kernel.asm	/^f010136b:	83 ca 05             	or     $0x5,%edx$/;"	l
f010136e	obj/kern/kernel.asm	/^f010136e:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0101374	obj/kern/kernel.asm	/^f0101374:	a1 88 5e 1e f0       	mov    0xf01e5e88,%eax$/;"	l
f0101379	obj/kern/kernel.asm	/^f0101379:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f010137c	obj/kern/kernel.asm	/^f010137c:	e8 fa f6 ff ff       	call   f0100a7b <boot_alloc>$/;"	l
f0101381	obj/kern/kernel.asm	/^f0101381:	a3 90 5e 1e f0       	mov    %eax,0xf01e5e90$/;"	l
f0101386	obj/kern/kernel.asm	/^f0101386:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101389	obj/kern/kernel.asm	/^f0101389:	8b 0d 88 5e 1e f0    	mov    0xf01e5e88,%ecx$/;"	l
f010138f	obj/kern/kernel.asm	/^f010138f:	8d 14 cd 00 00 00 00 	lea    0x0(,%ecx,8),%edx$/;"	l
f0101396	obj/kern/kernel.asm	/^f0101396:	52                   	push   %edx$/;"	l
f0101397	obj/kern/kernel.asm	/^f0101397:	6a 00                	push   $0x0$/;"	l
f0101399	obj/kern/kernel.asm	/^f0101399:	50                   	push   %eax$/;"	l
f010139a	obj/kern/kernel.asm	/^f010139a:	e8 12 40 00 00       	call   f01053b1 <memset>$/;"	l
f010139f	obj/kern/kernel.asm	/^f010139f:	b8 00 f0 01 00       	mov    $0x1f000,%eax$/;"	l
f01013a4	obj/kern/kernel.asm	/^f01013a4:	e8 d2 f6 ff ff       	call   f0100a7b <boot_alloc>$/;"	l
f01013a9	obj/kern/kernel.asm	/^f01013a9:	a3 48 52 1e f0       	mov    %eax,0xf01e5248$/;"	l
f01013ae	obj/kern/kernel.asm	/^f01013ae:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01013b1	obj/kern/kernel.asm	/^f01013b1:	68 00 f0 01 00       	push   $0x1f000$/;"	l
f01013b6	obj/kern/kernel.asm	/^f01013b6:	6a 00                	push   $0x0$/;"	l
f01013b8	obj/kern/kernel.asm	/^f01013b8:	50                   	push   %eax$/;"	l
f01013b9	obj/kern/kernel.asm	/^f01013b9:	e8 f3 3f 00 00       	call   f01053b1 <memset>$/;"	l
f01013be	obj/kern/kernel.asm	/^f01013be:	e8 a0 fa ff ff       	call   f0100e63 <page_init>$/;"	l
f01013c3	obj/kern/kernel.asm	/^f01013c3:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01013c8	obj/kern/kernel.asm	/^f01013c8:	e8 94 f7 ff ff       	call   f0100b61 <check_page_free_list>$/;"	l
f01013cd	obj/kern/kernel.asm	/^f01013cd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01013d0	obj/kern/kernel.asm	/^f01013d0:	83 3d 90 5e 1e f0 00 	cmpl   $0x0,0xf01e5e90$/;"	l
f01013d7	obj/kern/kernel.asm	/^f01013d7:	75 17                	jne    f01013f0 <mem_init+0x14c>$/;"	l
f01013d9	obj/kern/kernel.asm	/^f01013d9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01013dc	obj/kern/kernel.asm	/^f01013dc:	68 c5 70 10 f0       	push   $0xf01070c5$/;"	l
f01013e1	obj/kern/kernel.asm	/^f01013e1:	68 28 03 00 00       	push   $0x328$/;"	l
f01013e6	obj/kern/kernel.asm	/^f01013e6:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01013eb	obj/kern/kernel.asm	/^f01013eb:	e8 50 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013f0	obj/kern/kernel.asm	/^f01013f0:	a1 40 52 1e f0       	mov    0xf01e5240,%eax$/;"	l
f01013f5	obj/kern/kernel.asm	/^f01013f5:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01013fa	obj/kern/kernel.asm	/^f01013fa:	eb 05                	jmp    f0101401 <mem_init+0x15d>$/;"	l
f01013fc	obj/kern/kernel.asm	/^f01013fc:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01013ff	obj/kern/kernel.asm	/^f01013ff:	8b 00                	mov    (%eax),%eax$/;"	l
f0101401	obj/kern/kernel.asm	/^f0101401:	85 c0                	test   %eax,%eax$/;"	l
f0101403	obj/kern/kernel.asm	/^f0101403:	75 f7                	jne    f01013fc <mem_init+0x158>$/;"	l
f0101405	obj/kern/kernel.asm	/^f0101405:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101408	obj/kern/kernel.asm	/^f0101408:	6a 00                	push   $0x0$/;"	l
f010140a	obj/kern/kernel.asm	/^f010140a:	e8 0a fb ff ff       	call   f0100f19 <page_alloc>$/;"	l
f010140f	obj/kern/kernel.asm	/^f010140f:	89 c7                	mov    %eax,%edi$/;"	l
f0101411	obj/kern/kernel.asm	/^f0101411:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101414	obj/kern/kernel.asm	/^f0101414:	85 c0                	test   %eax,%eax$/;"	l
f0101416	obj/kern/kernel.asm	/^f0101416:	75 19                	jne    f0101431 <mem_init+0x18d>$/;"	l
f0101418	obj/kern/kernel.asm	/^f0101418:	68 e0 70 10 f0       	push   $0xf01070e0$/;"	l
f010141d	obj/kern/kernel.asm	/^f010141d:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101422	obj/kern/kernel.asm	/^f0101422:	68 30 03 00 00       	push   $0x330$/;"	l
f0101427	obj/kern/kernel.asm	/^f0101427:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f010142c	obj/kern/kernel.asm	/^f010142c:	e8 0f ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101431	obj/kern/kernel.asm	/^f0101431:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101434	obj/kern/kernel.asm	/^f0101434:	6a 00                	push   $0x0$/;"	l
f0101436	obj/kern/kernel.asm	/^f0101436:	e8 de fa ff ff       	call   f0100f19 <page_alloc>$/;"	l
f010143b	obj/kern/kernel.asm	/^f010143b:	89 c6                	mov    %eax,%esi$/;"	l
f010143d	obj/kern/kernel.asm	/^f010143d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101440	obj/kern/kernel.asm	/^f0101440:	85 c0                	test   %eax,%eax$/;"	l
f0101442	obj/kern/kernel.asm	/^f0101442:	75 19                	jne    f010145d <mem_init+0x1b9>$/;"	l
f0101444	obj/kern/kernel.asm	/^f0101444:	68 f6 70 10 f0       	push   $0xf01070f6$/;"	l
f0101449	obj/kern/kernel.asm	/^f0101449:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f010144e	obj/kern/kernel.asm	/^f010144e:	68 31 03 00 00       	push   $0x331$/;"	l
f0101453	obj/kern/kernel.asm	/^f0101453:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101458	obj/kern/kernel.asm	/^f0101458:	e8 e3 eb ff ff       	call   f0100040 <_panic>$/;"	l
f010145d	obj/kern/kernel.asm	/^f010145d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	6a 00                	push   $0x0$/;"	l
f0101462	obj/kern/kernel.asm	/^f0101462:	e8 b2 fa ff ff       	call   f0100f19 <page_alloc>$/;"	l
f0101467	obj/kern/kernel.asm	/^f0101467:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010146a	obj/kern/kernel.asm	/^f010146a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010146d	obj/kern/kernel.asm	/^f010146d:	85 c0                	test   %eax,%eax$/;"	l
f010146f	obj/kern/kernel.asm	/^f010146f:	75 19                	jne    f010148a <mem_init+0x1e6>$/;"	l
f0101471	obj/kern/kernel.asm	/^f0101471:	68 0c 71 10 f0       	push   $0xf010710c$/;"	l
f0101476	obj/kern/kernel.asm	/^f0101476:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f010147b	obj/kern/kernel.asm	/^f010147b:	68 32 03 00 00       	push   $0x332$/;"	l
f0101480	obj/kern/kernel.asm	/^f0101480:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101485	obj/kern/kernel.asm	/^f0101485:	e8 b6 eb ff ff       	call   f0100040 <_panic>$/;"	l
f010148a	obj/kern/kernel.asm	/^f010148a:	39 f7                	cmp    %esi,%edi$/;"	l
f010148c	obj/kern/kernel.asm	/^f010148c:	75 19                	jne    f01014a7 <mem_init+0x203>$/;"	l
f010148e	obj/kern/kernel.asm	/^f010148e:	68 22 71 10 f0       	push   $0xf0107122$/;"	l
f0101493	obj/kern/kernel.asm	/^f0101493:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101498	obj/kern/kernel.asm	/^f0101498:	68 35 03 00 00       	push   $0x335$/;"	l
f010149d	obj/kern/kernel.asm	/^f010149d:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01014a2	obj/kern/kernel.asm	/^f01014a2:	e8 99 eb ff ff       	call   f0100040 <_panic>$/;"	l
f01014a7	obj/kern/kernel.asm	/^f01014a7:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01014aa	obj/kern/kernel.asm	/^f01014aa:	39 c6                	cmp    %eax,%esi$/;"	l
f01014ac	obj/kern/kernel.asm	/^f01014ac:	74 04                	je     f01014b2 <mem_init+0x20e>$/;"	l
f01014ae	obj/kern/kernel.asm	/^f01014ae:	39 c7                	cmp    %eax,%edi$/;"	l
f01014b0	obj/kern/kernel.asm	/^f01014b0:	75 19                	jne    f01014cb <mem_init+0x227>$/;"	l
f01014b2	obj/kern/kernel.asm	/^f01014b2:	68 78 67 10 f0       	push   $0xf0106778$/;"	l
f01014b7	obj/kern/kernel.asm	/^f01014b7:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc:	68 36 03 00 00       	push   $0x336$/;"	l
f01014c1	obj/kern/kernel.asm	/^f01014c1:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01014c6	obj/kern/kernel.asm	/^f01014c6:	e8 75 eb ff ff       	call   f0100040 <_panic>$/;"	l
f01014cb	obj/kern/kernel.asm	/^f01014cb:	8b 0d 90 5e 1e f0    	mov    0xf01e5e90,%ecx$/;"	l
f01014d1	obj/kern/kernel.asm	/^f01014d1:	8b 15 88 5e 1e f0    	mov    0xf01e5e88,%edx$/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01014da	obj/kern/kernel.asm	/^f01014da:	89 f8                	mov    %edi,%eax$/;"	l
f01014dc	obj/kern/kernel.asm	/^f01014dc:	29 c8                	sub    %ecx,%eax$/;"	l
f01014de	obj/kern/kernel.asm	/^f01014de:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01014e1	obj/kern/kernel.asm	/^f01014e1:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01014e4	obj/kern/kernel.asm	/^f01014e4:	39 d0                	cmp    %edx,%eax$/;"	l
f01014e6	obj/kern/kernel.asm	/^f01014e6:	72 19                	jb     f0101501 <mem_init+0x25d>$/;"	l
f01014e8	obj/kern/kernel.asm	/^f01014e8:	68 34 71 10 f0       	push   $0xf0107134$/;"	l
f01014ed	obj/kern/kernel.asm	/^f01014ed:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f01014f2	obj/kern/kernel.asm	/^f01014f2:	68 37 03 00 00       	push   $0x337$/;"	l
f01014f7	obj/kern/kernel.asm	/^f01014f7:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01014fc	obj/kern/kernel.asm	/^f01014fc:	e8 3f eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101501	obj/kern/kernel.asm	/^f0101501:	89 f0                	mov    %esi,%eax$/;"	l
f0101503	obj/kern/kernel.asm	/^f0101503:	29 c8                	sub    %ecx,%eax$/;"	l
f0101505	obj/kern/kernel.asm	/^f0101505:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101508	obj/kern/kernel.asm	/^f0101508:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010150b	obj/kern/kernel.asm	/^f010150b:	39 c2                	cmp    %eax,%edx$/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	77 19                	ja     f0101528 <mem_init+0x284>$/;"	l
f010150f	obj/kern/kernel.asm	/^f010150f:	68 51 71 10 f0       	push   $0xf0107151$/;"	l
f0101514	obj/kern/kernel.asm	/^f0101514:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101519	obj/kern/kernel.asm	/^f0101519:	68 38 03 00 00       	push   $0x338$/;"	l
f010151e	obj/kern/kernel.asm	/^f010151e:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101523	obj/kern/kernel.asm	/^f0101523:	e8 18 eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101528	obj/kern/kernel.asm	/^f0101528:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010152b	obj/kern/kernel.asm	/^f010152b:	29 c8                	sub    %ecx,%eax$/;"	l
f010152d	obj/kern/kernel.asm	/^f010152d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101533	obj/kern/kernel.asm	/^f0101533:	39 c2                	cmp    %eax,%edx$/;"	l
f0101535	obj/kern/kernel.asm	/^f0101535:	77 19                	ja     f0101550 <mem_init+0x2ac>$/;"	l
f0101537	obj/kern/kernel.asm	/^f0101537:	68 6e 71 10 f0       	push   $0xf010716e$/;"	l
f010153c	obj/kern/kernel.asm	/^f010153c:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101541	obj/kern/kernel.asm	/^f0101541:	68 39 03 00 00       	push   $0x339$/;"	l
f0101546	obj/kern/kernel.asm	/^f0101546:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f010154b	obj/kern/kernel.asm	/^f010154b:	e8 f0 ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101550	obj/kern/kernel.asm	/^f0101550:	a1 40 52 1e f0       	mov    0xf01e5240,%eax$/;"	l
f0101555	obj/kern/kernel.asm	/^f0101555:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101558	obj/kern/kernel.asm	/^f0101558:	c7 05 40 52 1e f0 00 	movl   $0x0,0xf01e5240$/;"	l
f010155f	obj/kern/kernel.asm	/^f010155f:	00 00 00 $/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101565	obj/kern/kernel.asm	/^f0101565:	6a 00                	push   $0x0$/;"	l
f0101567	obj/kern/kernel.asm	/^f0101567:	e8 ad f9 ff ff       	call   f0100f19 <page_alloc>$/;"	l
f010156c	obj/kern/kernel.asm	/^f010156c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010156f	obj/kern/kernel.asm	/^f010156f:	85 c0                	test   %eax,%eax$/;"	l
f0101571	obj/kern/kernel.asm	/^f0101571:	74 19                	je     f010158c <mem_init+0x2e8>$/;"	l
f0101573	obj/kern/kernel.asm	/^f0101573:	68 8b 71 10 f0       	push   $0xf010718b$/;"	l
f0101578	obj/kern/kernel.asm	/^f0101578:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f010157d	obj/kern/kernel.asm	/^f010157d:	68 40 03 00 00       	push   $0x340$/;"	l
f0101582	obj/kern/kernel.asm	/^f0101582:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101587	obj/kern/kernel.asm	/^f0101587:	e8 b4 ea ff ff       	call   f0100040 <_panic>$/;"	l
f010158c	obj/kern/kernel.asm	/^f010158c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010158f	obj/kern/kernel.asm	/^f010158f:	57                   	push   %edi$/;"	l
f0101590	obj/kern/kernel.asm	/^f0101590:	e8 fb f9 ff ff       	call   f0100f90 <page_free>$/;"	l
f0101595	obj/kern/kernel.asm	/^f0101595:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101598	obj/kern/kernel.asm	/^f0101598:	e8 f3 f9 ff ff       	call   f0100f90 <page_free>$/;"	l
f010159d	obj/kern/kernel.asm	/^f010159d:	83 c4 04             	add    $0x4,%esp$/;"	l
f01015a0	obj/kern/kernel.asm	/^f01015a0:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01015a3	obj/kern/kernel.asm	/^f01015a3:	e8 e8 f9 ff ff       	call   f0100f90 <page_free>$/;"	l
f01015a8	obj/kern/kernel.asm	/^f01015a8:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01015af	obj/kern/kernel.asm	/^f01015af:	e8 65 f9 ff ff       	call   f0100f19 <page_alloc>$/;"	l
f01015b4	obj/kern/kernel.asm	/^f01015b4:	89 c6                	mov    %eax,%esi$/;"	l
f01015b6	obj/kern/kernel.asm	/^f01015b6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01015b9	obj/kern/kernel.asm	/^f01015b9:	85 c0                	test   %eax,%eax$/;"	l
f01015bb	obj/kern/kernel.asm	/^f01015bb:	75 19                	jne    f01015d6 <mem_init+0x332>$/;"	l
f01015bd	obj/kern/kernel.asm	/^f01015bd:	68 e0 70 10 f0       	push   $0xf01070e0$/;"	l
f01015c2	obj/kern/kernel.asm	/^f01015c2:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f01015c7	obj/kern/kernel.asm	/^f01015c7:	68 47 03 00 00       	push   $0x347$/;"	l
f01015cc	obj/kern/kernel.asm	/^f01015cc:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01015d1	obj/kern/kernel.asm	/^f01015d1:	e8 6a ea ff ff       	call   f0100040 <_panic>$/;"	l
f01015d6	obj/kern/kernel.asm	/^f01015d6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01015d9	obj/kern/kernel.asm	/^f01015d9:	6a 00                	push   $0x0$/;"	l
f01015db	obj/kern/kernel.asm	/^f01015db:	e8 39 f9 ff ff       	call   f0100f19 <page_alloc>$/;"	l
f01015e0	obj/kern/kernel.asm	/^f01015e0:	89 c7                	mov    %eax,%edi$/;"	l
f01015e2	obj/kern/kernel.asm	/^f01015e2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01015e5	obj/kern/kernel.asm	/^f01015e5:	85 c0                	test   %eax,%eax$/;"	l
f01015e7	obj/kern/kernel.asm	/^f01015e7:	75 19                	jne    f0101602 <mem_init+0x35e>$/;"	l
f01015e9	obj/kern/kernel.asm	/^f01015e9:	68 f6 70 10 f0       	push   $0xf01070f6$/;"	l
f01015ee	obj/kern/kernel.asm	/^f01015ee:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f01015f3	obj/kern/kernel.asm	/^f01015f3:	68 48 03 00 00       	push   $0x348$/;"	l
f01015f8	obj/kern/kernel.asm	/^f01015f8:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01015fd	obj/kern/kernel.asm	/^f01015fd:	e8 3e ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101602	obj/kern/kernel.asm	/^f0101602:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101605	obj/kern/kernel.asm	/^f0101605:	6a 00                	push   $0x0$/;"	l
f0101607	obj/kern/kernel.asm	/^f0101607:	e8 0d f9 ff ff       	call   f0100f19 <page_alloc>$/;"	l
f010160c	obj/kern/kernel.asm	/^f010160c:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010160f	obj/kern/kernel.asm	/^f010160f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101612	obj/kern/kernel.asm	/^f0101612:	85 c0                	test   %eax,%eax$/;"	l
f0101614	obj/kern/kernel.asm	/^f0101614:	75 19                	jne    f010162f <mem_init+0x38b>$/;"	l
f0101616	obj/kern/kernel.asm	/^f0101616:	68 0c 71 10 f0       	push   $0xf010710c$/;"	l
f010161b	obj/kern/kernel.asm	/^f010161b:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101620	obj/kern/kernel.asm	/^f0101620:	68 49 03 00 00       	push   $0x349$/;"	l
f0101625	obj/kern/kernel.asm	/^f0101625:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f010162a	obj/kern/kernel.asm	/^f010162a:	e8 11 ea ff ff       	call   f0100040 <_panic>$/;"	l
f010162f	obj/kern/kernel.asm	/^f010162f:	39 fe                	cmp    %edi,%esi$/;"	l
f0101631	obj/kern/kernel.asm	/^f0101631:	75 19                	jne    f010164c <mem_init+0x3a8>$/;"	l
f0101633	obj/kern/kernel.asm	/^f0101633:	68 22 71 10 f0       	push   $0xf0107122$/;"	l
f0101638	obj/kern/kernel.asm	/^f0101638:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f010163d	obj/kern/kernel.asm	/^f010163d:	68 4b 03 00 00       	push   $0x34b$/;"	l
f0101642	obj/kern/kernel.asm	/^f0101642:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101647	obj/kern/kernel.asm	/^f0101647:	e8 f4 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010164c	obj/kern/kernel.asm	/^f010164c:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010164f	obj/kern/kernel.asm	/^f010164f:	39 c7                	cmp    %eax,%edi$/;"	l
f0101651	obj/kern/kernel.asm	/^f0101651:	74 04                	je     f0101657 <mem_init+0x3b3>$/;"	l
f0101653	obj/kern/kernel.asm	/^f0101653:	39 c6                	cmp    %eax,%esi$/;"	l
f0101655	obj/kern/kernel.asm	/^f0101655:	75 19                	jne    f0101670 <mem_init+0x3cc>$/;"	l
f0101657	obj/kern/kernel.asm	/^f0101657:	68 78 67 10 f0       	push   $0xf0106778$/;"	l
f010165c	obj/kern/kernel.asm	/^f010165c:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101661	obj/kern/kernel.asm	/^f0101661:	68 4c 03 00 00       	push   $0x34c$/;"	l
f0101666	obj/kern/kernel.asm	/^f0101666:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f010166b	obj/kern/kernel.asm	/^f010166b:	e8 d0 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101670	obj/kern/kernel.asm	/^f0101670:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101673	obj/kern/kernel.asm	/^f0101673:	6a 00                	push   $0x0$/;"	l
f0101675	obj/kern/kernel.asm	/^f0101675:	e8 9f f8 ff ff       	call   f0100f19 <page_alloc>$/;"	l
f010167a	obj/kern/kernel.asm	/^f010167a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010167d	obj/kern/kernel.asm	/^f010167d:	85 c0                	test   %eax,%eax$/;"	l
f010167f	obj/kern/kernel.asm	/^f010167f:	74 19                	je     f010169a <mem_init+0x3f6>$/;"	l
f0101681	obj/kern/kernel.asm	/^f0101681:	68 8b 71 10 f0       	push   $0xf010718b$/;"	l
f0101686	obj/kern/kernel.asm	/^f0101686:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f010168b	obj/kern/kernel.asm	/^f010168b:	68 4d 03 00 00       	push   $0x34d$/;"	l
f0101690	obj/kern/kernel.asm	/^f0101690:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101695	obj/kern/kernel.asm	/^f0101695:	e8 a6 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010169a	obj/kern/kernel.asm	/^f010169a:	89 f0                	mov    %esi,%eax$/;"	l
f010169c	obj/kern/kernel.asm	/^f010169c:	2b 05 90 5e 1e f0    	sub    0xf01e5e90,%eax$/;"	l
f01016a2	obj/kern/kernel.asm	/^f01016a2:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01016a5	obj/kern/kernel.asm	/^f01016a5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01016a8	obj/kern/kernel.asm	/^f01016a8:	89 c2                	mov    %eax,%edx$/;"	l
f01016aa	obj/kern/kernel.asm	/^f01016aa:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01016ad	obj/kern/kernel.asm	/^f01016ad:	3b 15 88 5e 1e f0    	cmp    0xf01e5e88,%edx$/;"	l
f01016b3	obj/kern/kernel.asm	/^f01016b3:	72 12                	jb     f01016c7 <mem_init+0x423>$/;"	l
f01016b5	obj/kern/kernel.asm	/^f01016b5:	50                   	push   %eax$/;"	l
f01016b6	obj/kern/kernel.asm	/^f01016b6:	68 84 60 10 f0       	push   $0xf0106084$/;"	l
f01016bb	obj/kern/kernel.asm	/^f01016bb:	6a 58                	push   $0x58$/;"	l
f01016bd	obj/kern/kernel.asm	/^f01016bd:	68 c9 6f 10 f0       	push   $0xf0106fc9$/;"	l
f01016c2	obj/kern/kernel.asm	/^f01016c2:	e8 79 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016c7	obj/kern/kernel.asm	/^f01016c7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01016ca	obj/kern/kernel.asm	/^f01016ca:	68 00 10 00 00       	push   $0x1000$/;"	l
f01016cf	obj/kern/kernel.asm	/^f01016cf:	6a 01                	push   $0x1$/;"	l
f01016d1	obj/kern/kernel.asm	/^f01016d1:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01016d6	obj/kern/kernel.asm	/^f01016d6:	50                   	push   %eax$/;"	l
f01016d7	obj/kern/kernel.asm	/^f01016d7:	e8 d5 3c 00 00       	call   f01053b1 <memset>$/;"	l
f01016dc	obj/kern/kernel.asm	/^f01016dc:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01016df	obj/kern/kernel.asm	/^f01016df:	e8 ac f8 ff ff       	call   f0100f90 <page_free>$/;"	l
f01016e4	obj/kern/kernel.asm	/^f01016e4:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01016eb	obj/kern/kernel.asm	/^f01016eb:	e8 29 f8 ff ff       	call   f0100f19 <page_alloc>$/;"	l
f01016f0	obj/kern/kernel.asm	/^f01016f0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016f3	obj/kern/kernel.asm	/^f01016f3:	85 c0                	test   %eax,%eax$/;"	l
f01016f5	obj/kern/kernel.asm	/^f01016f5:	75 19                	jne    f0101710 <mem_init+0x46c>$/;"	l
f01016f7	obj/kern/kernel.asm	/^f01016f7:	68 9a 71 10 f0       	push   $0xf010719a$/;"	l
f01016fc	obj/kern/kernel.asm	/^f01016fc:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101701	obj/kern/kernel.asm	/^f0101701:	68 52 03 00 00       	push   $0x352$/;"	l
f0101706	obj/kern/kernel.asm	/^f0101706:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f010170b	obj/kern/kernel.asm	/^f010170b:	e8 30 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101710	obj/kern/kernel.asm	/^f0101710:	39 c6                	cmp    %eax,%esi$/;"	l
f0101712	obj/kern/kernel.asm	/^f0101712:	74 19                	je     f010172d <mem_init+0x489>$/;"	l
f0101714	obj/kern/kernel.asm	/^f0101714:	68 b8 71 10 f0       	push   $0xf01071b8$/;"	l
f0101719	obj/kern/kernel.asm	/^f0101719:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f010171e	obj/kern/kernel.asm	/^f010171e:	68 53 03 00 00       	push   $0x353$/;"	l
f0101723	obj/kern/kernel.asm	/^f0101723:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101728	obj/kern/kernel.asm	/^f0101728:	e8 13 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010172d	obj/kern/kernel.asm	/^f010172d:	89 f0                	mov    %esi,%eax$/;"	l
f010172f	obj/kern/kernel.asm	/^f010172f:	2b 05 90 5e 1e f0    	sub    0xf01e5e90,%eax$/;"	l
f0101735	obj/kern/kernel.asm	/^f0101735:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101738	obj/kern/kernel.asm	/^f0101738:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010173b	obj/kern/kernel.asm	/^f010173b:	89 c2                	mov    %eax,%edx$/;"	l
f010173d	obj/kern/kernel.asm	/^f010173d:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101740	obj/kern/kernel.asm	/^f0101740:	3b 15 88 5e 1e f0    	cmp    0xf01e5e88,%edx$/;"	l
f0101746	obj/kern/kernel.asm	/^f0101746:	72 12                	jb     f010175a <mem_init+0x4b6>$/;"	l
f0101748	obj/kern/kernel.asm	/^f0101748:	50                   	push   %eax$/;"	l
f0101749	obj/kern/kernel.asm	/^f0101749:	68 84 60 10 f0       	push   $0xf0106084$/;"	l
f010174e	obj/kern/kernel.asm	/^f010174e:	6a 58                	push   $0x58$/;"	l
f0101750	obj/kern/kernel.asm	/^f0101750:	68 c9 6f 10 f0       	push   $0xf0106fc9$/;"	l
f0101755	obj/kern/kernel.asm	/^f0101755:	e8 e6 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010175a	obj/kern/kernel.asm	/^f010175a:	8d 90 00 10 00 f0    	lea    -0xffff000(%eax),%edx$/;"	l
f0101760	obj/kern/kernel.asm	/^f0101760:	8d 80 00 00 00 f0    	lea    -0x10000000(%eax),%eax$/;"	l
f0101766	obj/kern/kernel.asm	/^f0101766:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0101769	obj/kern/kernel.asm	/^f0101769:	74 19                	je     f0101784 <mem_init+0x4e0>$/;"	l
f010176b	obj/kern/kernel.asm	/^f010176b:	68 c8 71 10 f0       	push   $0xf01071c8$/;"	l
f0101770	obj/kern/kernel.asm	/^f0101770:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101775	obj/kern/kernel.asm	/^f0101775:	68 56 03 00 00       	push   $0x356$/;"	l
f010177a	obj/kern/kernel.asm	/^f010177a:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f010177f	obj/kern/kernel.asm	/^f010177f:	e8 bc e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101784	obj/kern/kernel.asm	/^f0101784:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101787	obj/kern/kernel.asm	/^f0101787:	39 d0                	cmp    %edx,%eax$/;"	l
f0101789	obj/kern/kernel.asm	/^f0101789:	75 db                	jne    f0101766 <mem_init+0x4c2>$/;"	l
f010178b	obj/kern/kernel.asm	/^f010178b:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f010178e	obj/kern/kernel.asm	/^f010178e:	a3 40 52 1e f0       	mov    %eax,0xf01e5240$/;"	l
f0101793	obj/kern/kernel.asm	/^f0101793:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101796	obj/kern/kernel.asm	/^f0101796:	56                   	push   %esi$/;"	l
f0101797	obj/kern/kernel.asm	/^f0101797:	e8 f4 f7 ff ff       	call   f0100f90 <page_free>$/;"	l
f010179c	obj/kern/kernel.asm	/^f010179c:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010179f	obj/kern/kernel.asm	/^f010179f:	e8 ec f7 ff ff       	call   f0100f90 <page_free>$/;"	l
f01017a4	obj/kern/kernel.asm	/^f01017a4:	83 c4 04             	add    $0x4,%esp$/;"	l
f01017a7	obj/kern/kernel.asm	/^f01017a7:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01017aa	obj/kern/kernel.asm	/^f01017aa:	e8 e1 f7 ff ff       	call   f0100f90 <page_free>$/;"	l
f01017af	obj/kern/kernel.asm	/^f01017af:	a1 40 52 1e f0       	mov    0xf01e5240,%eax$/;"	l
f01017b4	obj/kern/kernel.asm	/^f01017b4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01017b7	obj/kern/kernel.asm	/^f01017b7:	eb 05                	jmp    f01017be <mem_init+0x51a>$/;"	l
f01017b9	obj/kern/kernel.asm	/^f01017b9:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01017bc	obj/kern/kernel.asm	/^f01017bc:	8b 00                	mov    (%eax),%eax$/;"	l
f01017be	obj/kern/kernel.asm	/^f01017be:	85 c0                	test   %eax,%eax$/;"	l
f01017c0	obj/kern/kernel.asm	/^f01017c0:	75 f7                	jne    f01017b9 <mem_init+0x515>$/;"	l
f01017c2	obj/kern/kernel.asm	/^f01017c2:	85 db                	test   %ebx,%ebx$/;"	l
f01017c4	obj/kern/kernel.asm	/^f01017c4:	74 19                	je     f01017df <mem_init+0x53b>$/;"	l
f01017c6	obj/kern/kernel.asm	/^f01017c6:	68 d2 71 10 f0       	push   $0xf01071d2$/;"	l
f01017cb	obj/kern/kernel.asm	/^f01017cb:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f01017d0	obj/kern/kernel.asm	/^f01017d0:	68 63 03 00 00       	push   $0x363$/;"	l
f01017d5	obj/kern/kernel.asm	/^f01017d5:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01017da	obj/kern/kernel.asm	/^f01017da:	e8 61 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017df	obj/kern/kernel.asm	/^f01017df:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01017e2	obj/kern/kernel.asm	/^f01017e2:	68 98 67 10 f0       	push   $0xf0106798$/;"	l
f01017e7	obj/kern/kernel.asm	/^f01017e7:	e8 be 1e 00 00       	call   f01036aa <cprintf>$/;"	l
f01017ec	obj/kern/kernel.asm	/^f01017ec:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01017f3	obj/kern/kernel.asm	/^f01017f3:	e8 21 f7 ff ff       	call   f0100f19 <page_alloc>$/;"	l
f01017f8	obj/kern/kernel.asm	/^f01017f8:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01017fb	obj/kern/kernel.asm	/^f01017fb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01017fe	obj/kern/kernel.asm	/^f01017fe:	85 c0                	test   %eax,%eax$/;"	l
f0101800	obj/kern/kernel.asm	/^f0101800:	75 19                	jne    f010181b <mem_init+0x577>$/;"	l
f0101802	obj/kern/kernel.asm	/^f0101802:	68 e0 70 10 f0       	push   $0xf01070e0$/;"	l
f0101807	obj/kern/kernel.asm	/^f0101807:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f010180c	obj/kern/kernel.asm	/^f010180c:	68 c9 03 00 00       	push   $0x3c9$/;"	l
f0101811	obj/kern/kernel.asm	/^f0101811:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101816	obj/kern/kernel.asm	/^f0101816:	e8 25 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010181b	obj/kern/kernel.asm	/^f010181b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010181e	obj/kern/kernel.asm	/^f010181e:	6a 00                	push   $0x0$/;"	l
f0101820	obj/kern/kernel.asm	/^f0101820:	e8 f4 f6 ff ff       	call   f0100f19 <page_alloc>$/;"	l
f0101825	obj/kern/kernel.asm	/^f0101825:	89 c3                	mov    %eax,%ebx$/;"	l
f0101827	obj/kern/kernel.asm	/^f0101827:	83 c4 10             	add    $0x10,%esp$/;"	l
f010182a	obj/kern/kernel.asm	/^f010182a:	85 c0                	test   %eax,%eax$/;"	l
f010182c	obj/kern/kernel.asm	/^f010182c:	75 19                	jne    f0101847 <mem_init+0x5a3>$/;"	l
f010182e	obj/kern/kernel.asm	/^f010182e:	68 f6 70 10 f0       	push   $0xf01070f6$/;"	l
f0101833	obj/kern/kernel.asm	/^f0101833:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101838	obj/kern/kernel.asm	/^f0101838:	68 ca 03 00 00       	push   $0x3ca$/;"	l
f010183d	obj/kern/kernel.asm	/^f010183d:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101842	obj/kern/kernel.asm	/^f0101842:	e8 f9 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101847	obj/kern/kernel.asm	/^f0101847:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010184a	obj/kern/kernel.asm	/^f010184a:	6a 00                	push   $0x0$/;"	l
f010184c	obj/kern/kernel.asm	/^f010184c:	e8 c8 f6 ff ff       	call   f0100f19 <page_alloc>$/;"	l
f0101851	obj/kern/kernel.asm	/^f0101851:	89 c6                	mov    %eax,%esi$/;"	l
f0101853	obj/kern/kernel.asm	/^f0101853:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101856	obj/kern/kernel.asm	/^f0101856:	85 c0                	test   %eax,%eax$/;"	l
f0101858	obj/kern/kernel.asm	/^f0101858:	75 19                	jne    f0101873 <mem_init+0x5cf>$/;"	l
f010185a	obj/kern/kernel.asm	/^f010185a:	68 0c 71 10 f0       	push   $0xf010710c$/;"	l
f010185f	obj/kern/kernel.asm	/^f010185f:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101864	obj/kern/kernel.asm	/^f0101864:	68 cb 03 00 00       	push   $0x3cb$/;"	l
f0101869	obj/kern/kernel.asm	/^f0101869:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f010186e	obj/kern/kernel.asm	/^f010186e:	e8 cd e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101873	obj/kern/kernel.asm	/^f0101873:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f0101876	obj/kern/kernel.asm	/^f0101876:	75 19                	jne    f0101891 <mem_init+0x5ed>$/;"	l
f0101878	obj/kern/kernel.asm	/^f0101878:	68 22 71 10 f0       	push   $0xf0107122$/;"	l
f010187d	obj/kern/kernel.asm	/^f010187d:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101882	obj/kern/kernel.asm	/^f0101882:	68 ce 03 00 00       	push   $0x3ce$/;"	l
f0101887	obj/kern/kernel.asm	/^f0101887:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f010188c	obj/kern/kernel.asm	/^f010188c:	e8 af e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101891	obj/kern/kernel.asm	/^f0101891:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101893	obj/kern/kernel.asm	/^f0101893:	74 05                	je     f010189a <mem_init+0x5f6>$/;"	l
f0101895	obj/kern/kernel.asm	/^f0101895:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f0101898	obj/kern/kernel.asm	/^f0101898:	75 19                	jne    f01018b3 <mem_init+0x60f>$/;"	l
f010189a	obj/kern/kernel.asm	/^f010189a:	68 78 67 10 f0       	push   $0xf0106778$/;"	l
f010189f	obj/kern/kernel.asm	/^f010189f:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f01018a4	obj/kern/kernel.asm	/^f01018a4:	68 cf 03 00 00       	push   $0x3cf$/;"	l
f01018a9	obj/kern/kernel.asm	/^f01018a9:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01018ae	obj/kern/kernel.asm	/^f01018ae:	e8 8d e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018b3	obj/kern/kernel.asm	/^f01018b3:	a1 40 52 1e f0       	mov    0xf01e5240,%eax$/;"	l
f01018b8	obj/kern/kernel.asm	/^f01018b8:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01018bb	obj/kern/kernel.asm	/^f01018bb:	c7 05 40 52 1e f0 00 	movl   $0x0,0xf01e5240$/;"	l
f01018c2	obj/kern/kernel.asm	/^f01018c2:	00 00 00 $/;"	l
f01018c5	obj/kern/kernel.asm	/^f01018c5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01018c8	obj/kern/kernel.asm	/^f01018c8:	6a 00                	push   $0x0$/;"	l
f01018ca	obj/kern/kernel.asm	/^f01018ca:	e8 4a f6 ff ff       	call   f0100f19 <page_alloc>$/;"	l
f01018cf	obj/kern/kernel.asm	/^f01018cf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01018d2	obj/kern/kernel.asm	/^f01018d2:	85 c0                	test   %eax,%eax$/;"	l
f01018d4	obj/kern/kernel.asm	/^f01018d4:	74 19                	je     f01018ef <mem_init+0x64b>$/;"	l
f01018d6	obj/kern/kernel.asm	/^f01018d6:	68 8b 71 10 f0       	push   $0xf010718b$/;"	l
f01018db	obj/kern/kernel.asm	/^f01018db:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f01018e0	obj/kern/kernel.asm	/^f01018e0:	68 d6 03 00 00       	push   $0x3d6$/;"	l
f01018e5	obj/kern/kernel.asm	/^f01018e5:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01018ea	obj/kern/kernel.asm	/^f01018ea:	e8 51 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018ef	obj/kern/kernel.asm	/^f01018ef:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01018f2	obj/kern/kernel.asm	/^f01018f2:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01018f5	obj/kern/kernel.asm	/^f01018f5:	50                   	push   %eax$/;"	l
f01018f6	obj/kern/kernel.asm	/^f01018f6:	6a 00                	push   $0x0$/;"	l
f01018f8	obj/kern/kernel.asm	/^f01018f8:	ff 35 8c 5e 1e f0    	pushl  0xf01e5e8c$/;"	l
f01018fe	obj/kern/kernel.asm	/^f01018fe:	e8 ef f7 ff ff       	call   f01010f2 <page_lookup>$/;"	l
f0101903	obj/kern/kernel.asm	/^f0101903:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101906	obj/kern/kernel.asm	/^f0101906:	85 c0                	test   %eax,%eax$/;"	l
f0101908	obj/kern/kernel.asm	/^f0101908:	74 19                	je     f0101923 <mem_init+0x67f>$/;"	l
f010190a	obj/kern/kernel.asm	/^f010190a:	68 b8 67 10 f0       	push   $0xf01067b8$/;"	l
f010190f	obj/kern/kernel.asm	/^f010190f:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101914	obj/kern/kernel.asm	/^f0101914:	68 d9 03 00 00       	push   $0x3d9$/;"	l
f0101919	obj/kern/kernel.asm	/^f0101919:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f010191e	obj/kern/kernel.asm	/^f010191e:	e8 1d e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101923	obj/kern/kernel.asm	/^f0101923:	6a 02                	push   $0x2$/;"	l
f0101925	obj/kern/kernel.asm	/^f0101925:	6a 00                	push   $0x0$/;"	l
f0101927	obj/kern/kernel.asm	/^f0101927:	53                   	push   %ebx$/;"	l
f0101928	obj/kern/kernel.asm	/^f0101928:	ff 35 8c 5e 1e f0    	pushl  0xf01e5e8c$/;"	l
f010192e	obj/kern/kernel.asm	/^f010192e:	e8 a8 f8 ff ff       	call   f01011db <page_insert>$/;"	l
f0101933	obj/kern/kernel.asm	/^f0101933:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101936	obj/kern/kernel.asm	/^f0101936:	85 c0                	test   %eax,%eax$/;"	l
f0101938	obj/kern/kernel.asm	/^f0101938:	78 19                	js     f0101953 <mem_init+0x6af>$/;"	l
f010193a	obj/kern/kernel.asm	/^f010193a:	68 f0 67 10 f0       	push   $0xf01067f0$/;"	l
f010193f	obj/kern/kernel.asm	/^f010193f:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101944	obj/kern/kernel.asm	/^f0101944:	68 dc 03 00 00       	push   $0x3dc$/;"	l
f0101949	obj/kern/kernel.asm	/^f0101949:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f010194e	obj/kern/kernel.asm	/^f010194e:	e8 ed e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101953	obj/kern/kernel.asm	/^f0101953:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101956	obj/kern/kernel.asm	/^f0101956:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101959	obj/kern/kernel.asm	/^f0101959:	e8 32 f6 ff ff       	call   f0100f90 <page_free>$/;"	l
f010195e	obj/kern/kernel.asm	/^f010195e:	6a 02                	push   $0x2$/;"	l
f0101960	obj/kern/kernel.asm	/^f0101960:	6a 00                	push   $0x0$/;"	l
f0101962	obj/kern/kernel.asm	/^f0101962:	53                   	push   %ebx$/;"	l
f0101963	obj/kern/kernel.asm	/^f0101963:	ff 35 8c 5e 1e f0    	pushl  0xf01e5e8c$/;"	l
f0101969	obj/kern/kernel.asm	/^f0101969:	e8 6d f8 ff ff       	call   f01011db <page_insert>$/;"	l
f010196e	obj/kern/kernel.asm	/^f010196e:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101971	obj/kern/kernel.asm	/^f0101971:	85 c0                	test   %eax,%eax$/;"	l
f0101973	obj/kern/kernel.asm	/^f0101973:	74 19                	je     f010198e <mem_init+0x6ea>$/;"	l
f0101975	obj/kern/kernel.asm	/^f0101975:	68 20 68 10 f0       	push   $0xf0106820$/;"	l
f010197a	obj/kern/kernel.asm	/^f010197a:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f010197f	obj/kern/kernel.asm	/^f010197f:	68 e0 03 00 00       	push   $0x3e0$/;"	l
f0101984	obj/kern/kernel.asm	/^f0101984:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101989	obj/kern/kernel.asm	/^f0101989:	e8 b2 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f010198e	obj/kern/kernel.asm	/^f010198e:	8b 3d 8c 5e 1e f0    	mov    0xf01e5e8c,%edi$/;"	l
f0101994	obj/kern/kernel.asm	/^f0101994:	a1 90 5e 1e f0       	mov    0xf01e5e90,%eax$/;"	l
f0101999	obj/kern/kernel.asm	/^f0101999:	89 c1                	mov    %eax,%ecx$/;"	l
f010199b	obj/kern/kernel.asm	/^f010199b:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010199e	obj/kern/kernel.asm	/^f010199e:	8b 17                	mov    (%edi),%edx$/;"	l
f01019a0	obj/kern/kernel.asm	/^f01019a0:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01019a6	obj/kern/kernel.asm	/^f01019a6:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01019a9	obj/kern/kernel.asm	/^f01019a9:	29 c8                	sub    %ecx,%eax$/;"	l
f01019ab	obj/kern/kernel.asm	/^f01019ab:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01019ae	obj/kern/kernel.asm	/^f01019ae:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01019b1	obj/kern/kernel.asm	/^f01019b1:	39 c2                	cmp    %eax,%edx$/;"	l
f01019b3	obj/kern/kernel.asm	/^f01019b3:	74 19                	je     f01019ce <mem_init+0x72a>$/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	68 50 68 10 f0       	push   $0xf0106850$/;"	l
f01019ba	obj/kern/kernel.asm	/^f01019ba:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f01019bf	obj/kern/kernel.asm	/^f01019bf:	68 e1 03 00 00       	push   $0x3e1$/;"	l
f01019c4	obj/kern/kernel.asm	/^f01019c4:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01019c9	obj/kern/kernel.asm	/^f01019c9:	e8 72 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019ce	obj/kern/kernel.asm	/^f01019ce:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01019d3	obj/kern/kernel.asm	/^f01019d3:	89 f8                	mov    %edi,%eax$/;"	l
f01019d5	obj/kern/kernel.asm	/^f01019d5:	e8 23 f1 ff ff       	call   f0100afd <check_va2pa>$/;"	l
f01019da	obj/kern/kernel.asm	/^f01019da:	89 da                	mov    %ebx,%edx$/;"	l
f01019dc	obj/kern/kernel.asm	/^f01019dc:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f01019df	obj/kern/kernel.asm	/^f01019df:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01019e2	obj/kern/kernel.asm	/^f01019e2:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01019e5	obj/kern/kernel.asm	/^f01019e5:	39 d0                	cmp    %edx,%eax$/;"	l
f01019e7	obj/kern/kernel.asm	/^f01019e7:	74 19                	je     f0101a02 <mem_init+0x75e>$/;"	l
f01019e9	obj/kern/kernel.asm	/^f01019e9:	68 78 68 10 f0       	push   $0xf0106878$/;"	l
f01019ee	obj/kern/kernel.asm	/^f01019ee:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f01019f3	obj/kern/kernel.asm	/^f01019f3:	68 e2 03 00 00       	push   $0x3e2$/;"	l
f01019f8	obj/kern/kernel.asm	/^f01019f8:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01019fd	obj/kern/kernel.asm	/^f01019fd:	e8 3e e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a02	obj/kern/kernel.asm	/^f0101a02:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101a07	obj/kern/kernel.asm	/^f0101a07:	74 19                	je     f0101a22 <mem_init+0x77e>$/;"	l
f0101a09	obj/kern/kernel.asm	/^f0101a09:	68 dd 71 10 f0       	push   $0xf01071dd$/;"	l
f0101a0e	obj/kern/kernel.asm	/^f0101a0e:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101a13	obj/kern/kernel.asm	/^f0101a13:	68 e3 03 00 00       	push   $0x3e3$/;"	l
f0101a18	obj/kern/kernel.asm	/^f0101a18:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101a1d	obj/kern/kernel.asm	/^f0101a1d:	e8 1e e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a22	obj/kern/kernel.asm	/^f0101a22:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101a25	obj/kern/kernel.asm	/^f0101a25:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0101a2a	obj/kern/kernel.asm	/^f0101a2a:	74 19                	je     f0101a45 <mem_init+0x7a1>$/;"	l
f0101a2c	obj/kern/kernel.asm	/^f0101a2c:	68 ee 71 10 f0       	push   $0xf01071ee$/;"	l
f0101a31	obj/kern/kernel.asm	/^f0101a31:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101a36	obj/kern/kernel.asm	/^f0101a36:	68 e4 03 00 00       	push   $0x3e4$/;"	l
f0101a3b	obj/kern/kernel.asm	/^f0101a3b:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101a40	obj/kern/kernel.asm	/^f0101a40:	e8 fb e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a45	obj/kern/kernel.asm	/^f0101a45:	6a 02                	push   $0x2$/;"	l
f0101a47	obj/kern/kernel.asm	/^f0101a47:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101a4c	obj/kern/kernel.asm	/^f0101a4c:	56                   	push   %esi$/;"	l
f0101a4d	obj/kern/kernel.asm	/^f0101a4d:	57                   	push   %edi$/;"	l
f0101a4e	obj/kern/kernel.asm	/^f0101a4e:	e8 88 f7 ff ff       	call   f01011db <page_insert>$/;"	l
f0101a53	obj/kern/kernel.asm	/^f0101a53:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a56	obj/kern/kernel.asm	/^f0101a56:	85 c0                	test   %eax,%eax$/;"	l
f0101a58	obj/kern/kernel.asm	/^f0101a58:	74 19                	je     f0101a73 <mem_init+0x7cf>$/;"	l
f0101a5a	obj/kern/kernel.asm	/^f0101a5a:	68 a8 68 10 f0       	push   $0xf01068a8$/;"	l
f0101a5f	obj/kern/kernel.asm	/^f0101a5f:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101a64	obj/kern/kernel.asm	/^f0101a64:	68 e7 03 00 00       	push   $0x3e7$/;"	l
f0101a69	obj/kern/kernel.asm	/^f0101a69:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101a6e	obj/kern/kernel.asm	/^f0101a6e:	e8 cd e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a73	obj/kern/kernel.asm	/^f0101a73:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101a78	obj/kern/kernel.asm	/^f0101a78:	a1 8c 5e 1e f0       	mov    0xf01e5e8c,%eax$/;"	l
f0101a7d	obj/kern/kernel.asm	/^f0101a7d:	e8 7b f0 ff ff       	call   f0100afd <check_va2pa>$/;"	l
f0101a82	obj/kern/kernel.asm	/^f0101a82:	89 f2                	mov    %esi,%edx$/;"	l
f0101a84	obj/kern/kernel.asm	/^f0101a84:	2b 15 90 5e 1e f0    	sub    0xf01e5e90,%edx$/;"	l
f0101a8a	obj/kern/kernel.asm	/^f0101a8a:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101a8d	obj/kern/kernel.asm	/^f0101a8d:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101a90	obj/kern/kernel.asm	/^f0101a90:	39 d0                	cmp    %edx,%eax$/;"	l
f0101a92	obj/kern/kernel.asm	/^f0101a92:	74 19                	je     f0101aad <mem_init+0x809>$/;"	l
f0101a94	obj/kern/kernel.asm	/^f0101a94:	68 e4 68 10 f0       	push   $0xf01068e4$/;"	l
f0101a99	obj/kern/kernel.asm	/^f0101a99:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101a9e	obj/kern/kernel.asm	/^f0101a9e:	68 e8 03 00 00       	push   $0x3e8$/;"	l
f0101aa3	obj/kern/kernel.asm	/^f0101aa3:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101aa8	obj/kern/kernel.asm	/^f0101aa8:	e8 93 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101aad	obj/kern/kernel.asm	/^f0101aad:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101ab2	obj/kern/kernel.asm	/^f0101ab2:	74 19                	je     f0101acd <mem_init+0x829>$/;"	l
f0101ab4	obj/kern/kernel.asm	/^f0101ab4:	68 ff 71 10 f0       	push   $0xf01071ff$/;"	l
f0101ab9	obj/kern/kernel.asm	/^f0101ab9:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101abe	obj/kern/kernel.asm	/^f0101abe:	68 e9 03 00 00       	push   $0x3e9$/;"	l
f0101ac3	obj/kern/kernel.asm	/^f0101ac3:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101ac8	obj/kern/kernel.asm	/^f0101ac8:	e8 73 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101acd	obj/kern/kernel.asm	/^f0101acd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101ad0	obj/kern/kernel.asm	/^f0101ad0:	6a 00                	push   $0x0$/;"	l
f0101ad2	obj/kern/kernel.asm	/^f0101ad2:	e8 42 f4 ff ff       	call   f0100f19 <page_alloc>$/;"	l
f0101ad7	obj/kern/kernel.asm	/^f0101ad7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ada	obj/kern/kernel.asm	/^f0101ada:	85 c0                	test   %eax,%eax$/;"	l
f0101adc	obj/kern/kernel.asm	/^f0101adc:	74 19                	je     f0101af7 <mem_init+0x853>$/;"	l
f0101ade	obj/kern/kernel.asm	/^f0101ade:	68 8b 71 10 f0       	push   $0xf010718b$/;"	l
f0101ae3	obj/kern/kernel.asm	/^f0101ae3:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101ae8	obj/kern/kernel.asm	/^f0101ae8:	68 ec 03 00 00       	push   $0x3ec$/;"	l
f0101aed	obj/kern/kernel.asm	/^f0101aed:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101af2	obj/kern/kernel.asm	/^f0101af2:	e8 49 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101af7	obj/kern/kernel.asm	/^f0101af7:	6a 02                	push   $0x2$/;"	l
f0101af9	obj/kern/kernel.asm	/^f0101af9:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101afe	obj/kern/kernel.asm	/^f0101afe:	56                   	push   %esi$/;"	l
f0101aff	obj/kern/kernel.asm	/^f0101aff:	ff 35 8c 5e 1e f0    	pushl  0xf01e5e8c$/;"	l
f0101b05	obj/kern/kernel.asm	/^f0101b05:	e8 d1 f6 ff ff       	call   f01011db <page_insert>$/;"	l
f0101b0a	obj/kern/kernel.asm	/^f0101b0a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b0d	obj/kern/kernel.asm	/^f0101b0d:	85 c0                	test   %eax,%eax$/;"	l
f0101b0f	obj/kern/kernel.asm	/^f0101b0f:	74 19                	je     f0101b2a <mem_init+0x886>$/;"	l
f0101b11	obj/kern/kernel.asm	/^f0101b11:	68 a8 68 10 f0       	push   $0xf01068a8$/;"	l
f0101b16	obj/kern/kernel.asm	/^f0101b16:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101b1b	obj/kern/kernel.asm	/^f0101b1b:	68 ef 03 00 00       	push   $0x3ef$/;"	l
f0101b20	obj/kern/kernel.asm	/^f0101b20:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101b25	obj/kern/kernel.asm	/^f0101b25:	e8 16 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b2a	obj/kern/kernel.asm	/^f0101b2a:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101b2f	obj/kern/kernel.asm	/^f0101b2f:	a1 8c 5e 1e f0       	mov    0xf01e5e8c,%eax$/;"	l
f0101b34	obj/kern/kernel.asm	/^f0101b34:	e8 c4 ef ff ff       	call   f0100afd <check_va2pa>$/;"	l
f0101b39	obj/kern/kernel.asm	/^f0101b39:	89 f2                	mov    %esi,%edx$/;"	l
f0101b3b	obj/kern/kernel.asm	/^f0101b3b:	2b 15 90 5e 1e f0    	sub    0xf01e5e90,%edx$/;"	l
f0101b41	obj/kern/kernel.asm	/^f0101b41:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101b44	obj/kern/kernel.asm	/^f0101b44:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101b47	obj/kern/kernel.asm	/^f0101b47:	39 d0                	cmp    %edx,%eax$/;"	l
f0101b49	obj/kern/kernel.asm	/^f0101b49:	74 19                	je     f0101b64 <mem_init+0x8c0>$/;"	l
f0101b4b	obj/kern/kernel.asm	/^f0101b4b:	68 e4 68 10 f0       	push   $0xf01068e4$/;"	l
f0101b50	obj/kern/kernel.asm	/^f0101b50:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101b55	obj/kern/kernel.asm	/^f0101b55:	68 f0 03 00 00       	push   $0x3f0$/;"	l
f0101b5a	obj/kern/kernel.asm	/^f0101b5a:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101b5f	obj/kern/kernel.asm	/^f0101b5f:	e8 dc e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b64	obj/kern/kernel.asm	/^f0101b64:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101b69	obj/kern/kernel.asm	/^f0101b69:	74 19                	je     f0101b84 <mem_init+0x8e0>$/;"	l
f0101b6b	obj/kern/kernel.asm	/^f0101b6b:	68 ff 71 10 f0       	push   $0xf01071ff$/;"	l
f0101b70	obj/kern/kernel.asm	/^f0101b70:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101b75	obj/kern/kernel.asm	/^f0101b75:	68 f1 03 00 00       	push   $0x3f1$/;"	l
f0101b7a	obj/kern/kernel.asm	/^f0101b7a:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101b7f	obj/kern/kernel.asm	/^f0101b7f:	e8 bc e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b84	obj/kern/kernel.asm	/^f0101b84:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101b87	obj/kern/kernel.asm	/^f0101b87:	6a 00                	push   $0x0$/;"	l
f0101b89	obj/kern/kernel.asm	/^f0101b89:	e8 8b f3 ff ff       	call   f0100f19 <page_alloc>$/;"	l
f0101b8e	obj/kern/kernel.asm	/^f0101b8e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b91	obj/kern/kernel.asm	/^f0101b91:	85 c0                	test   %eax,%eax$/;"	l
f0101b93	obj/kern/kernel.asm	/^f0101b93:	74 19                	je     f0101bae <mem_init+0x90a>$/;"	l
f0101b95	obj/kern/kernel.asm	/^f0101b95:	68 8b 71 10 f0       	push   $0xf010718b$/;"	l
f0101b9a	obj/kern/kernel.asm	/^f0101b9a:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101b9f	obj/kern/kernel.asm	/^f0101b9f:	68 f5 03 00 00       	push   $0x3f5$/;"	l
f0101ba4	obj/kern/kernel.asm	/^f0101ba4:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101ba9	obj/kern/kernel.asm	/^f0101ba9:	e8 92 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bae	obj/kern/kernel.asm	/^f0101bae:	8b 15 8c 5e 1e f0    	mov    0xf01e5e8c,%edx$/;"	l
f0101bb4	obj/kern/kernel.asm	/^f0101bb4:	8b 02                	mov    (%edx),%eax$/;"	l
f0101bb6	obj/kern/kernel.asm	/^f0101bb6:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101bbb	obj/kern/kernel.asm	/^f0101bbb:	89 c1                	mov    %eax,%ecx$/;"	l
f0101bbd	obj/kern/kernel.asm	/^f0101bbd:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0101bc0	obj/kern/kernel.asm	/^f0101bc0:	3b 0d 88 5e 1e f0    	cmp    0xf01e5e88,%ecx$/;"	l
f0101bc6	obj/kern/kernel.asm	/^f0101bc6:	72 15                	jb     f0101bdd <mem_init+0x939>$/;"	l
f0101bc8	obj/kern/kernel.asm	/^f0101bc8:	50                   	push   %eax$/;"	l
f0101bc9	obj/kern/kernel.asm	/^f0101bc9:	68 84 60 10 f0       	push   $0xf0106084$/;"	l
f0101bce	obj/kern/kernel.asm	/^f0101bce:	68 f8 03 00 00       	push   $0x3f8$/;"	l
f0101bd3	obj/kern/kernel.asm	/^f0101bd3:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101bd8	obj/kern/kernel.asm	/^f0101bd8:	e8 63 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bdd	obj/kern/kernel.asm	/^f0101bdd:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101be2	obj/kern/kernel.asm	/^f0101be2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101be5	obj/kern/kernel.asm	/^f0101be5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101be8	obj/kern/kernel.asm	/^f0101be8:	6a 00                	push   $0x0$/;"	l
f0101bea	obj/kern/kernel.asm	/^f0101bea:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101bef	obj/kern/kernel.asm	/^f0101bef:	52                   	push   %edx$/;"	l
f0101bf0	obj/kern/kernel.asm	/^f0101bf0:	e8 18 f4 ff ff       	call   f010100d <pgdir_walk>$/;"	l
f0101bf5	obj/kern/kernel.asm	/^f0101bf5:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0101bf8	obj/kern/kernel.asm	/^f0101bf8:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f0101bfb	obj/kern/kernel.asm	/^f0101bfb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101bfe	obj/kern/kernel.asm	/^f0101bfe:	39 d0                	cmp    %edx,%eax$/;"	l
f0101c00	obj/kern/kernel.asm	/^f0101c00:	74 19                	je     f0101c1b <mem_init+0x977>$/;"	l
f0101c02	obj/kern/kernel.asm	/^f0101c02:	68 14 69 10 f0       	push   $0xf0106914$/;"	l
f0101c07	obj/kern/kernel.asm	/^f0101c07:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101c0c	obj/kern/kernel.asm	/^f0101c0c:	68 f9 03 00 00       	push   $0x3f9$/;"	l
f0101c11	obj/kern/kernel.asm	/^f0101c11:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101c16	obj/kern/kernel.asm	/^f0101c16:	e8 25 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c1b	obj/kern/kernel.asm	/^f0101c1b:	6a 06                	push   $0x6$/;"	l
f0101c1d	obj/kern/kernel.asm	/^f0101c1d:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101c22	obj/kern/kernel.asm	/^f0101c22:	56                   	push   %esi$/;"	l
f0101c23	obj/kern/kernel.asm	/^f0101c23:	ff 35 8c 5e 1e f0    	pushl  0xf01e5e8c$/;"	l
f0101c29	obj/kern/kernel.asm	/^f0101c29:	e8 ad f5 ff ff       	call   f01011db <page_insert>$/;"	l
f0101c2e	obj/kern/kernel.asm	/^f0101c2e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c31	obj/kern/kernel.asm	/^f0101c31:	85 c0                	test   %eax,%eax$/;"	l
f0101c33	obj/kern/kernel.asm	/^f0101c33:	74 19                	je     f0101c4e <mem_init+0x9aa>$/;"	l
f0101c35	obj/kern/kernel.asm	/^f0101c35:	68 54 69 10 f0       	push   $0xf0106954$/;"	l
f0101c3a	obj/kern/kernel.asm	/^f0101c3a:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101c3f	obj/kern/kernel.asm	/^f0101c3f:	68 fc 03 00 00       	push   $0x3fc$/;"	l
f0101c44	obj/kern/kernel.asm	/^f0101c44:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101c49	obj/kern/kernel.asm	/^f0101c49:	e8 f2 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c4e	obj/kern/kernel.asm	/^f0101c4e:	8b 3d 8c 5e 1e f0    	mov    0xf01e5e8c,%edi$/;"	l
f0101c54	obj/kern/kernel.asm	/^f0101c54:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101c59	obj/kern/kernel.asm	/^f0101c59:	89 f8                	mov    %edi,%eax$/;"	l
f0101c5b	obj/kern/kernel.asm	/^f0101c5b:	e8 9d ee ff ff       	call   f0100afd <check_va2pa>$/;"	l
f0101c60	obj/kern/kernel.asm	/^f0101c60:	89 f2                	mov    %esi,%edx$/;"	l
f0101c62	obj/kern/kernel.asm	/^f0101c62:	2b 15 90 5e 1e f0    	sub    0xf01e5e90,%edx$/;"	l
f0101c68	obj/kern/kernel.asm	/^f0101c68:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101c6b	obj/kern/kernel.asm	/^f0101c6b:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101c6e	obj/kern/kernel.asm	/^f0101c6e:	39 d0                	cmp    %edx,%eax$/;"	l
f0101c70	obj/kern/kernel.asm	/^f0101c70:	74 19                	je     f0101c8b <mem_init+0x9e7>$/;"	l
f0101c72	obj/kern/kernel.asm	/^f0101c72:	68 e4 68 10 f0       	push   $0xf01068e4$/;"	l
f0101c77	obj/kern/kernel.asm	/^f0101c77:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101c7c	obj/kern/kernel.asm	/^f0101c7c:	68 fd 03 00 00       	push   $0x3fd$/;"	l
f0101c81	obj/kern/kernel.asm	/^f0101c81:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101c86	obj/kern/kernel.asm	/^f0101c86:	e8 b5 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c8b	obj/kern/kernel.asm	/^f0101c8b:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101c90	obj/kern/kernel.asm	/^f0101c90:	74 19                	je     f0101cab <mem_init+0xa07>$/;"	l
f0101c92	obj/kern/kernel.asm	/^f0101c92:	68 ff 71 10 f0       	push   $0xf01071ff$/;"	l
f0101c97	obj/kern/kernel.asm	/^f0101c97:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101c9c	obj/kern/kernel.asm	/^f0101c9c:	68 fe 03 00 00       	push   $0x3fe$/;"	l
f0101ca1	obj/kern/kernel.asm	/^f0101ca1:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101ca6	obj/kern/kernel.asm	/^f0101ca6:	e8 95 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cab	obj/kern/kernel.asm	/^f0101cab:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101cae	obj/kern/kernel.asm	/^f0101cae:	6a 00                	push   $0x0$/;"	l
f0101cb0	obj/kern/kernel.asm	/^f0101cb0:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101cb5	obj/kern/kernel.asm	/^f0101cb5:	57                   	push   %edi$/;"	l
f0101cb6	obj/kern/kernel.asm	/^f0101cb6:	e8 52 f3 ff ff       	call   f010100d <pgdir_walk>$/;"	l
f0101cbb	obj/kern/kernel.asm	/^f0101cbb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101cbe	obj/kern/kernel.asm	/^f0101cbe:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101cc1	obj/kern/kernel.asm	/^f0101cc1:	75 19                	jne    f0101cdc <mem_init+0xa38>$/;"	l
f0101cc3	obj/kern/kernel.asm	/^f0101cc3:	68 94 69 10 f0       	push   $0xf0106994$/;"	l
f0101cc8	obj/kern/kernel.asm	/^f0101cc8:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101ccd	obj/kern/kernel.asm	/^f0101ccd:	68 ff 03 00 00       	push   $0x3ff$/;"	l
f0101cd2	obj/kern/kernel.asm	/^f0101cd2:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101cd7	obj/kern/kernel.asm	/^f0101cd7:	e8 64 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cdc	obj/kern/kernel.asm	/^f0101cdc:	a1 8c 5e 1e f0       	mov    0xf01e5e8c,%eax$/;"	l
f0101ce1	obj/kern/kernel.asm	/^f0101ce1:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101ce4	obj/kern/kernel.asm	/^f0101ce4:	75 19                	jne    f0101cff <mem_init+0xa5b>$/;"	l
f0101ce6	obj/kern/kernel.asm	/^f0101ce6:	68 10 72 10 f0       	push   $0xf0107210$/;"	l
f0101ceb	obj/kern/kernel.asm	/^f0101ceb:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101cf0	obj/kern/kernel.asm	/^f0101cf0:	68 00 04 00 00       	push   $0x400$/;"	l
f0101cf5	obj/kern/kernel.asm	/^f0101cf5:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101cfa	obj/kern/kernel.asm	/^f0101cfa:	e8 41 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cff	obj/kern/kernel.asm	/^f0101cff:	6a 02                	push   $0x2$/;"	l
f0101d01	obj/kern/kernel.asm	/^f0101d01:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101d06	obj/kern/kernel.asm	/^f0101d06:	56                   	push   %esi$/;"	l
f0101d07	obj/kern/kernel.asm	/^f0101d07:	50                   	push   %eax$/;"	l
f0101d08	obj/kern/kernel.asm	/^f0101d08:	e8 ce f4 ff ff       	call   f01011db <page_insert>$/;"	l
f0101d0d	obj/kern/kernel.asm	/^f0101d0d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d10	obj/kern/kernel.asm	/^f0101d10:	85 c0                	test   %eax,%eax$/;"	l
f0101d12	obj/kern/kernel.asm	/^f0101d12:	74 19                	je     f0101d2d <mem_init+0xa89>$/;"	l
f0101d14	obj/kern/kernel.asm	/^f0101d14:	68 a8 68 10 f0       	push   $0xf01068a8$/;"	l
f0101d19	obj/kern/kernel.asm	/^f0101d19:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101d1e	obj/kern/kernel.asm	/^f0101d1e:	68 03 04 00 00       	push   $0x403$/;"	l
f0101d23	obj/kern/kernel.asm	/^f0101d23:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101d28	obj/kern/kernel.asm	/^f0101d28:	e8 13 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d2d	obj/kern/kernel.asm	/^f0101d2d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101d30	obj/kern/kernel.asm	/^f0101d30:	6a 00                	push   $0x0$/;"	l
f0101d32	obj/kern/kernel.asm	/^f0101d32:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101d37	obj/kern/kernel.asm	/^f0101d37:	ff 35 8c 5e 1e f0    	pushl  0xf01e5e8c$/;"	l
f0101d3d	obj/kern/kernel.asm	/^f0101d3d:	e8 cb f2 ff ff       	call   f010100d <pgdir_walk>$/;"	l
f0101d42	obj/kern/kernel.asm	/^f0101d42:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d45	obj/kern/kernel.asm	/^f0101d45:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0101d48	obj/kern/kernel.asm	/^f0101d48:	75 19                	jne    f0101d63 <mem_init+0xabf>$/;"	l
f0101d4a	obj/kern/kernel.asm	/^f0101d4a:	68 c8 69 10 f0       	push   $0xf01069c8$/;"	l
f0101d4f	obj/kern/kernel.asm	/^f0101d4f:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101d54	obj/kern/kernel.asm	/^f0101d54:	68 04 04 00 00       	push   $0x404$/;"	l
f0101d59	obj/kern/kernel.asm	/^f0101d59:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101d5e	obj/kern/kernel.asm	/^f0101d5e:	e8 dd e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d63	obj/kern/kernel.asm	/^f0101d63:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101d66	obj/kern/kernel.asm	/^f0101d66:	6a 00                	push   $0x0$/;"	l
f0101d68	obj/kern/kernel.asm	/^f0101d68:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101d6d	obj/kern/kernel.asm	/^f0101d6d:	ff 35 8c 5e 1e f0    	pushl  0xf01e5e8c$/;"	l
f0101d73	obj/kern/kernel.asm	/^f0101d73:	e8 95 f2 ff ff       	call   f010100d <pgdir_walk>$/;"	l
f0101d78	obj/kern/kernel.asm	/^f0101d78:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d7b	obj/kern/kernel.asm	/^f0101d7b:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101d7e	obj/kern/kernel.asm	/^f0101d7e:	74 19                	je     f0101d99 <mem_init+0xaf5>$/;"	l
f0101d80	obj/kern/kernel.asm	/^f0101d80:	68 fc 69 10 f0       	push   $0xf01069fc$/;"	l
f0101d85	obj/kern/kernel.asm	/^f0101d85:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101d8a	obj/kern/kernel.asm	/^f0101d8a:	68 05 04 00 00       	push   $0x405$/;"	l
f0101d8f	obj/kern/kernel.asm	/^f0101d8f:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101d94	obj/kern/kernel.asm	/^f0101d94:	e8 a7 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d99	obj/kern/kernel.asm	/^f0101d99:	6a 02                	push   $0x2$/;"	l
f0101d9b	obj/kern/kernel.asm	/^f0101d9b:	68 00 00 40 00       	push   $0x400000$/;"	l
f0101da0	obj/kern/kernel.asm	/^f0101da0:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101da3	obj/kern/kernel.asm	/^f0101da3:	ff 35 8c 5e 1e f0    	pushl  0xf01e5e8c$/;"	l
f0101da9	obj/kern/kernel.asm	/^f0101da9:	e8 2d f4 ff ff       	call   f01011db <page_insert>$/;"	l
f0101dae	obj/kern/kernel.asm	/^f0101dae:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101db1	obj/kern/kernel.asm	/^f0101db1:	85 c0                	test   %eax,%eax$/;"	l
f0101db3	obj/kern/kernel.asm	/^f0101db3:	78 19                	js     f0101dce <mem_init+0xb2a>$/;"	l
f0101db5	obj/kern/kernel.asm	/^f0101db5:	68 34 6a 10 f0       	push   $0xf0106a34$/;"	l
f0101dba	obj/kern/kernel.asm	/^f0101dba:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101dbf	obj/kern/kernel.asm	/^f0101dbf:	68 08 04 00 00       	push   $0x408$/;"	l
f0101dc4	obj/kern/kernel.asm	/^f0101dc4:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101dc9	obj/kern/kernel.asm	/^f0101dc9:	e8 72 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dce	obj/kern/kernel.asm	/^f0101dce:	6a 02                	push   $0x2$/;"	l
f0101dd0	obj/kern/kernel.asm	/^f0101dd0:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101dd5	obj/kern/kernel.asm	/^f0101dd5:	53                   	push   %ebx$/;"	l
f0101dd6	obj/kern/kernel.asm	/^f0101dd6:	ff 35 8c 5e 1e f0    	pushl  0xf01e5e8c$/;"	l
f0101ddc	obj/kern/kernel.asm	/^f0101ddc:	e8 fa f3 ff ff       	call   f01011db <page_insert>$/;"	l
f0101de1	obj/kern/kernel.asm	/^f0101de1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101de4	obj/kern/kernel.asm	/^f0101de4:	85 c0                	test   %eax,%eax$/;"	l
f0101de6	obj/kern/kernel.asm	/^f0101de6:	74 19                	je     f0101e01 <mem_init+0xb5d>$/;"	l
f0101de8	obj/kern/kernel.asm	/^f0101de8:	68 6c 6a 10 f0       	push   $0xf0106a6c$/;"	l
f0101ded	obj/kern/kernel.asm	/^f0101ded:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101df2	obj/kern/kernel.asm	/^f0101df2:	68 0b 04 00 00       	push   $0x40b$/;"	l
f0101df7	obj/kern/kernel.asm	/^f0101df7:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101dfc	obj/kern/kernel.asm	/^f0101dfc:	e8 3f e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e01	obj/kern/kernel.asm	/^f0101e01:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101e04	obj/kern/kernel.asm	/^f0101e04:	6a 00                	push   $0x0$/;"	l
f0101e06	obj/kern/kernel.asm	/^f0101e06:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101e0b	obj/kern/kernel.asm	/^f0101e0b:	ff 35 8c 5e 1e f0    	pushl  0xf01e5e8c$/;"	l
f0101e11	obj/kern/kernel.asm	/^f0101e11:	e8 f7 f1 ff ff       	call   f010100d <pgdir_walk>$/;"	l
f0101e16	obj/kern/kernel.asm	/^f0101e16:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e19	obj/kern/kernel.asm	/^f0101e19:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101e1c	obj/kern/kernel.asm	/^f0101e1c:	74 19                	je     f0101e37 <mem_init+0xb93>$/;"	l
f0101e1e	obj/kern/kernel.asm	/^f0101e1e:	68 fc 69 10 f0       	push   $0xf01069fc$/;"	l
f0101e23	obj/kern/kernel.asm	/^f0101e23:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101e28	obj/kern/kernel.asm	/^f0101e28:	68 0c 04 00 00       	push   $0x40c$/;"	l
f0101e2d	obj/kern/kernel.asm	/^f0101e2d:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101e32	obj/kern/kernel.asm	/^f0101e32:	e8 09 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e37	obj/kern/kernel.asm	/^f0101e37:	8b 3d 8c 5e 1e f0    	mov    0xf01e5e8c,%edi$/;"	l
f0101e3d	obj/kern/kernel.asm	/^f0101e3d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101e42	obj/kern/kernel.asm	/^f0101e42:	89 f8                	mov    %edi,%eax$/;"	l
f0101e44	obj/kern/kernel.asm	/^f0101e44:	e8 b4 ec ff ff       	call   f0100afd <check_va2pa>$/;"	l
f0101e49	obj/kern/kernel.asm	/^f0101e49:	89 c1                	mov    %eax,%ecx$/;"	l
f0101e4b	obj/kern/kernel.asm	/^f0101e4b:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0101e4e	obj/kern/kernel.asm	/^f0101e4e:	89 d8                	mov    %ebx,%eax$/;"	l
f0101e50	obj/kern/kernel.asm	/^f0101e50:	2b 05 90 5e 1e f0    	sub    0xf01e5e90,%eax$/;"	l
f0101e56	obj/kern/kernel.asm	/^f0101e56:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101e59	obj/kern/kernel.asm	/^f0101e59:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101e5c	obj/kern/kernel.asm	/^f0101e5c:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101e5e	obj/kern/kernel.asm	/^f0101e5e:	74 19                	je     f0101e79 <mem_init+0xbd5>$/;"	l
f0101e60	obj/kern/kernel.asm	/^f0101e60:	68 a8 6a 10 f0       	push   $0xf0106aa8$/;"	l
f0101e65	obj/kern/kernel.asm	/^f0101e65:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101e6a	obj/kern/kernel.asm	/^f0101e6a:	68 0f 04 00 00       	push   $0x40f$/;"	l
f0101e6f	obj/kern/kernel.asm	/^f0101e6f:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101e74	obj/kern/kernel.asm	/^f0101e74:	e8 c7 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e79	obj/kern/kernel.asm	/^f0101e79:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101e7e	obj/kern/kernel.asm	/^f0101e7e:	89 f8                	mov    %edi,%eax$/;"	l
f0101e80	obj/kern/kernel.asm	/^f0101e80:	e8 78 ec ff ff       	call   f0100afd <check_va2pa>$/;"	l
f0101e85	obj/kern/kernel.asm	/^f0101e85:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f0101e88	obj/kern/kernel.asm	/^f0101e88:	74 19                	je     f0101ea3 <mem_init+0xbff>$/;"	l
f0101e8a	obj/kern/kernel.asm	/^f0101e8a:	68 d4 6a 10 f0       	push   $0xf0106ad4$/;"	l
f0101e8f	obj/kern/kernel.asm	/^f0101e8f:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101e94	obj/kern/kernel.asm	/^f0101e94:	68 10 04 00 00       	push   $0x410$/;"	l
f0101e99	obj/kern/kernel.asm	/^f0101e99:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101e9e	obj/kern/kernel.asm	/^f0101e9e:	e8 9d e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ea3	obj/kern/kernel.asm	/^f0101ea3:	66 83 7b 04 02       	cmpw   $0x2,0x4(%ebx)$/;"	l
f0101ea8	obj/kern/kernel.asm	/^f0101ea8:	74 19                	je     f0101ec3 <mem_init+0xc1f>$/;"	l
f0101eaa	obj/kern/kernel.asm	/^f0101eaa:	68 26 72 10 f0       	push   $0xf0107226$/;"	l
f0101eaf	obj/kern/kernel.asm	/^f0101eaf:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101eb4	obj/kern/kernel.asm	/^f0101eb4:	68 12 04 00 00       	push   $0x412$/;"	l
f0101eb9	obj/kern/kernel.asm	/^f0101eb9:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101ebe	obj/kern/kernel.asm	/^f0101ebe:	e8 7d e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ec3	obj/kern/kernel.asm	/^f0101ec3:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0101ec8	obj/kern/kernel.asm	/^f0101ec8:	74 19                	je     f0101ee3 <mem_init+0xc3f>$/;"	l
f0101eca	obj/kern/kernel.asm	/^f0101eca:	68 37 72 10 f0       	push   $0xf0107237$/;"	l
f0101ecf	obj/kern/kernel.asm	/^f0101ecf:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101ed4	obj/kern/kernel.asm	/^f0101ed4:	68 13 04 00 00       	push   $0x413$/;"	l
f0101ed9	obj/kern/kernel.asm	/^f0101ed9:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101ede	obj/kern/kernel.asm	/^f0101ede:	e8 5d e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ee3	obj/kern/kernel.asm	/^f0101ee3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101ee6	obj/kern/kernel.asm	/^f0101ee6:	6a 00                	push   $0x0$/;"	l
f0101ee8	obj/kern/kernel.asm	/^f0101ee8:	e8 2c f0 ff ff       	call   f0100f19 <page_alloc>$/;"	l
f0101eed	obj/kern/kernel.asm	/^f0101eed:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ef0	obj/kern/kernel.asm	/^f0101ef0:	85 c0                	test   %eax,%eax$/;"	l
f0101ef2	obj/kern/kernel.asm	/^f0101ef2:	74 04                	je     f0101ef8 <mem_init+0xc54>$/;"	l
f0101ef4	obj/kern/kernel.asm	/^f0101ef4:	39 c6                	cmp    %eax,%esi$/;"	l
f0101ef6	obj/kern/kernel.asm	/^f0101ef6:	74 19                	je     f0101f11 <mem_init+0xc6d>$/;"	l
f0101ef8	obj/kern/kernel.asm	/^f0101ef8:	68 04 6b 10 f0       	push   $0xf0106b04$/;"	l
f0101efd	obj/kern/kernel.asm	/^f0101efd:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101f02	obj/kern/kernel.asm	/^f0101f02:	68 16 04 00 00       	push   $0x416$/;"	l
f0101f07	obj/kern/kernel.asm	/^f0101f07:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101f0c	obj/kern/kernel.asm	/^f0101f0c:	e8 2f e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f11	obj/kern/kernel.asm	/^f0101f11:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101f14	obj/kern/kernel.asm	/^f0101f14:	6a 00                	push   $0x0$/;"	l
f0101f16	obj/kern/kernel.asm	/^f0101f16:	ff 35 8c 5e 1e f0    	pushl  0xf01e5e8c$/;"	l
f0101f1c	obj/kern/kernel.asm	/^f0101f1c:	e8 6d f2 ff ff       	call   f010118e <page_remove>$/;"	l
f0101f21	obj/kern/kernel.asm	/^f0101f21:	8b 3d 8c 5e 1e f0    	mov    0xf01e5e8c,%edi$/;"	l
f0101f27	obj/kern/kernel.asm	/^f0101f27:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101f2c	obj/kern/kernel.asm	/^f0101f2c:	89 f8                	mov    %edi,%eax$/;"	l
f0101f2e	obj/kern/kernel.asm	/^f0101f2e:	e8 ca eb ff ff       	call   f0100afd <check_va2pa>$/;"	l
f0101f33	obj/kern/kernel.asm	/^f0101f33:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f36	obj/kern/kernel.asm	/^f0101f36:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0101f39	obj/kern/kernel.asm	/^f0101f39:	74 19                	je     f0101f54 <mem_init+0xcb0>$/;"	l
f0101f3b	obj/kern/kernel.asm	/^f0101f3b:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f0101f40	obj/kern/kernel.asm	/^f0101f40:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101f45	obj/kern/kernel.asm	/^f0101f45:	68 1a 04 00 00       	push   $0x41a$/;"	l
f0101f4a	obj/kern/kernel.asm	/^f0101f4a:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101f4f	obj/kern/kernel.asm	/^f0101f4f:	e8 ec e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f54	obj/kern/kernel.asm	/^f0101f54:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101f59	obj/kern/kernel.asm	/^f0101f59:	89 f8                	mov    %edi,%eax$/;"	l
f0101f5b	obj/kern/kernel.asm	/^f0101f5b:	e8 9d eb ff ff       	call   f0100afd <check_va2pa>$/;"	l
f0101f60	obj/kern/kernel.asm	/^f0101f60:	89 da                	mov    %ebx,%edx$/;"	l
f0101f62	obj/kern/kernel.asm	/^f0101f62:	2b 15 90 5e 1e f0    	sub    0xf01e5e90,%edx$/;"	l
f0101f68	obj/kern/kernel.asm	/^f0101f68:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101f6b	obj/kern/kernel.asm	/^f0101f6b:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101f6e	obj/kern/kernel.asm	/^f0101f6e:	39 d0                	cmp    %edx,%eax$/;"	l
f0101f70	obj/kern/kernel.asm	/^f0101f70:	74 19                	je     f0101f8b <mem_init+0xce7>$/;"	l
f0101f72	obj/kern/kernel.asm	/^f0101f72:	68 d4 6a 10 f0       	push   $0xf0106ad4$/;"	l
f0101f77	obj/kern/kernel.asm	/^f0101f77:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101f7c	obj/kern/kernel.asm	/^f0101f7c:	68 1b 04 00 00       	push   $0x41b$/;"	l
f0101f81	obj/kern/kernel.asm	/^f0101f81:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101f86	obj/kern/kernel.asm	/^f0101f86:	e8 b5 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f8b	obj/kern/kernel.asm	/^f0101f8b:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101f90	obj/kern/kernel.asm	/^f0101f90:	74 19                	je     f0101fab <mem_init+0xd07>$/;"	l
f0101f92	obj/kern/kernel.asm	/^f0101f92:	68 dd 71 10 f0       	push   $0xf01071dd$/;"	l
f0101f97	obj/kern/kernel.asm	/^f0101f97:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101f9c	obj/kern/kernel.asm	/^f0101f9c:	68 1c 04 00 00       	push   $0x41c$/;"	l
f0101fa1	obj/kern/kernel.asm	/^f0101fa1:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101fa6	obj/kern/kernel.asm	/^f0101fa6:	e8 95 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fab	obj/kern/kernel.asm	/^f0101fab:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0101fb0	obj/kern/kernel.asm	/^f0101fb0:	74 19                	je     f0101fcb <mem_init+0xd27>$/;"	l
f0101fb2	obj/kern/kernel.asm	/^f0101fb2:	68 37 72 10 f0       	push   $0xf0107237$/;"	l
f0101fb7	obj/kern/kernel.asm	/^f0101fb7:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101fbc	obj/kern/kernel.asm	/^f0101fbc:	68 1d 04 00 00       	push   $0x41d$/;"	l
f0101fc1	obj/kern/kernel.asm	/^f0101fc1:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101fc6	obj/kern/kernel.asm	/^f0101fc6:	e8 75 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fcb	obj/kern/kernel.asm	/^f0101fcb:	6a 00                	push   $0x0$/;"	l
f0101fcd	obj/kern/kernel.asm	/^f0101fcd:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101fd2	obj/kern/kernel.asm	/^f0101fd2:	53                   	push   %ebx$/;"	l
f0101fd3	obj/kern/kernel.asm	/^f0101fd3:	57                   	push   %edi$/;"	l
f0101fd4	obj/kern/kernel.asm	/^f0101fd4:	e8 02 f2 ff ff       	call   f01011db <page_insert>$/;"	l
f0101fd9	obj/kern/kernel.asm	/^f0101fd9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101fdc	obj/kern/kernel.asm	/^f0101fdc:	85 c0                	test   %eax,%eax$/;"	l
f0101fde	obj/kern/kernel.asm	/^f0101fde:	74 19                	je     f0101ff9 <mem_init+0xd55>$/;"	l
f0101fe0	obj/kern/kernel.asm	/^f0101fe0:	68 4c 6b 10 f0       	push   $0xf0106b4c$/;"	l
f0101fe5	obj/kern/kernel.asm	/^f0101fe5:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0101fea	obj/kern/kernel.asm	/^f0101fea:	68 20 04 00 00       	push   $0x420$/;"	l
f0101fef	obj/kern/kernel.asm	/^f0101fef:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0101ff4	obj/kern/kernel.asm	/^f0101ff4:	e8 47 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ff9	obj/kern/kernel.asm	/^f0101ff9:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0101ffe	obj/kern/kernel.asm	/^f0101ffe:	75 19                	jne    f0102019 <mem_init+0xd75>$/;"	l
f0102000	obj/kern/kernel.asm	/^f0102000:	68 48 72 10 f0       	push   $0xf0107248$/;"	l
f0102005	obj/kern/kernel.asm	/^f0102005:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f010200a	obj/kern/kernel.asm	/^f010200a:	68 21 04 00 00       	push   $0x421$/;"	l
f010200f	obj/kern/kernel.asm	/^f010200f:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102014	obj/kern/kernel.asm	/^f0102014:	e8 27 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102019	obj/kern/kernel.asm	/^f0102019:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f010201c	obj/kern/kernel.asm	/^f010201c:	74 19                	je     f0102037 <mem_init+0xd93>$/;"	l
f010201e	obj/kern/kernel.asm	/^f010201e:	68 54 72 10 f0       	push   $0xf0107254$/;"	l
f0102023	obj/kern/kernel.asm	/^f0102023:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102028	obj/kern/kernel.asm	/^f0102028:	68 22 04 00 00       	push   $0x422$/;"	l
f010202d	obj/kern/kernel.asm	/^f010202d:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102032	obj/kern/kernel.asm	/^f0102032:	e8 09 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102037	obj/kern/kernel.asm	/^f0102037:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010203a	obj/kern/kernel.asm	/^f010203a:	68 00 10 00 00       	push   $0x1000$/;"	l
f010203f	obj/kern/kernel.asm	/^f010203f:	ff 35 8c 5e 1e f0    	pushl  0xf01e5e8c$/;"	l
f0102045	obj/kern/kernel.asm	/^f0102045:	e8 44 f1 ff ff       	call   f010118e <page_remove>$/;"	l
f010204a	obj/kern/kernel.asm	/^f010204a:	8b 3d 8c 5e 1e f0    	mov    0xf01e5e8c,%edi$/;"	l
f0102050	obj/kern/kernel.asm	/^f0102050:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102055	obj/kern/kernel.asm	/^f0102055:	89 f8                	mov    %edi,%eax$/;"	l
f0102057	obj/kern/kernel.asm	/^f0102057:	e8 a1 ea ff ff       	call   f0100afd <check_va2pa>$/;"	l
f010205c	obj/kern/kernel.asm	/^f010205c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010205f	obj/kern/kernel.asm	/^f010205f:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102062	obj/kern/kernel.asm	/^f0102062:	74 19                	je     f010207d <mem_init+0xdd9>$/;"	l
f0102064	obj/kern/kernel.asm	/^f0102064:	68 28 6b 10 f0       	push   $0xf0106b28$/;"	l
f0102069	obj/kern/kernel.asm	/^f0102069:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f010206e	obj/kern/kernel.asm	/^f010206e:	68 26 04 00 00       	push   $0x426$/;"	l
f0102073	obj/kern/kernel.asm	/^f0102073:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102078	obj/kern/kernel.asm	/^f0102078:	e8 c3 df ff ff       	call   f0100040 <_panic>$/;"	l
f010207d	obj/kern/kernel.asm	/^f010207d:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102082	obj/kern/kernel.asm	/^f0102082:	89 f8                	mov    %edi,%eax$/;"	l
f0102084	obj/kern/kernel.asm	/^f0102084:	e8 74 ea ff ff       	call   f0100afd <check_va2pa>$/;"	l
f0102089	obj/kern/kernel.asm	/^f0102089:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010208c	obj/kern/kernel.asm	/^f010208c:	74 19                	je     f01020a7 <mem_init+0xe03>$/;"	l
f010208e	obj/kern/kernel.asm	/^f010208e:	68 84 6b 10 f0       	push   $0xf0106b84$/;"	l
f0102093	obj/kern/kernel.asm	/^f0102093:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102098	obj/kern/kernel.asm	/^f0102098:	68 27 04 00 00       	push   $0x427$/;"	l
f010209d	obj/kern/kernel.asm	/^f010209d:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01020a2	obj/kern/kernel.asm	/^f01020a2:	e8 99 df ff ff       	call   f0100040 <_panic>$/;"	l
f01020a7	obj/kern/kernel.asm	/^f01020a7:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f01020ac	obj/kern/kernel.asm	/^f01020ac:	74 19                	je     f01020c7 <mem_init+0xe23>$/;"	l
f01020ae	obj/kern/kernel.asm	/^f01020ae:	68 69 72 10 f0       	push   $0xf0107269$/;"	l
f01020b3	obj/kern/kernel.asm	/^f01020b3:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f01020b8	obj/kern/kernel.asm	/^f01020b8:	68 28 04 00 00       	push   $0x428$/;"	l
f01020bd	obj/kern/kernel.asm	/^f01020bd:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01020c2	obj/kern/kernel.asm	/^f01020c2:	e8 79 df ff ff       	call   f0100040 <_panic>$/;"	l
f01020c7	obj/kern/kernel.asm	/^f01020c7:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01020cc	obj/kern/kernel.asm	/^f01020cc:	74 19                	je     f01020e7 <mem_init+0xe43>$/;"	l
f01020ce	obj/kern/kernel.asm	/^f01020ce:	68 37 72 10 f0       	push   $0xf0107237$/;"	l
f01020d3	obj/kern/kernel.asm	/^f01020d3:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f01020d8	obj/kern/kernel.asm	/^f01020d8:	68 29 04 00 00       	push   $0x429$/;"	l
f01020dd	obj/kern/kernel.asm	/^f01020dd:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01020e2	obj/kern/kernel.asm	/^f01020e2:	e8 59 df ff ff       	call   f0100040 <_panic>$/;"	l
f01020e7	obj/kern/kernel.asm	/^f01020e7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01020ea	obj/kern/kernel.asm	/^f01020ea:	6a 00                	push   $0x0$/;"	l
f01020ec	obj/kern/kernel.asm	/^f01020ec:	e8 28 ee ff ff       	call   f0100f19 <page_alloc>$/;"	l
f01020f1	obj/kern/kernel.asm	/^f01020f1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01020f4	obj/kern/kernel.asm	/^f01020f4:	39 c3                	cmp    %eax,%ebx$/;"	l
f01020f6	obj/kern/kernel.asm	/^f01020f6:	75 04                	jne    f01020fc <mem_init+0xe58>$/;"	l
f01020f8	obj/kern/kernel.asm	/^f01020f8:	85 c0                	test   %eax,%eax$/;"	l
f01020fa	obj/kern/kernel.asm	/^f01020fa:	75 19                	jne    f0102115 <mem_init+0xe71>$/;"	l
f01020fc	obj/kern/kernel.asm	/^f01020fc:	68 ac 6b 10 f0       	push   $0xf0106bac$/;"	l
f0102101	obj/kern/kernel.asm	/^f0102101:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102106	obj/kern/kernel.asm	/^f0102106:	68 2c 04 00 00       	push   $0x42c$/;"	l
f010210b	obj/kern/kernel.asm	/^f010210b:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102110	obj/kern/kernel.asm	/^f0102110:	e8 2b df ff ff       	call   f0100040 <_panic>$/;"	l
f0102115	obj/kern/kernel.asm	/^f0102115:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102118	obj/kern/kernel.asm	/^f0102118:	6a 00                	push   $0x0$/;"	l
f010211a	obj/kern/kernel.asm	/^f010211a:	e8 fa ed ff ff       	call   f0100f19 <page_alloc>$/;"	l
f010211f	obj/kern/kernel.asm	/^f010211f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102122	obj/kern/kernel.asm	/^f0102122:	85 c0                	test   %eax,%eax$/;"	l
f0102124	obj/kern/kernel.asm	/^f0102124:	74 19                	je     f010213f <mem_init+0xe9b>$/;"	l
f0102126	obj/kern/kernel.asm	/^f0102126:	68 8b 71 10 f0       	push   $0xf010718b$/;"	l
f010212b	obj/kern/kernel.asm	/^f010212b:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102130	obj/kern/kernel.asm	/^f0102130:	68 2f 04 00 00       	push   $0x42f$/;"	l
f0102135	obj/kern/kernel.asm	/^f0102135:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f010213a	obj/kern/kernel.asm	/^f010213a:	e8 01 df ff ff       	call   f0100040 <_panic>$/;"	l
f010213f	obj/kern/kernel.asm	/^f010213f:	8b 0d 8c 5e 1e f0    	mov    0xf01e5e8c,%ecx$/;"	l
f0102145	obj/kern/kernel.asm	/^f0102145:	8b 11                	mov    (%ecx),%edx$/;"	l
f0102147	obj/kern/kernel.asm	/^f0102147:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f010214d	obj/kern/kernel.asm	/^f010214d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102150	obj/kern/kernel.asm	/^f0102150:	2b 05 90 5e 1e f0    	sub    0xf01e5e90,%eax$/;"	l
f0102156	obj/kern/kernel.asm	/^f0102156:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102159	obj/kern/kernel.asm	/^f0102159:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010215c	obj/kern/kernel.asm	/^f010215c:	39 c2                	cmp    %eax,%edx$/;"	l
f010215e	obj/kern/kernel.asm	/^f010215e:	74 19                	je     f0102179 <mem_init+0xed5>$/;"	l
f0102160	obj/kern/kernel.asm	/^f0102160:	68 50 68 10 f0       	push   $0xf0106850$/;"	l
f0102165	obj/kern/kernel.asm	/^f0102165:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f010216a	obj/kern/kernel.asm	/^f010216a:	68 32 04 00 00       	push   $0x432$/;"	l
f010216f	obj/kern/kernel.asm	/^f010216f:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102174	obj/kern/kernel.asm	/^f0102174:	e8 c7 de ff ff       	call   f0100040 <_panic>$/;"	l
f0102179	obj/kern/kernel.asm	/^f0102179:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f010217f	obj/kern/kernel.asm	/^f010217f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102182	obj/kern/kernel.asm	/^f0102182:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0102187	obj/kern/kernel.asm	/^f0102187:	74 19                	je     f01021a2 <mem_init+0xefe>$/;"	l
f0102189	obj/kern/kernel.asm	/^f0102189:	68 ee 71 10 f0       	push   $0xf01071ee$/;"	l
f010218e	obj/kern/kernel.asm	/^f010218e:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102193	obj/kern/kernel.asm	/^f0102193:	68 34 04 00 00       	push   $0x434$/;"	l
f0102198	obj/kern/kernel.asm	/^f0102198:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f010219d	obj/kern/kernel.asm	/^f010219d:	e8 9e de ff ff       	call   f0100040 <_panic>$/;"	l
f01021a2	obj/kern/kernel.asm	/^f01021a2:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01021a5	obj/kern/kernel.asm	/^f01021a5:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f01021ab	obj/kern/kernel.asm	/^f01021ab:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01021ae	obj/kern/kernel.asm	/^f01021ae:	50                   	push   %eax$/;"	l
f01021af	obj/kern/kernel.asm	/^f01021af:	e8 dc ed ff ff       	call   f0100f90 <page_free>$/;"	l
f01021b4	obj/kern/kernel.asm	/^f01021b4:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01021b7	obj/kern/kernel.asm	/^f01021b7:	6a 01                	push   $0x1$/;"	l
f01021b9	obj/kern/kernel.asm	/^f01021b9:	68 00 10 40 00       	push   $0x401000$/;"	l
f01021be	obj/kern/kernel.asm	/^f01021be:	ff 35 8c 5e 1e f0    	pushl  0xf01e5e8c$/;"	l
f01021c4	obj/kern/kernel.asm	/^f01021c4:	e8 44 ee ff ff       	call   f010100d <pgdir_walk>$/;"	l
f01021c9	obj/kern/kernel.asm	/^f01021c9:	89 c7                	mov    %eax,%edi$/;"	l
f01021cb	obj/kern/kernel.asm	/^f01021cb:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01021ce	obj/kern/kernel.asm	/^f01021ce:	a1 8c 5e 1e f0       	mov    0xf01e5e8c,%eax$/;"	l
f01021d3	obj/kern/kernel.asm	/^f01021d3:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01021d6	obj/kern/kernel.asm	/^f01021d6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f01021d9	obj/kern/kernel.asm	/^f01021d9:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01021de	obj/kern/kernel.asm	/^f01021de:	8b 0d 88 5e 1e f0    	mov    0xf01e5e88,%ecx$/;"	l
f01021e4	obj/kern/kernel.asm	/^f01021e4:	89 c2                	mov    %eax,%edx$/;"	l
f01021e6	obj/kern/kernel.asm	/^f01021e6:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01021e9	obj/kern/kernel.asm	/^f01021e9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01021ec	obj/kern/kernel.asm	/^f01021ec:	39 ca                	cmp    %ecx,%edx$/;"	l
f01021ee	obj/kern/kernel.asm	/^f01021ee:	72 15                	jb     f0102205 <mem_init+0xf61>$/;"	l
f01021f0	obj/kern/kernel.asm	/^f01021f0:	50                   	push   %eax$/;"	l
f01021f1	obj/kern/kernel.asm	/^f01021f1:	68 84 60 10 f0       	push   $0xf0106084$/;"	l
f01021f6	obj/kern/kernel.asm	/^f01021f6:	68 3b 04 00 00       	push   $0x43b$/;"	l
f01021fb	obj/kern/kernel.asm	/^f01021fb:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102200	obj/kern/kernel.asm	/^f0102200:	e8 3b de ff ff       	call   f0100040 <_panic>$/;"	l
f0102205	obj/kern/kernel.asm	/^f0102205:	2d fc ff ff 0f       	sub    $0xffffffc,%eax$/;"	l
f010220a	obj/kern/kernel.asm	/^f010220a:	39 c7                	cmp    %eax,%edi$/;"	l
f010220c	obj/kern/kernel.asm	/^f010220c:	74 19                	je     f0102227 <mem_init+0xf83>$/;"	l
f010220e	obj/kern/kernel.asm	/^f010220e:	68 7a 72 10 f0       	push   $0xf010727a$/;"	l
f0102213	obj/kern/kernel.asm	/^f0102213:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102218	obj/kern/kernel.asm	/^f0102218:	68 3c 04 00 00       	push   $0x43c$/;"	l
f010221d	obj/kern/kernel.asm	/^f010221d:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102222	obj/kern/kernel.asm	/^f0102222:	e8 19 de ff ff       	call   f0100040 <_panic>$/;"	l
f0102227	obj/kern/kernel.asm	/^f0102227:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f010222a	obj/kern/kernel.asm	/^f010222a:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
f0102231	obj/kern/kernel.asm	/^f0102231:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102234	obj/kern/kernel.asm	/^f0102234:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f010223a	obj/kern/kernel.asm	/^f010223a:	2b 05 90 5e 1e f0    	sub    0xf01e5e90,%eax$/;"	l
f0102240	obj/kern/kernel.asm	/^f0102240:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102243	obj/kern/kernel.asm	/^f0102243:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102246	obj/kern/kernel.asm	/^f0102246:	89 c2                	mov    %eax,%edx$/;"	l
f0102248	obj/kern/kernel.asm	/^f0102248:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010224b	obj/kern/kernel.asm	/^f010224b:	39 d1                	cmp    %edx,%ecx$/;"	l
f010224d	obj/kern/kernel.asm	/^f010224d:	77 12                	ja     f0102261 <mem_init+0xfbd>$/;"	l
f010224f	obj/kern/kernel.asm	/^f010224f:	50                   	push   %eax$/;"	l
f0102250	obj/kern/kernel.asm	/^f0102250:	68 84 60 10 f0       	push   $0xf0106084$/;"	l
f0102255	obj/kern/kernel.asm	/^f0102255:	6a 58                	push   $0x58$/;"	l
f0102257	obj/kern/kernel.asm	/^f0102257:	68 c9 6f 10 f0       	push   $0xf0106fc9$/;"	l
f010225c	obj/kern/kernel.asm	/^f010225c:	e8 df dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102261	obj/kern/kernel.asm	/^f0102261:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102264	obj/kern/kernel.asm	/^f0102264:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102269	obj/kern/kernel.asm	/^f0102269:	68 ff 00 00 00       	push   $0xff$/;"	l
f010226e	obj/kern/kernel.asm	/^f010226e:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102273	obj/kern/kernel.asm	/^f0102273:	50                   	push   %eax$/;"	l
f0102274	obj/kern/kernel.asm	/^f0102274:	e8 38 31 00 00       	call   f01053b1 <memset>$/;"	l
f0102279	obj/kern/kernel.asm	/^f0102279:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f010227c	obj/kern/kernel.asm	/^f010227c:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010227f	obj/kern/kernel.asm	/^f010227f:	e8 0c ed ff ff       	call   f0100f90 <page_free>$/;"	l
f0102284	obj/kern/kernel.asm	/^f0102284:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102287	obj/kern/kernel.asm	/^f0102287:	6a 01                	push   $0x1$/;"	l
f0102289	obj/kern/kernel.asm	/^f0102289:	6a 00                	push   $0x0$/;"	l
f010228b	obj/kern/kernel.asm	/^f010228b:	ff 35 8c 5e 1e f0    	pushl  0xf01e5e8c$/;"	l
f0102291	obj/kern/kernel.asm	/^f0102291:	e8 77 ed ff ff       	call   f010100d <pgdir_walk>$/;"	l
f0102296	obj/kern/kernel.asm	/^f0102296:	89 fa                	mov    %edi,%edx$/;"	l
f0102298	obj/kern/kernel.asm	/^f0102298:	2b 15 90 5e 1e f0    	sub    0xf01e5e90,%edx$/;"	l
f010229e	obj/kern/kernel.asm	/^f010229e:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01022a1	obj/kern/kernel.asm	/^f01022a1:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01022a4	obj/kern/kernel.asm	/^f01022a4:	89 d0                	mov    %edx,%eax$/;"	l
f01022a6	obj/kern/kernel.asm	/^f01022a6:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01022a9	obj/kern/kernel.asm	/^f01022a9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01022ac	obj/kern/kernel.asm	/^f01022ac:	3b 05 88 5e 1e f0    	cmp    0xf01e5e88,%eax$/;"	l
f01022b2	obj/kern/kernel.asm	/^f01022b2:	72 12                	jb     f01022c6 <mem_init+0x1022>$/;"	l
f01022b4	obj/kern/kernel.asm	/^f01022b4:	52                   	push   %edx$/;"	l
f01022b5	obj/kern/kernel.asm	/^f01022b5:	68 84 60 10 f0       	push   $0xf0106084$/;"	l
f01022ba	obj/kern/kernel.asm	/^f01022ba:	6a 58                	push   $0x58$/;"	l
f01022bc	obj/kern/kernel.asm	/^f01022bc:	68 c9 6f 10 f0       	push   $0xf0106fc9$/;"	l
f01022c1	obj/kern/kernel.asm	/^f01022c1:	e8 7a dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022c6	obj/kern/kernel.asm	/^f01022c6:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f01022cc	obj/kern/kernel.asm	/^f01022cc:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01022cf	obj/kern/kernel.asm	/^f01022cf:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f01022d5	obj/kern/kernel.asm	/^f01022d5:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f01022d8	obj/kern/kernel.asm	/^f01022d8:	74 19                	je     f01022f3 <mem_init+0x104f>$/;"	l
f01022da	obj/kern/kernel.asm	/^f01022da:	68 92 72 10 f0       	push   $0xf0107292$/;"	l
f01022df	obj/kern/kernel.asm	/^f01022df:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f01022e4	obj/kern/kernel.asm	/^f01022e4:	68 46 04 00 00       	push   $0x446$/;"	l
f01022e9	obj/kern/kernel.asm	/^f01022e9:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01022ee	obj/kern/kernel.asm	/^f01022ee:	e8 4d dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022f3	obj/kern/kernel.asm	/^f01022f3:	83 c0 04             	add    $0x4,%eax$/;"	l
f01022f6	obj/kern/kernel.asm	/^f01022f6:	39 c2                	cmp    %eax,%edx$/;"	l
f01022f8	obj/kern/kernel.asm	/^f01022f8:	75 db                	jne    f01022d5 <mem_init+0x1031>$/;"	l
f01022fa	obj/kern/kernel.asm	/^f01022fa:	a1 8c 5e 1e f0       	mov    0xf01e5e8c,%eax$/;"	l
f01022ff	obj/kern/kernel.asm	/^f01022ff:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102305	obj/kern/kernel.asm	/^f0102305:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102308	obj/kern/kernel.asm	/^f0102308:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f010230e	obj/kern/kernel.asm	/^f010230e:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0102311	obj/kern/kernel.asm	/^f0102311:	89 0d 40 52 1e f0    	mov    %ecx,0xf01e5240$/;"	l
f0102317	obj/kern/kernel.asm	/^f0102317:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010231a	obj/kern/kernel.asm	/^f010231a:	50                   	push   %eax$/;"	l
f010231b	obj/kern/kernel.asm	/^f010231b:	e8 70 ec ff ff       	call   f0100f90 <page_free>$/;"	l
f0102320	obj/kern/kernel.asm	/^f0102320:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102323	obj/kern/kernel.asm	/^f0102323:	e8 68 ec ff ff       	call   f0100f90 <page_free>$/;"	l
f0102328	obj/kern/kernel.asm	/^f0102328:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010232b	obj/kern/kernel.asm	/^f010232b:	e8 60 ec ff ff       	call   f0100f90 <page_free>$/;"	l
f0102330	obj/kern/kernel.asm	/^f0102330:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102333	obj/kern/kernel.asm	/^f0102333:	68 01 10 00 00       	push   $0x1001$/;"	l
f0102338	obj/kern/kernel.asm	/^f0102338:	6a 00                	push   $0x0$/;"	l
f010233a	obj/kern/kernel.asm	/^f010233a:	e8 02 ef ff ff       	call   f0101241 <mmio_map_region>$/;"	l
f010233f	obj/kern/kernel.asm	/^f010233f:	89 c3                	mov    %eax,%ebx$/;"	l
f0102341	obj/kern/kernel.asm	/^f0102341:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102344	obj/kern/kernel.asm	/^f0102344:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102349	obj/kern/kernel.asm	/^f0102349:	6a 00                	push   $0x0$/;"	l
f010234b	obj/kern/kernel.asm	/^f010234b:	e8 f1 ee ff ff       	call   f0101241 <mmio_map_region>$/;"	l
f0102350	obj/kern/kernel.asm	/^f0102350:	89 c6                	mov    %eax,%esi$/;"	l
f0102352	obj/kern/kernel.asm	/^f0102352:	8d 83 00 20 00 00    	lea    0x2000(%ebx),%eax$/;"	l
f0102358	obj/kern/kernel.asm	/^f0102358:	83 c4 10             	add    $0x10,%esp$/;"	l
f010235b	obj/kern/kernel.asm	/^f010235b:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102361	obj/kern/kernel.asm	/^f0102361:	76 07                	jbe    f010236a <mem_init+0x10c6>$/;"	l
f0102363	obj/kern/kernel.asm	/^f0102363:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f0102368	obj/kern/kernel.asm	/^f0102368:	76 19                	jbe    f0102383 <mem_init+0x10df>$/;"	l
f010236a	obj/kern/kernel.asm	/^f010236a:	68 d0 6b 10 f0       	push   $0xf0106bd0$/;"	l
f010236f	obj/kern/kernel.asm	/^f010236f:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102374	obj/kern/kernel.asm	/^f0102374:	68 56 04 00 00       	push   $0x456$/;"	l
f0102379	obj/kern/kernel.asm	/^f0102379:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f010237e	obj/kern/kernel.asm	/^f010237e:	e8 bd dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102383	obj/kern/kernel.asm	/^f0102383:	8d 96 00 20 00 00    	lea    0x2000(%esi),%edx$/;"	l
f0102389	obj/kern/kernel.asm	/^f0102389:	81 fa ff ff bf ef    	cmp    $0xefbfffff,%edx$/;"	l
f010238f	obj/kern/kernel.asm	/^f010238f:	77 08                	ja     f0102399 <mem_init+0x10f5>$/;"	l
f0102391	obj/kern/kernel.asm	/^f0102391:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0102397	obj/kern/kernel.asm	/^f0102397:	77 19                	ja     f01023b2 <mem_init+0x110e>$/;"	l
f0102399	obj/kern/kernel.asm	/^f0102399:	68 f8 6b 10 f0       	push   $0xf0106bf8$/;"	l
f010239e	obj/kern/kernel.asm	/^f010239e:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f01023a3	obj/kern/kernel.asm	/^f01023a3:	68 57 04 00 00       	push   $0x457$/;"	l
f01023a8	obj/kern/kernel.asm	/^f01023a8:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01023ad	obj/kern/kernel.asm	/^f01023ad:	e8 8e dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023b2	obj/kern/kernel.asm	/^f01023b2:	89 da                	mov    %ebx,%edx$/;"	l
f01023b4	obj/kern/kernel.asm	/^f01023b4:	09 f2                	or     %esi,%edx$/;"	l
f01023b6	obj/kern/kernel.asm	/^f01023b6:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f01023bc	obj/kern/kernel.asm	/^f01023bc:	74 19                	je     f01023d7 <mem_init+0x1133>$/;"	l
f01023be	obj/kern/kernel.asm	/^f01023be:	68 20 6c 10 f0       	push   $0xf0106c20$/;"	l
f01023c3	obj/kern/kernel.asm	/^f01023c3:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f01023c8	obj/kern/kernel.asm	/^f01023c8:	68 59 04 00 00       	push   $0x459$/;"	l
f01023cd	obj/kern/kernel.asm	/^f01023cd:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01023d2	obj/kern/kernel.asm	/^f01023d2:	e8 69 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023d7	obj/kern/kernel.asm	/^f01023d7:	39 c6                	cmp    %eax,%esi$/;"	l
f01023d9	obj/kern/kernel.asm	/^f01023d9:	73 19                	jae    f01023f4 <mem_init+0x1150>$/;"	l
f01023db	obj/kern/kernel.asm	/^f01023db:	68 a9 72 10 f0       	push   $0xf01072a9$/;"	l
f01023e0	obj/kern/kernel.asm	/^f01023e0:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f01023e5	obj/kern/kernel.asm	/^f01023e5:	68 5b 04 00 00       	push   $0x45b$/;"	l
f01023ea	obj/kern/kernel.asm	/^f01023ea:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01023ef	obj/kern/kernel.asm	/^f01023ef:	e8 4c dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023f4	obj/kern/kernel.asm	/^f01023f4:	8b 3d 8c 5e 1e f0    	mov    0xf01e5e8c,%edi$/;"	l
f01023fa	obj/kern/kernel.asm	/^f01023fa:	89 da                	mov    %ebx,%edx$/;"	l
f01023fc	obj/kern/kernel.asm	/^f01023fc:	89 f8                	mov    %edi,%eax$/;"	l
f01023fe	obj/kern/kernel.asm	/^f01023fe:	e8 fa e6 ff ff       	call   f0100afd <check_va2pa>$/;"	l
f0102403	obj/kern/kernel.asm	/^f0102403:	85 c0                	test   %eax,%eax$/;"	l
f0102405	obj/kern/kernel.asm	/^f0102405:	74 19                	je     f0102420 <mem_init+0x117c>$/;"	l
f0102407	obj/kern/kernel.asm	/^f0102407:	68 48 6c 10 f0       	push   $0xf0106c48$/;"	l
f010240c	obj/kern/kernel.asm	/^f010240c:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102411	obj/kern/kernel.asm	/^f0102411:	68 5d 04 00 00       	push   $0x45d$/;"	l
f0102416	obj/kern/kernel.asm	/^f0102416:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f010241b	obj/kern/kernel.asm	/^f010241b:	e8 20 dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102420	obj/kern/kernel.asm	/^f0102420:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f0102426	obj/kern/kernel.asm	/^f0102426:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102429	obj/kern/kernel.asm	/^f0102429:	89 c2                	mov    %eax,%edx$/;"	l
f010242b	obj/kern/kernel.asm	/^f010242b:	89 f8                	mov    %edi,%eax$/;"	l
f010242d	obj/kern/kernel.asm	/^f010242d:	e8 cb e6 ff ff       	call   f0100afd <check_va2pa>$/;"	l
f0102432	obj/kern/kernel.asm	/^f0102432:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0102437	obj/kern/kernel.asm	/^f0102437:	74 19                	je     f0102452 <mem_init+0x11ae>$/;"	l
f0102439	obj/kern/kernel.asm	/^f0102439:	68 6c 6c 10 f0       	push   $0xf0106c6c$/;"	l
f010243e	obj/kern/kernel.asm	/^f010243e:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102443	obj/kern/kernel.asm	/^f0102443:	68 5e 04 00 00       	push   $0x45e$/;"	l
f0102448	obj/kern/kernel.asm	/^f0102448:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f010244d	obj/kern/kernel.asm	/^f010244d:	e8 ee db ff ff       	call   f0100040 <_panic>$/;"	l
f0102452	obj/kern/kernel.asm	/^f0102452:	89 f2                	mov    %esi,%edx$/;"	l
f0102454	obj/kern/kernel.asm	/^f0102454:	89 f8                	mov    %edi,%eax$/;"	l
f0102456	obj/kern/kernel.asm	/^f0102456:	e8 a2 e6 ff ff       	call   f0100afd <check_va2pa>$/;"	l
f010245b	obj/kern/kernel.asm	/^f010245b:	85 c0                	test   %eax,%eax$/;"	l
f010245d	obj/kern/kernel.asm	/^f010245d:	74 19                	je     f0102478 <mem_init+0x11d4>$/;"	l
f010245f	obj/kern/kernel.asm	/^f010245f:	68 9c 6c 10 f0       	push   $0xf0106c9c$/;"	l
f0102464	obj/kern/kernel.asm	/^f0102464:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102469	obj/kern/kernel.asm	/^f0102469:	68 5f 04 00 00       	push   $0x45f$/;"	l
f010246e	obj/kern/kernel.asm	/^f010246e:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102473	obj/kern/kernel.asm	/^f0102473:	e8 c8 db ff ff       	call   f0100040 <_panic>$/;"	l
f0102478	obj/kern/kernel.asm	/^f0102478:	8d 96 00 10 00 00    	lea    0x1000(%esi),%edx$/;"	l
f010247e	obj/kern/kernel.asm	/^f010247e:	89 f8                	mov    %edi,%eax$/;"	l
f0102480	obj/kern/kernel.asm	/^f0102480:	e8 78 e6 ff ff       	call   f0100afd <check_va2pa>$/;"	l
f0102485	obj/kern/kernel.asm	/^f0102485:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102488	obj/kern/kernel.asm	/^f0102488:	74 19                	je     f01024a3 <mem_init+0x11ff>$/;"	l
f010248a	obj/kern/kernel.asm	/^f010248a:	68 c0 6c 10 f0       	push   $0xf0106cc0$/;"	l
f010248f	obj/kern/kernel.asm	/^f010248f:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102494	obj/kern/kernel.asm	/^f0102494:	68 60 04 00 00       	push   $0x460$/;"	l
f0102499	obj/kern/kernel.asm	/^f0102499:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f010249e	obj/kern/kernel.asm	/^f010249e:	e8 9d db ff ff       	call   f0100040 <_panic>$/;"	l
f01024a3	obj/kern/kernel.asm	/^f01024a3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01024a6	obj/kern/kernel.asm	/^f01024a6:	6a 00                	push   $0x0$/;"	l
f01024a8	obj/kern/kernel.asm	/^f01024a8:	53                   	push   %ebx$/;"	l
f01024a9	obj/kern/kernel.asm	/^f01024a9:	57                   	push   %edi$/;"	l
f01024aa	obj/kern/kernel.asm	/^f01024aa:	e8 5e eb ff ff       	call   f010100d <pgdir_walk>$/;"	l
f01024af	obj/kern/kernel.asm	/^f01024af:	83 c4 10             	add    $0x10,%esp$/;"	l
f01024b2	obj/kern/kernel.asm	/^f01024b2:	f6 00 1a             	testb  $0x1a,(%eax)$/;"	l
f01024b5	obj/kern/kernel.asm	/^f01024b5:	75 19                	jne    f01024d0 <mem_init+0x122c>$/;"	l
f01024b7	obj/kern/kernel.asm	/^f01024b7:	68 ec 6c 10 f0       	push   $0xf0106cec$/;"	l
f01024bc	obj/kern/kernel.asm	/^f01024bc:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f01024c1	obj/kern/kernel.asm	/^f01024c1:	68 62 04 00 00       	push   $0x462$/;"	l
f01024c6	obj/kern/kernel.asm	/^f01024c6:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01024cb	obj/kern/kernel.asm	/^f01024cb:	e8 70 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024d0	obj/kern/kernel.asm	/^f01024d0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01024d3	obj/kern/kernel.asm	/^f01024d3:	6a 00                	push   $0x0$/;"	l
f01024d5	obj/kern/kernel.asm	/^f01024d5:	53                   	push   %ebx$/;"	l
f01024d6	obj/kern/kernel.asm	/^f01024d6:	ff 35 8c 5e 1e f0    	pushl  0xf01e5e8c$/;"	l
f01024dc	obj/kern/kernel.asm	/^f01024dc:	e8 2c eb ff ff       	call   f010100d <pgdir_walk>$/;"	l
f01024e1	obj/kern/kernel.asm	/^f01024e1:	8b 00                	mov    (%eax),%eax$/;"	l
f01024e3	obj/kern/kernel.asm	/^f01024e3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01024e6	obj/kern/kernel.asm	/^f01024e6:	83 e0 04             	and    $0x4,%eax$/;"	l
f01024e9	obj/kern/kernel.asm	/^f01024e9:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f01024ec	obj/kern/kernel.asm	/^f01024ec:	74 19                	je     f0102507 <mem_init+0x1263>$/;"	l
f01024ee	obj/kern/kernel.asm	/^f01024ee:	68 30 6d 10 f0       	push   $0xf0106d30$/;"	l
f01024f3	obj/kern/kernel.asm	/^f01024f3:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f01024f8	obj/kern/kernel.asm	/^f01024f8:	68 63 04 00 00       	push   $0x463$/;"	l
f01024fd	obj/kern/kernel.asm	/^f01024fd:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102502	obj/kern/kernel.asm	/^f0102502:	e8 39 db ff ff       	call   f0100040 <_panic>$/;"	l
f0102507	obj/kern/kernel.asm	/^f0102507:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010250a	obj/kern/kernel.asm	/^f010250a:	6a 00                	push   $0x0$/;"	l
f010250c	obj/kern/kernel.asm	/^f010250c:	53                   	push   %ebx$/;"	l
f010250d	obj/kern/kernel.asm	/^f010250d:	ff 35 8c 5e 1e f0    	pushl  0xf01e5e8c$/;"	l
f0102513	obj/kern/kernel.asm	/^f0102513:	e8 f5 ea ff ff       	call   f010100d <pgdir_walk>$/;"	l
f0102518	obj/kern/kernel.asm	/^f0102518:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010251e	obj/kern/kernel.asm	/^f010251e:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102521	obj/kern/kernel.asm	/^f0102521:	6a 00                	push   $0x0$/;"	l
f0102523	obj/kern/kernel.asm	/^f0102523:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0102526	obj/kern/kernel.asm	/^f0102526:	ff 35 8c 5e 1e f0    	pushl  0xf01e5e8c$/;"	l
f010252c	obj/kern/kernel.asm	/^f010252c:	e8 dc ea ff ff       	call   f010100d <pgdir_walk>$/;"	l
f0102531	obj/kern/kernel.asm	/^f0102531:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102537	obj/kern/kernel.asm	/^f0102537:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010253a	obj/kern/kernel.asm	/^f010253a:	6a 00                	push   $0x0$/;"	l
f010253c	obj/kern/kernel.asm	/^f010253c:	56                   	push   %esi$/;"	l
f010253d	obj/kern/kernel.asm	/^f010253d:	ff 35 8c 5e 1e f0    	pushl  0xf01e5e8c$/;"	l
f0102543	obj/kern/kernel.asm	/^f0102543:	e8 c5 ea ff ff       	call   f010100d <pgdir_walk>$/;"	l
f0102548	obj/kern/kernel.asm	/^f0102548:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010254e	obj/kern/kernel.asm	/^f010254e:	c7 04 24 bb 72 10 f0 	movl   $0xf01072bb,(%esp)$/;"	l
f0102555	obj/kern/kernel.asm	/^f0102555:	e8 50 11 00 00       	call   f01036aa <cprintf>$/;"	l
f010255a	obj/kern/kernel.asm	/^f010255a:	a1 90 5e 1e f0       	mov    0xf01e5e90,%eax$/;"	l
f010255f	obj/kern/kernel.asm	/^f010255f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102562	obj/kern/kernel.asm	/^f0102562:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102567	obj/kern/kernel.asm	/^f0102567:	77 15                	ja     f010257e <mem_init+0x12da>$/;"	l
f0102569	obj/kern/kernel.asm	/^f0102569:	50                   	push   %eax$/;"	l
f010256a	obj/kern/kernel.asm	/^f010256a:	68 a8 60 10 f0       	push   $0xf01060a8$/;"	l
f010256f	obj/kern/kernel.asm	/^f010256f:	68 d0 00 00 00       	push   $0xd0$/;"	l
f0102574	obj/kern/kernel.asm	/^f0102574:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102579	obj/kern/kernel.asm	/^f0102579:	e8 c2 da ff ff       	call   f0100040 <_panic>$/;"	l
f010257e	obj/kern/kernel.asm	/^f010257e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102581	obj/kern/kernel.asm	/^f0102581:	6a 04                	push   $0x4$/;"	l
f0102583	obj/kern/kernel.asm	/^f0102583:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102588	obj/kern/kernel.asm	/^f0102588:	50                   	push   %eax$/;"	l
f0102589	obj/kern/kernel.asm	/^f0102589:	b9 00 00 40 00       	mov    $0x400000,%ecx$/;"	l
f010258e	obj/kern/kernel.asm	/^f010258e:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f0102593	obj/kern/kernel.asm	/^f0102593:	a1 8c 5e 1e f0       	mov    0xf01e5e8c,%eax$/;"	l
f0102598	obj/kern/kernel.asm	/^f0102598:	e8 03 eb ff ff       	call   f01010a0 <boot_map_region>$/;"	l
f010259d	obj/kern/kernel.asm	/^f010259d:	c7 04 24 64 6d 10 f0 	movl   $0xf0106d64,(%esp)$/;"	l
f01025a4	obj/kern/kernel.asm	/^f01025a4:	e8 01 11 00 00       	call   f01036aa <cprintf>$/;"	l
f01025a9	obj/kern/kernel.asm	/^f01025a9:	a1 48 52 1e f0       	mov    0xf01e5248,%eax$/;"	l
f01025ae	obj/kern/kernel.asm	/^f01025ae:	83 c4 10             	add    $0x10,%esp$/;"	l
f01025b1	obj/kern/kernel.asm	/^f01025b1:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01025b6	obj/kern/kernel.asm	/^f01025b6:	77 15                	ja     f01025cd <mem_init+0x1329>$/;"	l
f01025b8	obj/kern/kernel.asm	/^f01025b8:	50                   	push   %eax$/;"	l
f01025b9	obj/kern/kernel.asm	/^f01025b9:	68 a8 60 10 f0       	push   $0xf01060a8$/;"	l
f01025be	obj/kern/kernel.asm	/^f01025be:	68 da 00 00 00       	push   $0xda$/;"	l
f01025c3	obj/kern/kernel.asm	/^f01025c3:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01025c8	obj/kern/kernel.asm	/^f01025c8:	e8 73 da ff ff       	call   f0100040 <_panic>$/;"	l
f01025cd	obj/kern/kernel.asm	/^f01025cd:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01025d0	obj/kern/kernel.asm	/^f01025d0:	6a 04                	push   $0x4$/;"	l
f01025d2	obj/kern/kernel.asm	/^f01025d2:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01025d7	obj/kern/kernel.asm	/^f01025d7:	50                   	push   %eax$/;"	l
f01025d8	obj/kern/kernel.asm	/^f01025d8:	b9 00 00 40 00       	mov    $0x400000,%ecx$/;"	l
f01025dd	obj/kern/kernel.asm	/^f01025dd:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f01025e2	obj/kern/kernel.asm	/^f01025e2:	a1 8c 5e 1e f0       	mov    0xf01e5e8c,%eax$/;"	l
f01025e7	obj/kern/kernel.asm	/^f01025e7:	e8 b4 ea ff ff       	call   f01010a0 <boot_map_region>$/;"	l
f01025ec	obj/kern/kernel.asm	/^f01025ec:	83 c4 10             	add    $0x10,%esp$/;"	l
f01025ef	obj/kern/kernel.asm	/^f01025ef:	b8 00 60 11 f0       	mov    $0xf0116000,%eax$/;"	l
f01025f4	obj/kern/kernel.asm	/^f01025f4:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01025f9	obj/kern/kernel.asm	/^f01025f9:	77 15                	ja     f0102610 <mem_init+0x136c>$/;"	l
f01025fb	obj/kern/kernel.asm	/^f01025fb:	50                   	push   %eax$/;"	l
f01025fc	obj/kern/kernel.asm	/^f01025fc:	68 a8 60 10 f0       	push   $0xf01060a8$/;"	l
f0102601	obj/kern/kernel.asm	/^f0102601:	68 e8 00 00 00       	push   $0xe8$/;"	l
f0102606	obj/kern/kernel.asm	/^f0102606:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f010260b	obj/kern/kernel.asm	/^f010260b:	e8 30 da ff ff       	call   f0100040 <_panic>$/;"	l
f0102610	obj/kern/kernel.asm	/^f0102610:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102613	obj/kern/kernel.asm	/^f0102613:	6a 02                	push   $0x2$/;"	l
f0102615	obj/kern/kernel.asm	/^f0102615:	68 00 60 11 00       	push   $0x116000$/;"	l
f010261a	obj/kern/kernel.asm	/^f010261a:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f010261f	obj/kern/kernel.asm	/^f010261f:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f0102624	obj/kern/kernel.asm	/^f0102624:	a1 8c 5e 1e f0       	mov    0xf01e5e8c,%eax$/;"	l
f0102629	obj/kern/kernel.asm	/^f0102629:	e8 72 ea ff ff       	call   f01010a0 <boot_map_region>$/;"	l
f010262e	obj/kern/kernel.asm	/^f010262e:	c7 04 24 84 6d 10 f0 	movl   $0xf0106d84,(%esp)$/;"	l
f0102635	obj/kern/kernel.asm	/^f0102635:	e8 70 10 00 00       	call   f01036aa <cprintf>$/;"	l
f010263a	obj/kern/kernel.asm	/^f010263a:	83 c4 08             	add    $0x8,%esp$/;"	l
f010263d	obj/kern/kernel.asm	/^f010263d:	6a 02                	push   $0x2$/;"	l
f010263f	obj/kern/kernel.asm	/^f010263f:	6a 00                	push   $0x0$/;"	l
f0102641	obj/kern/kernel.asm	/^f0102641:	b9 ff ff ff 0f       	mov    $0xfffffff,%ecx$/;"	l
f0102646	obj/kern/kernel.asm	/^f0102646:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f010264b	obj/kern/kernel.asm	/^f010264b:	a1 8c 5e 1e f0       	mov    0xf01e5e8c,%eax$/;"	l
f0102650	obj/kern/kernel.asm	/^f0102650:	e8 4b ea ff ff       	call   f01010a0 <boot_map_region>$/;"	l
f0102655	obj/kern/kernel.asm	/^f0102655:	c7 04 24 a8 6d 10 f0 	movl   $0xf0106da8,(%esp)$/;"	l
f010265c	obj/kern/kernel.asm	/^f010265c:	e8 49 10 00 00       	call   f01036aa <cprintf>$/;"	l
f0102661	obj/kern/kernel.asm	/^f0102661:	c7 45 c4 00 70 1e f0 	movl   $0xf01e7000,-0x3c(%ebp)$/;"	l
f0102668	obj/kern/kernel.asm	/^f0102668:	83 c4 10             	add    $0x10,%esp$/;"	l
f010266b	obj/kern/kernel.asm	/^f010266b:	bb 00 70 1e f0       	mov    $0xf01e7000,%ebx$/;"	l
f0102670	obj/kern/kernel.asm	/^f0102670:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f0102675	obj/kern/kernel.asm	/^f0102675:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f010267b	obj/kern/kernel.asm	/^f010267b:	77 15                	ja     f0102692 <mem_init+0x13ee>$/;"	l
f010267d	obj/kern/kernel.asm	/^f010267d:	53                   	push   %ebx$/;"	l
f010267e	obj/kern/kernel.asm	/^f010267e:	68 a8 60 10 f0       	push   $0xf01060a8$/;"	l
f0102683	obj/kern/kernel.asm	/^f0102683:	68 2b 01 00 00       	push   $0x12b$/;"	l
f0102688	obj/kern/kernel.asm	/^f0102688:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f010268d	obj/kern/kernel.asm	/^f010268d:	e8 ae d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102692	obj/kern/kernel.asm	/^f0102692:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102695	obj/kern/kernel.asm	/^f0102695:	6a 03                	push   $0x3$/;"	l
f0102697	obj/kern/kernel.asm	/^f0102697:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f010269d	obj/kern/kernel.asm	/^f010269d:	50                   	push   %eax$/;"	l
f010269e	obj/kern/kernel.asm	/^f010269e:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f01026a3	obj/kern/kernel.asm	/^f01026a3:	89 f2                	mov    %esi,%edx$/;"	l
f01026a5	obj/kern/kernel.asm	/^f01026a5:	a1 8c 5e 1e f0       	mov    0xf01e5e8c,%eax$/;"	l
f01026aa	obj/kern/kernel.asm	/^f01026aa:	e8 f1 e9 ff ff       	call   f01010a0 <boot_map_region>$/;"	l
f01026af	obj/kern/kernel.asm	/^f01026af:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f01026b5	obj/kern/kernel.asm	/^f01026b5:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f01026bb	obj/kern/kernel.asm	/^f01026bb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01026be	obj/kern/kernel.asm	/^f01026be:	b8 00 70 22 f0       	mov    $0xf0227000,%eax$/;"	l
f01026c3	obj/kern/kernel.asm	/^f01026c3:	39 d8                	cmp    %ebx,%eax$/;"	l
f01026c5	obj/kern/kernel.asm	/^f01026c5:	75 ae                	jne    f0102675 <mem_init+0x13d1>$/;"	l
f01026c7	obj/kern/kernel.asm	/^f01026c7:	8b 3d 8c 5e 1e f0    	mov    0xf01e5e8c,%edi$/;"	l
f01026cd	obj/kern/kernel.asm	/^f01026cd:	a1 88 5e 1e f0       	mov    0xf01e5e88,%eax$/;"	l
f01026d2	obj/kern/kernel.asm	/^f01026d2:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01026d5	obj/kern/kernel.asm	/^f01026d5:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f01026dc	obj/kern/kernel.asm	/^f01026dc:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01026e1	obj/kern/kernel.asm	/^f01026e1:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01026e4	obj/kern/kernel.asm	/^f01026e4:	8b 35 90 5e 1e f0    	mov    0xf01e5e90,%esi$/;"	l
f01026ea	obj/kern/kernel.asm	/^f01026ea:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f01026ed	obj/kern/kernel.asm	/^f01026ed:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01026f2	obj/kern/kernel.asm	/^f01026f2:	eb 55                	jmp    f0102749 <mem_init+0x14a5>$/;"	l
f01026f4	obj/kern/kernel.asm	/^f01026f4:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f01026fa	obj/kern/kernel.asm	/^f01026fa:	89 f8                	mov    %edi,%eax$/;"	l
f01026fc	obj/kern/kernel.asm	/^f01026fc:	e8 fc e3 ff ff       	call   f0100afd <check_va2pa>$/;"	l
f0102701	obj/kern/kernel.asm	/^f0102701:	81 7d d0 ff ff ff ef 	cmpl   $0xefffffff,-0x30(%ebp)$/;"	l
f0102708	obj/kern/kernel.asm	/^f0102708:	77 15                	ja     f010271f <mem_init+0x147b>$/;"	l
f010270a	obj/kern/kernel.asm	/^f010270a:	56                   	push   %esi$/;"	l
f010270b	obj/kern/kernel.asm	/^f010270b:	68 a8 60 10 f0       	push   $0xf01060a8$/;"	l
f0102710	obj/kern/kernel.asm	/^f0102710:	68 7b 03 00 00       	push   $0x37b$/;"	l
f0102715	obj/kern/kernel.asm	/^f0102715:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f010271a	obj/kern/kernel.asm	/^f010271a:	e8 21 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010271f	obj/kern/kernel.asm	/^f010271f:	8d 94 1e 00 00 00 10 	lea    0x10000000(%esi,%ebx,1),%edx$/;"	l
f0102726	obj/kern/kernel.asm	/^f0102726:	39 c2                	cmp    %eax,%edx$/;"	l
f0102728	obj/kern/kernel.asm	/^f0102728:	74 19                	je     f0102743 <mem_init+0x149f>$/;"	l
f010272a	obj/kern/kernel.asm	/^f010272a:	68 cc 6d 10 f0       	push   $0xf0106dcc$/;"	l
f010272f	obj/kern/kernel.asm	/^f010272f:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102734	obj/kern/kernel.asm	/^f0102734:	68 7b 03 00 00       	push   $0x37b$/;"	l
f0102739	obj/kern/kernel.asm	/^f0102739:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f010273e	obj/kern/kernel.asm	/^f010273e:	e8 fd d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102743	obj/kern/kernel.asm	/^f0102743:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102749	obj/kern/kernel.asm	/^f0102749:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f010274c	obj/kern/kernel.asm	/^f010274c:	77 a6                	ja     f01026f4 <mem_init+0x1450>$/;"	l
f010274e	obj/kern/kernel.asm	/^f010274e:	8b 35 48 52 1e f0    	mov    0xf01e5248,%esi$/;"	l
f0102754	obj/kern/kernel.asm	/^f0102754:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0102757	obj/kern/kernel.asm	/^f0102757:	bb 00 00 c0 ee       	mov    $0xeec00000,%ebx$/;"	l
f010275c	obj/kern/kernel.asm	/^f010275c:	89 da                	mov    %ebx,%edx$/;"	l
f010275e	obj/kern/kernel.asm	/^f010275e:	89 f8                	mov    %edi,%eax$/;"	l
f0102760	obj/kern/kernel.asm	/^f0102760:	e8 98 e3 ff ff       	call   f0100afd <check_va2pa>$/;"	l
f0102765	obj/kern/kernel.asm	/^f0102765:	81 7d d4 ff ff ff ef 	cmpl   $0xefffffff,-0x2c(%ebp)$/;"	l
f010276c	obj/kern/kernel.asm	/^f010276c:	77 15                	ja     f0102783 <mem_init+0x14df>$/;"	l
f010276e	obj/kern/kernel.asm	/^f010276e:	56                   	push   %esi$/;"	l
f010276f	obj/kern/kernel.asm	/^f010276f:	68 a8 60 10 f0       	push   $0xf01060a8$/;"	l
f0102774	obj/kern/kernel.asm	/^f0102774:	68 80 03 00 00       	push   $0x380$/;"	l
f0102779	obj/kern/kernel.asm	/^f0102779:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f010277e	obj/kern/kernel.asm	/^f010277e:	e8 bd d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102783	obj/kern/kernel.asm	/^f0102783:	8d 94 1e 00 00 40 21 	lea    0x21400000(%esi,%ebx,1),%edx$/;"	l
f010278a	obj/kern/kernel.asm	/^f010278a:	39 d0                	cmp    %edx,%eax$/;"	l
f010278c	obj/kern/kernel.asm	/^f010278c:	74 19                	je     f01027a7 <mem_init+0x1503>$/;"	l
f010278e	obj/kern/kernel.asm	/^f010278e:	68 00 6e 10 f0       	push   $0xf0106e00$/;"	l
f0102793	obj/kern/kernel.asm	/^f0102793:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102798	obj/kern/kernel.asm	/^f0102798:	68 80 03 00 00       	push   $0x380$/;"	l
f010279d	obj/kern/kernel.asm	/^f010279d:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01027a2	obj/kern/kernel.asm	/^f01027a2:	e8 99 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027a7	obj/kern/kernel.asm	/^f01027a7:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01027ad	obj/kern/kernel.asm	/^f01027ad:	81 fb 00 f0 c1 ee    	cmp    $0xeec1f000,%ebx$/;"	l
f01027b3	obj/kern/kernel.asm	/^f01027b3:	75 a7                	jne    f010275c <mem_init+0x14b8>$/;"	l
f01027b5	obj/kern/kernel.asm	/^f01027b5:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f01027b8	obj/kern/kernel.asm	/^f01027b8:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f01027bb	obj/kern/kernel.asm	/^f01027bb:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01027c0	obj/kern/kernel.asm	/^f01027c0:	eb 30                	jmp    f01027f2 <mem_init+0x154e>$/;"	l
f01027c2	obj/kern/kernel.asm	/^f01027c2:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f01027c8	obj/kern/kernel.asm	/^f01027c8:	89 f8                	mov    %edi,%eax$/;"	l
f01027ca	obj/kern/kernel.asm	/^f01027ca:	e8 2e e3 ff ff       	call   f0100afd <check_va2pa>$/;"	l
f01027cf	obj/kern/kernel.asm	/^f01027cf:	39 c3                	cmp    %eax,%ebx$/;"	l
f01027d1	obj/kern/kernel.asm	/^f01027d1:	74 19                	je     f01027ec <mem_init+0x1548>$/;"	l
f01027d3	obj/kern/kernel.asm	/^f01027d3:	68 34 6e 10 f0       	push   $0xf0106e34$/;"	l
f01027d8	obj/kern/kernel.asm	/^f01027d8:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f01027dd	obj/kern/kernel.asm	/^f01027dd:	68 84 03 00 00       	push   $0x384$/;"	l
f01027e2	obj/kern/kernel.asm	/^f01027e2:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01027e7	obj/kern/kernel.asm	/^f01027e7:	e8 54 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027ec	obj/kern/kernel.asm	/^f01027ec:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01027f2	obj/kern/kernel.asm	/^f01027f2:	39 f3                	cmp    %esi,%ebx$/;"	l
f01027f4	obj/kern/kernel.asm	/^f01027f4:	72 cc                	jb     f01027c2 <mem_init+0x151e>$/;"	l
f01027f6	obj/kern/kernel.asm	/^f01027f6:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f01027fb	obj/kern/kernel.asm	/^f01027fb:	89 75 cc             	mov    %esi,-0x34(%ebp)$/;"	l
f01027fe	obj/kern/kernel.asm	/^f01027fe:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0102801	obj/kern/kernel.asm	/^f0102801:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0102804	obj/kern/kernel.asm	/^f0102804:	8d 88 00 80 00 00    	lea    0x8000(%eax),%ecx$/;"	l
f010280a	obj/kern/kernel.asm	/^f010280a:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f010280d	obj/kern/kernel.asm	/^f010280d:	89 c3                	mov    %eax,%ebx$/;"	l
f010280f	obj/kern/kernel.asm	/^f010280f:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f0102812	obj/kern/kernel.asm	/^f0102812:	05 00 80 00 20       	add    $0x20008000,%eax$/;"	l
f0102817	obj/kern/kernel.asm	/^f0102817:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010281a	obj/kern/kernel.asm	/^f010281a:	89 da                	mov    %ebx,%edx$/;"	l
f010281c	obj/kern/kernel.asm	/^f010281c:	89 f8                	mov    %edi,%eax$/;"	l
f010281e	obj/kern/kernel.asm	/^f010281e:	e8 da e2 ff ff       	call   f0100afd <check_va2pa>$/;"	l
f0102823	obj/kern/kernel.asm	/^f0102823:	81 fe ff ff ff ef    	cmp    $0xefffffff,%esi$/;"	l
f0102829	obj/kern/kernel.asm	/^f0102829:	77 15                	ja     f0102840 <mem_init+0x159c>$/;"	l
f010282b	obj/kern/kernel.asm	/^f010282b:	56                   	push   %esi$/;"	l
f010282c	obj/kern/kernel.asm	/^f010282c:	68 a8 60 10 f0       	push   $0xf01060a8$/;"	l
f0102831	obj/kern/kernel.asm	/^f0102831:	68 8c 03 00 00       	push   $0x38c$/;"	l
f0102836	obj/kern/kernel.asm	/^f0102836:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f010283b	obj/kern/kernel.asm	/^f010283b:	e8 00 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102840	obj/kern/kernel.asm	/^f0102840:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0102843	obj/kern/kernel.asm	/^f0102843:	8d 94 0b 00 70 1e f0 	lea    -0xfe19000(%ebx,%ecx,1),%edx$/;"	l
f010284a	obj/kern/kernel.asm	/^f010284a:	39 d0                	cmp    %edx,%eax$/;"	l
f010284c	obj/kern/kernel.asm	/^f010284c:	74 19                	je     f0102867 <mem_init+0x15c3>$/;"	l
f010284e	obj/kern/kernel.asm	/^f010284e:	68 5c 6e 10 f0       	push   $0xf0106e5c$/;"	l
f0102853	obj/kern/kernel.asm	/^f0102853:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102858	obj/kern/kernel.asm	/^f0102858:	68 8c 03 00 00       	push   $0x38c$/;"	l
f010285d	obj/kern/kernel.asm	/^f010285d:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102862	obj/kern/kernel.asm	/^f0102862:	e8 d9 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102867	obj/kern/kernel.asm	/^f0102867:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010286d	obj/kern/kernel.asm	/^f010286d:	3b 5d d0             	cmp    -0x30(%ebp),%ebx$/;"	l
f0102870	obj/kern/kernel.asm	/^f0102870:	75 a8                	jne    f010281a <mem_init+0x1576>$/;"	l
f0102872	obj/kern/kernel.asm	/^f0102872:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0102875	obj/kern/kernel.asm	/^f0102875:	8d 98 00 80 ff ff    	lea    -0x8000(%eax),%ebx$/;"	l
f010287b	obj/kern/kernel.asm	/^f010287b:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f010287e	obj/kern/kernel.asm	/^f010287e:	89 c6                	mov    %eax,%esi$/;"	l
f0102880	obj/kern/kernel.asm	/^f0102880:	89 da                	mov    %ebx,%edx$/;"	l
f0102882	obj/kern/kernel.asm	/^f0102882:	89 f8                	mov    %edi,%eax$/;"	l
f0102884	obj/kern/kernel.asm	/^f0102884:	e8 74 e2 ff ff       	call   f0100afd <check_va2pa>$/;"	l
f0102889	obj/kern/kernel.asm	/^f0102889:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010288c	obj/kern/kernel.asm	/^f010288c:	74 19                	je     f01028a7 <mem_init+0x1603>$/;"	l
f010288e	obj/kern/kernel.asm	/^f010288e:	68 a4 6e 10 f0       	push   $0xf0106ea4$/;"	l
f0102893	obj/kern/kernel.asm	/^f0102893:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102898	obj/kern/kernel.asm	/^f0102898:	68 8e 03 00 00       	push   $0x38e$/;"	l
f010289d	obj/kern/kernel.asm	/^f010289d:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01028a2	obj/kern/kernel.asm	/^f01028a2:	e8 99 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028a7	obj/kern/kernel.asm	/^f01028a7:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01028ad	obj/kern/kernel.asm	/^f01028ad:	39 f3                	cmp    %esi,%ebx$/;"	l
f01028af	obj/kern/kernel.asm	/^f01028af:	75 cf                	jne    f0102880 <mem_init+0x15dc>$/;"	l
f01028b1	obj/kern/kernel.asm	/^f01028b1:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f01028b4	obj/kern/kernel.asm	/^f01028b4:	81 6d cc 00 00 01 00 	subl   $0x10000,-0x34(%ebp)$/;"	l
f01028bb	obj/kern/kernel.asm	/^f01028bb:	81 45 c8 00 80 01 00 	addl   $0x18000,-0x38(%ebp)$/;"	l
f01028c2	obj/kern/kernel.asm	/^f01028c2:	81 c6 00 80 00 00    	add    $0x8000,%esi$/;"	l
f01028c8	obj/kern/kernel.asm	/^f01028c8:	b8 00 70 22 f0       	mov    $0xf0227000,%eax$/;"	l
f01028cd	obj/kern/kernel.asm	/^f01028cd:	39 f0                	cmp    %esi,%eax$/;"	l
f01028cf	obj/kern/kernel.asm	/^f01028cf:	0f 85 2c ff ff ff    	jne    f0102801 <mem_init+0x155d>$/;"	l
f01028d5	obj/kern/kernel.asm	/^f01028d5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01028da	obj/kern/kernel.asm	/^f01028da:	eb 2a                	jmp    f0102906 <mem_init+0x1662>$/;"	l
f01028dc	obj/kern/kernel.asm	/^f01028dc:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f01028e2	obj/kern/kernel.asm	/^f01028e2:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f01028e5	obj/kern/kernel.asm	/^f01028e5:	77 1f                	ja     f0102906 <mem_init+0x1662>$/;"	l
f01028e7	obj/kern/kernel.asm	/^f01028e7:	f6 04 87 01          	testb  $0x1,(%edi,%eax,4)$/;"	l
f01028eb	obj/kern/kernel.asm	/^f01028eb:	75 7e                	jne    f010296b <mem_init+0x16c7>$/;"	l
f01028ed	obj/kern/kernel.asm	/^f01028ed:	68 d4 72 10 f0       	push   $0xf01072d4$/;"	l
f01028f2	obj/kern/kernel.asm	/^f01028f2:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f01028f7	obj/kern/kernel.asm	/^f01028f7:	68 99 03 00 00       	push   $0x399$/;"	l
f01028fc	obj/kern/kernel.asm	/^f01028fc:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102901	obj/kern/kernel.asm	/^f0102901:	e8 3a d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102906	obj/kern/kernel.asm	/^f0102906:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f010290b	obj/kern/kernel.asm	/^f010290b:	76 3f                	jbe    f010294c <mem_init+0x16a8>$/;"	l
f010290d	obj/kern/kernel.asm	/^f010290d:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f0102910	obj/kern/kernel.asm	/^f0102910:	f6 c2 01             	test   $0x1,%dl$/;"	l
f0102913	obj/kern/kernel.asm	/^f0102913:	75 19                	jne    f010292e <mem_init+0x168a>$/;"	l
f0102915	obj/kern/kernel.asm	/^f0102915:	68 d4 72 10 f0       	push   $0xf01072d4$/;"	l
f010291a	obj/kern/kernel.asm	/^f010291a:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f010291f	obj/kern/kernel.asm	/^f010291f:	68 9d 03 00 00       	push   $0x39d$/;"	l
f0102924	obj/kern/kernel.asm	/^f0102924:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102929	obj/kern/kernel.asm	/^f0102929:	e8 12 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010292e	obj/kern/kernel.asm	/^f010292e:	f6 c2 02             	test   $0x2,%dl$/;"	l
f0102931	obj/kern/kernel.asm	/^f0102931:	75 38                	jne    f010296b <mem_init+0x16c7>$/;"	l
f0102933	obj/kern/kernel.asm	/^f0102933:	68 e5 72 10 f0       	push   $0xf01072e5$/;"	l
f0102938	obj/kern/kernel.asm	/^f0102938:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f010293d	obj/kern/kernel.asm	/^f010293d:	68 9e 03 00 00       	push   $0x39e$/;"	l
f0102942	obj/kern/kernel.asm	/^f0102942:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102947	obj/kern/kernel.asm	/^f0102947:	e8 f4 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f010294c	obj/kern/kernel.asm	/^f010294c:	83 3c 87 00          	cmpl   $0x0,(%edi,%eax,4)$/;"	l
f0102950	obj/kern/kernel.asm	/^f0102950:	74 19                	je     f010296b <mem_init+0x16c7>$/;"	l
f0102952	obj/kern/kernel.asm	/^f0102952:	68 f6 72 10 f0       	push   $0xf01072f6$/;"	l
f0102957	obj/kern/kernel.asm	/^f0102957:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f010295c	obj/kern/kernel.asm	/^f010295c:	68 a0 03 00 00       	push   $0x3a0$/;"	l
f0102961	obj/kern/kernel.asm	/^f0102961:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102966	obj/kern/kernel.asm	/^f0102966:	e8 d5 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f010296b	obj/kern/kernel.asm	/^f010296b:	83 c0 01             	add    $0x1,%eax$/;"	l
f010296e	obj/kern/kernel.asm	/^f010296e:	3d ff 03 00 00       	cmp    $0x3ff,%eax$/;"	l
f0102973	obj/kern/kernel.asm	/^f0102973:	0f 86 63 ff ff ff    	jbe    f01028dc <mem_init+0x1638>$/;"	l
f0102979	obj/kern/kernel.asm	/^f0102979:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010297c	obj/kern/kernel.asm	/^f010297c:	68 c8 6e 10 f0       	push   $0xf0106ec8$/;"	l
f0102981	obj/kern/kernel.asm	/^f0102981:	e8 24 0d 00 00       	call   f01036aa <cprintf>$/;"	l
f0102986	obj/kern/kernel.asm	/^f0102986:	a1 8c 5e 1e f0       	mov    0xf01e5e8c,%eax$/;"	l
f010298b	obj/kern/kernel.asm	/^f010298b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010298e	obj/kern/kernel.asm	/^f010298e:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102993	obj/kern/kernel.asm	/^f0102993:	77 15                	ja     f01029aa <mem_init+0x1706>$/;"	l
f0102995	obj/kern/kernel.asm	/^f0102995:	50                   	push   %eax$/;"	l
f0102996	obj/kern/kernel.asm	/^f0102996:	68 a8 60 10 f0       	push   $0xf01060a8$/;"	l
f010299b	obj/kern/kernel.asm	/^f010299b:	68 02 01 00 00       	push   $0x102$/;"	l
f01029a0	obj/kern/kernel.asm	/^f01029a0:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01029a5	obj/kern/kernel.asm	/^f01029a5:	e8 96 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029aa	obj/kern/kernel.asm	/^f01029aa:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01029af	obj/kern/kernel.asm	/^f01029af:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01029b2	obj/kern/kernel.asm	/^f01029b2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01029b7	obj/kern/kernel.asm	/^f01029b7:	e8 a5 e1 ff ff       	call   f0100b61 <check_page_free_list>$/;"	l
f01029bc	obj/kern/kernel.asm	/^f01029bc:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01029bf	obj/kern/kernel.asm	/^f01029bf:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f01029c2	obj/kern/kernel.asm	/^f01029c2:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f01029c7	obj/kern/kernel.asm	/^f01029c7:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01029ca	obj/kern/kernel.asm	/^f01029ca:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01029cd	obj/kern/kernel.asm	/^f01029cd:	6a 00                	push   $0x0$/;"	l
f01029cf	obj/kern/kernel.asm	/^f01029cf:	e8 45 e5 ff ff       	call   f0100f19 <page_alloc>$/;"	l
f01029d4	obj/kern/kernel.asm	/^f01029d4:	89 c3                	mov    %eax,%ebx$/;"	l
f01029d6	obj/kern/kernel.asm	/^f01029d6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01029d9	obj/kern/kernel.asm	/^f01029d9:	85 c0                	test   %eax,%eax$/;"	l
f01029db	obj/kern/kernel.asm	/^f01029db:	75 19                	jne    f01029f6 <mem_init+0x1752>$/;"	l
f01029dd	obj/kern/kernel.asm	/^f01029dd:	68 e0 70 10 f0       	push   $0xf01070e0$/;"	l
f01029e2	obj/kern/kernel.asm	/^f01029e2:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f01029e7	obj/kern/kernel.asm	/^f01029e7:	68 78 04 00 00       	push   $0x478$/;"	l
f01029ec	obj/kern/kernel.asm	/^f01029ec:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f01029f1	obj/kern/kernel.asm	/^f01029f1:	e8 4a d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029f6	obj/kern/kernel.asm	/^f01029f6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01029f9	obj/kern/kernel.asm	/^f01029f9:	6a 00                	push   $0x0$/;"	l
f01029fb	obj/kern/kernel.asm	/^f01029fb:	e8 19 e5 ff ff       	call   f0100f19 <page_alloc>$/;"	l
f0102a00	obj/kern/kernel.asm	/^f0102a00:	89 c7                	mov    %eax,%edi$/;"	l
f0102a02	obj/kern/kernel.asm	/^f0102a02:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102a05	obj/kern/kernel.asm	/^f0102a05:	85 c0                	test   %eax,%eax$/;"	l
f0102a07	obj/kern/kernel.asm	/^f0102a07:	75 19                	jne    f0102a22 <mem_init+0x177e>$/;"	l
f0102a09	obj/kern/kernel.asm	/^f0102a09:	68 f6 70 10 f0       	push   $0xf01070f6$/;"	l
f0102a0e	obj/kern/kernel.asm	/^f0102a0e:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102a13	obj/kern/kernel.asm	/^f0102a13:	68 79 04 00 00       	push   $0x479$/;"	l
f0102a18	obj/kern/kernel.asm	/^f0102a18:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102a1d	obj/kern/kernel.asm	/^f0102a1d:	e8 1e d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a22	obj/kern/kernel.asm	/^f0102a22:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102a25	obj/kern/kernel.asm	/^f0102a25:	6a 00                	push   $0x0$/;"	l
f0102a27	obj/kern/kernel.asm	/^f0102a27:	e8 ed e4 ff ff       	call   f0100f19 <page_alloc>$/;"	l
f0102a2c	obj/kern/kernel.asm	/^f0102a2c:	89 c6                	mov    %eax,%esi$/;"	l
f0102a2e	obj/kern/kernel.asm	/^f0102a2e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102a31	obj/kern/kernel.asm	/^f0102a31:	85 c0                	test   %eax,%eax$/;"	l
f0102a33	obj/kern/kernel.asm	/^f0102a33:	75 19                	jne    f0102a4e <mem_init+0x17aa>$/;"	l
f0102a35	obj/kern/kernel.asm	/^f0102a35:	68 0c 71 10 f0       	push   $0xf010710c$/;"	l
f0102a3a	obj/kern/kernel.asm	/^f0102a3a:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102a3f	obj/kern/kernel.asm	/^f0102a3f:	68 7a 04 00 00       	push   $0x47a$/;"	l
f0102a44	obj/kern/kernel.asm	/^f0102a44:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102a49	obj/kern/kernel.asm	/^f0102a49:	e8 f2 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a4e	obj/kern/kernel.asm	/^f0102a4e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102a51	obj/kern/kernel.asm	/^f0102a51:	53                   	push   %ebx$/;"	l
f0102a52	obj/kern/kernel.asm	/^f0102a52:	e8 39 e5 ff ff       	call   f0100f90 <page_free>$/;"	l
f0102a57	obj/kern/kernel.asm	/^f0102a57:	89 f8                	mov    %edi,%eax$/;"	l
f0102a59	obj/kern/kernel.asm	/^f0102a59:	2b 05 90 5e 1e f0    	sub    0xf01e5e90,%eax$/;"	l
f0102a5f	obj/kern/kernel.asm	/^f0102a5f:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102a62	obj/kern/kernel.asm	/^f0102a62:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102a65	obj/kern/kernel.asm	/^f0102a65:	89 c2                	mov    %eax,%edx$/;"	l
f0102a67	obj/kern/kernel.asm	/^f0102a67:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102a6a	obj/kern/kernel.asm	/^f0102a6a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102a6d	obj/kern/kernel.asm	/^f0102a6d:	3b 15 88 5e 1e f0    	cmp    0xf01e5e88,%edx$/;"	l
f0102a73	obj/kern/kernel.asm	/^f0102a73:	72 12                	jb     f0102a87 <mem_init+0x17e3>$/;"	l
f0102a75	obj/kern/kernel.asm	/^f0102a75:	50                   	push   %eax$/;"	l
f0102a76	obj/kern/kernel.asm	/^f0102a76:	68 84 60 10 f0       	push   $0xf0106084$/;"	l
f0102a7b	obj/kern/kernel.asm	/^f0102a7b:	6a 58                	push   $0x58$/;"	l
f0102a7d	obj/kern/kernel.asm	/^f0102a7d:	68 c9 6f 10 f0       	push   $0xf0106fc9$/;"	l
f0102a82	obj/kern/kernel.asm	/^f0102a82:	e8 b9 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a87	obj/kern/kernel.asm	/^f0102a87:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102a8a	obj/kern/kernel.asm	/^f0102a8a:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102a8f	obj/kern/kernel.asm	/^f0102a8f:	6a 01                	push   $0x1$/;"	l
f0102a91	obj/kern/kernel.asm	/^f0102a91:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102a96	obj/kern/kernel.asm	/^f0102a96:	50                   	push   %eax$/;"	l
f0102a97	obj/kern/kernel.asm	/^f0102a97:	e8 15 29 00 00       	call   f01053b1 <memset>$/;"	l
f0102a9c	obj/kern/kernel.asm	/^f0102a9c:	89 f0                	mov    %esi,%eax$/;"	l
f0102a9e	obj/kern/kernel.asm	/^f0102a9e:	2b 05 90 5e 1e f0    	sub    0xf01e5e90,%eax$/;"	l
f0102aa4	obj/kern/kernel.asm	/^f0102aa4:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102aa7	obj/kern/kernel.asm	/^f0102aa7:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102aaa	obj/kern/kernel.asm	/^f0102aaa:	89 c2                	mov    %eax,%edx$/;"	l
f0102aac	obj/kern/kernel.asm	/^f0102aac:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102aaf	obj/kern/kernel.asm	/^f0102aaf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102ab2	obj/kern/kernel.asm	/^f0102ab2:	3b 15 88 5e 1e f0    	cmp    0xf01e5e88,%edx$/;"	l
f0102ab8	obj/kern/kernel.asm	/^f0102ab8:	72 12                	jb     f0102acc <mem_init+0x1828>$/;"	l
f0102aba	obj/kern/kernel.asm	/^f0102aba:	50                   	push   %eax$/;"	l
f0102abb	obj/kern/kernel.asm	/^f0102abb:	68 84 60 10 f0       	push   $0xf0106084$/;"	l
f0102ac0	obj/kern/kernel.asm	/^f0102ac0:	6a 58                	push   $0x58$/;"	l
f0102ac2	obj/kern/kernel.asm	/^f0102ac2:	68 c9 6f 10 f0       	push   $0xf0106fc9$/;"	l
f0102ac7	obj/kern/kernel.asm	/^f0102ac7:	e8 74 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102acc	obj/kern/kernel.asm	/^f0102acc:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102acf	obj/kern/kernel.asm	/^f0102acf:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102ad4	obj/kern/kernel.asm	/^f0102ad4:	6a 02                	push   $0x2$/;"	l
f0102ad6	obj/kern/kernel.asm	/^f0102ad6:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102adb	obj/kern/kernel.asm	/^f0102adb:	50                   	push   %eax$/;"	l
f0102adc	obj/kern/kernel.asm	/^f0102adc:	e8 d0 28 00 00       	call   f01053b1 <memset>$/;"	l
f0102ae1	obj/kern/kernel.asm	/^f0102ae1:	6a 02                	push   $0x2$/;"	l
f0102ae3	obj/kern/kernel.asm	/^f0102ae3:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102ae8	obj/kern/kernel.asm	/^f0102ae8:	57                   	push   %edi$/;"	l
f0102ae9	obj/kern/kernel.asm	/^f0102ae9:	ff 35 8c 5e 1e f0    	pushl  0xf01e5e8c$/;"	l
f0102aef	obj/kern/kernel.asm	/^f0102aef:	e8 e7 e6 ff ff       	call   f01011db <page_insert>$/;"	l
f0102af4	obj/kern/kernel.asm	/^f0102af4:	83 c4 20             	add    $0x20,%esp$/;"	l
f0102af7	obj/kern/kernel.asm	/^f0102af7:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0102afc	obj/kern/kernel.asm	/^f0102afc:	74 19                	je     f0102b17 <mem_init+0x1873>$/;"	l
f0102afe	obj/kern/kernel.asm	/^f0102afe:	68 dd 71 10 f0       	push   $0xf01071dd$/;"	l
f0102b03	obj/kern/kernel.asm	/^f0102b03:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102b08	obj/kern/kernel.asm	/^f0102b08:	68 7f 04 00 00       	push   $0x47f$/;"	l
f0102b0d	obj/kern/kernel.asm	/^f0102b0d:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102b12	obj/kern/kernel.asm	/^f0102b12:	e8 29 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b17	obj/kern/kernel.asm	/^f0102b17:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f0102b1e	obj/kern/kernel.asm	/^f0102b1e:	01 01 01 $/;"	l
f0102b21	obj/kern/kernel.asm	/^f0102b21:	74 19                	je     f0102b3c <mem_init+0x1898>$/;"	l
f0102b23	obj/kern/kernel.asm	/^f0102b23:	68 e8 6e 10 f0       	push   $0xf0106ee8$/;"	l
f0102b28	obj/kern/kernel.asm	/^f0102b28:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102b2d	obj/kern/kernel.asm	/^f0102b2d:	68 80 04 00 00       	push   $0x480$/;"	l
f0102b32	obj/kern/kernel.asm	/^f0102b32:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102b37	obj/kern/kernel.asm	/^f0102b37:	e8 04 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b3c	obj/kern/kernel.asm	/^f0102b3c:	6a 02                	push   $0x2$/;"	l
f0102b3e	obj/kern/kernel.asm	/^f0102b3e:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102b43	obj/kern/kernel.asm	/^f0102b43:	56                   	push   %esi$/;"	l
f0102b44	obj/kern/kernel.asm	/^f0102b44:	ff 35 8c 5e 1e f0    	pushl  0xf01e5e8c$/;"	l
f0102b4a	obj/kern/kernel.asm	/^f0102b4a:	e8 8c e6 ff ff       	call   f01011db <page_insert>$/;"	l
f0102b4f	obj/kern/kernel.asm	/^f0102b4f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102b52	obj/kern/kernel.asm	/^f0102b52:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f0102b59	obj/kern/kernel.asm	/^f0102b59:	02 02 02 $/;"	l
f0102b5c	obj/kern/kernel.asm	/^f0102b5c:	74 19                	je     f0102b77 <mem_init+0x18d3>$/;"	l
f0102b5e	obj/kern/kernel.asm	/^f0102b5e:	68 0c 6f 10 f0       	push   $0xf0106f0c$/;"	l
f0102b63	obj/kern/kernel.asm	/^f0102b63:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102b68	obj/kern/kernel.asm	/^f0102b68:	68 82 04 00 00       	push   $0x482$/;"	l
f0102b6d	obj/kern/kernel.asm	/^f0102b6d:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102b72	obj/kern/kernel.asm	/^f0102b72:	e8 c9 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b77	obj/kern/kernel.asm	/^f0102b77:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102b7c	obj/kern/kernel.asm	/^f0102b7c:	74 19                	je     f0102b97 <mem_init+0x18f3>$/;"	l
f0102b7e	obj/kern/kernel.asm	/^f0102b7e:	68 ff 71 10 f0       	push   $0xf01071ff$/;"	l
f0102b83	obj/kern/kernel.asm	/^f0102b83:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102b88	obj/kern/kernel.asm	/^f0102b88:	68 83 04 00 00       	push   $0x483$/;"	l
f0102b8d	obj/kern/kernel.asm	/^f0102b8d:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102b92	obj/kern/kernel.asm	/^f0102b92:	e8 a9 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b97	obj/kern/kernel.asm	/^f0102b97:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0102b9c	obj/kern/kernel.asm	/^f0102b9c:	74 19                	je     f0102bb7 <mem_init+0x1913>$/;"	l
f0102b9e	obj/kern/kernel.asm	/^f0102b9e:	68 69 72 10 f0       	push   $0xf0107269$/;"	l
f0102ba3	obj/kern/kernel.asm	/^f0102ba3:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102ba8	obj/kern/kernel.asm	/^f0102ba8:	68 84 04 00 00       	push   $0x484$/;"	l
f0102bad	obj/kern/kernel.asm	/^f0102bad:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102bb2	obj/kern/kernel.asm	/^f0102bb2:	e8 89 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bb7	obj/kern/kernel.asm	/^f0102bb7:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f0102bbe	obj/kern/kernel.asm	/^f0102bbe:	03 03 03 $/;"	l
f0102bc1	obj/kern/kernel.asm	/^f0102bc1:	89 f0                	mov    %esi,%eax$/;"	l
f0102bc3	obj/kern/kernel.asm	/^f0102bc3:	2b 05 90 5e 1e f0    	sub    0xf01e5e90,%eax$/;"	l
f0102bc9	obj/kern/kernel.asm	/^f0102bc9:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102bcc	obj/kern/kernel.asm	/^f0102bcc:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102bcf	obj/kern/kernel.asm	/^f0102bcf:	89 c2                	mov    %eax,%edx$/;"	l
f0102bd1	obj/kern/kernel.asm	/^f0102bd1:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102bd4	obj/kern/kernel.asm	/^f0102bd4:	3b 15 88 5e 1e f0    	cmp    0xf01e5e88,%edx$/;"	l
f0102bda	obj/kern/kernel.asm	/^f0102bda:	72 12                	jb     f0102bee <mem_init+0x194a>$/;"	l
f0102bdc	obj/kern/kernel.asm	/^f0102bdc:	50                   	push   %eax$/;"	l
f0102bdd	obj/kern/kernel.asm	/^f0102bdd:	68 84 60 10 f0       	push   $0xf0106084$/;"	l
f0102be2	obj/kern/kernel.asm	/^f0102be2:	6a 58                	push   $0x58$/;"	l
f0102be4	obj/kern/kernel.asm	/^f0102be4:	68 c9 6f 10 f0       	push   $0xf0106fc9$/;"	l
f0102be9	obj/kern/kernel.asm	/^f0102be9:	e8 52 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bee	obj/kern/kernel.asm	/^f0102bee:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f0102bf5	obj/kern/kernel.asm	/^f0102bf5:	03 03 03 $/;"	l
f0102bf8	obj/kern/kernel.asm	/^f0102bf8:	74 19                	je     f0102c13 <mem_init+0x196f>$/;"	l
f0102bfa	obj/kern/kernel.asm	/^f0102bfa:	68 30 6f 10 f0       	push   $0xf0106f30$/;"	l
f0102bff	obj/kern/kernel.asm	/^f0102bff:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102c04	obj/kern/kernel.asm	/^f0102c04:	68 86 04 00 00       	push   $0x486$/;"	l
f0102c09	obj/kern/kernel.asm	/^f0102c09:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102c0e	obj/kern/kernel.asm	/^f0102c0e:	e8 2d d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c13	obj/kern/kernel.asm	/^f0102c13:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102c16	obj/kern/kernel.asm	/^f0102c16:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102c1b	obj/kern/kernel.asm	/^f0102c1b:	ff 35 8c 5e 1e f0    	pushl  0xf01e5e8c$/;"	l
f0102c21	obj/kern/kernel.asm	/^f0102c21:	e8 68 e5 ff ff       	call   f010118e <page_remove>$/;"	l
f0102c26	obj/kern/kernel.asm	/^f0102c26:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c29	obj/kern/kernel.asm	/^f0102c29:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102c2e	obj/kern/kernel.asm	/^f0102c2e:	74 19                	je     f0102c49 <mem_init+0x19a5>$/;"	l
f0102c30	obj/kern/kernel.asm	/^f0102c30:	68 37 72 10 f0       	push   $0xf0107237$/;"	l
f0102c35	obj/kern/kernel.asm	/^f0102c35:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102c3a	obj/kern/kernel.asm	/^f0102c3a:	68 88 04 00 00       	push   $0x488$/;"	l
f0102c3f	obj/kern/kernel.asm	/^f0102c3f:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102c44	obj/kern/kernel.asm	/^f0102c44:	e8 f7 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c49	obj/kern/kernel.asm	/^f0102c49:	8b 0d 8c 5e 1e f0    	mov    0xf01e5e8c,%ecx$/;"	l
f0102c4f	obj/kern/kernel.asm	/^f0102c4f:	8b 11                	mov    (%ecx),%edx$/;"	l
f0102c51	obj/kern/kernel.asm	/^f0102c51:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102c57	obj/kern/kernel.asm	/^f0102c57:	89 d8                	mov    %ebx,%eax$/;"	l
f0102c59	obj/kern/kernel.asm	/^f0102c59:	2b 05 90 5e 1e f0    	sub    0xf01e5e90,%eax$/;"	l
f0102c5f	obj/kern/kernel.asm	/^f0102c5f:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102c62	obj/kern/kernel.asm	/^f0102c62:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102c65	obj/kern/kernel.asm	/^f0102c65:	39 c2                	cmp    %eax,%edx$/;"	l
f0102c67	obj/kern/kernel.asm	/^f0102c67:	74 19                	je     f0102c82 <mem_init+0x19de>$/;"	l
f0102c69	obj/kern/kernel.asm	/^f0102c69:	68 50 68 10 f0       	push   $0xf0106850$/;"	l
f0102c6e	obj/kern/kernel.asm	/^f0102c6e:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102c73	obj/kern/kernel.asm	/^f0102c73:	68 8b 04 00 00       	push   $0x48b$/;"	l
f0102c78	obj/kern/kernel.asm	/^f0102c78:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102c7d	obj/kern/kernel.asm	/^f0102c7d:	e8 be d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c82	obj/kern/kernel.asm	/^f0102c82:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0102c88	obj/kern/kernel.asm	/^f0102c88:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102c8d	obj/kern/kernel.asm	/^f0102c8d:	74 19                	je     f0102ca8 <mem_init+0x1a04>$/;"	l
f0102c8f	obj/kern/kernel.asm	/^f0102c8f:	68 ee 71 10 f0       	push   $0xf01071ee$/;"	l
f0102c94	obj/kern/kernel.asm	/^f0102c94:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0102c99	obj/kern/kernel.asm	/^f0102c99:	68 8d 04 00 00       	push   $0x48d$/;"	l
f0102c9e	obj/kern/kernel.asm	/^f0102c9e:	68 bd 6f 10 f0       	push   $0xf0106fbd$/;"	l
f0102ca3	obj/kern/kernel.asm	/^f0102ca3:	e8 98 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ca8	obj/kern/kernel.asm	/^f0102ca8:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0102cae	obj/kern/kernel.asm	/^f0102cae:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102cb1	obj/kern/kernel.asm	/^f0102cb1:	53                   	push   %ebx$/;"	l
f0102cb2	obj/kern/kernel.asm	/^f0102cb2:	e8 d9 e2 ff ff       	call   f0100f90 <page_free>$/;"	l
f0102cb7	obj/kern/kernel.asm	/^f0102cb7:	c7 04 24 5c 6f 10 f0 	movl   $0xf0106f5c,(%esp)$/;"	l
f0102cbe	obj/kern/kernel.asm	/^f0102cbe:	e8 e7 09 00 00       	call   f01036aa <cprintf>$/;"	l
f0102cc3	obj/kern/kernel.asm	/^f0102cc3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102cc6	obj/kern/kernel.asm	/^f0102cc6:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102cc9	obj/kern/kernel.asm	/^f0102cc9:	5b                   	pop    %ebx$/;"	l
f0102cca	obj/kern/kernel.asm	/^f0102cca:	5e                   	pop    %esi$/;"	l
f0102ccb	obj/kern/kernel.asm	/^f0102ccb:	5f                   	pop    %edi$/;"	l
f0102ccc	obj/kern/kernel.asm	/^f0102ccc:	5d                   	pop    %ebp$/;"	l
f0102ccd	obj/kern/kernel.asm	/^f0102ccd:	c3                   	ret    $/;"	l
f0102cce	obj/kern/kernel.asm	/^f0102cce <user_mem_check>:$/;"	l
f0102cce	obj/kern/kernel.asm	/^f0102cce:	55                   	push   %ebp$/;"	l
f0102ccf	obj/kern/kernel.asm	/^f0102ccf:	89 e5                	mov    %esp,%ebp$/;"	l
f0102cd1	obj/kern/kernel.asm	/^f0102cd1:	57                   	push   %edi$/;"	l
f0102cd2	obj/kern/kernel.asm	/^f0102cd2:	56                   	push   %esi$/;"	l
f0102cd3	obj/kern/kernel.asm	/^f0102cd3:	53                   	push   %ebx$/;"	l
f0102cd4	obj/kern/kernel.asm	/^f0102cd4:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0102cd7	obj/kern/kernel.asm	/^f0102cd7:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0102cda	obj/kern/kernel.asm	/^f0102cda:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0102cdd	obj/kern/kernel.asm	/^f0102cdd:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0102ce0	obj/kern/kernel.asm	/^f0102ce0:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0102ce6	obj/kern/kernel.asm	/^f0102ce6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0102ce9	obj/kern/kernel.asm	/^f0102ce9:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0102cec	obj/kern/kernel.asm	/^f0102cec:	8d 84 01 ff 0f 00 00 	lea    0xfff(%ecx,%eax,1),%eax$/;"	l
f0102cf3	obj/kern/kernel.asm	/^f0102cf3:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102cf8	obj/kern/kernel.asm	/^f0102cf8:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102cfb	obj/kern/kernel.asm	/^f0102cfb:	eb 3f                	jmp    f0102d3c <user_mem_check+0x6e>$/;"	l
f0102cfd	obj/kern/kernel.asm	/^f0102cfd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102d00	obj/kern/kernel.asm	/^f0102d00:	6a 00                	push   $0x0$/;"	l
f0102d02	obj/kern/kernel.asm	/^f0102d02:	53                   	push   %ebx$/;"	l
f0102d03	obj/kern/kernel.asm	/^f0102d03:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f0102d06	obj/kern/kernel.asm	/^f0102d06:	e8 02 e3 ff ff       	call   f010100d <pgdir_walk>$/;"	l
f0102d0b	obj/kern/kernel.asm	/^f0102d0b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d0e	obj/kern/kernel.asm	/^f0102d0e:	81 fb 00 00 80 ef    	cmp    $0xef800000,%ebx$/;"	l
f0102d14	obj/kern/kernel.asm	/^f0102d14:	77 0c                	ja     f0102d22 <user_mem_check+0x54>$/;"	l
f0102d16	obj/kern/kernel.asm	/^f0102d16:	85 c0                	test   %eax,%eax$/;"	l
f0102d18	obj/kern/kernel.asm	/^f0102d18:	74 08                	je     f0102d22 <user_mem_check+0x54>$/;"	l
f0102d1a	obj/kern/kernel.asm	/^f0102d1a:	89 f2                	mov    %esi,%edx$/;"	l
f0102d1c	obj/kern/kernel.asm	/^f0102d1c:	23 10                	and    (%eax),%edx$/;"	l
f0102d1e	obj/kern/kernel.asm	/^f0102d1e:	39 d6                	cmp    %edx,%esi$/;"	l
f0102d20	obj/kern/kernel.asm	/^f0102d20:	74 14                	je     f0102d36 <user_mem_check+0x68>$/;"	l
f0102d22	obj/kern/kernel.asm	/^f0102d22:	3b 5d 0c             	cmp    0xc(%ebp),%ebx$/;"	l
f0102d25	obj/kern/kernel.asm	/^f0102d25:	0f 42 5d 0c          	cmovb  0xc(%ebp),%ebx$/;"	l
f0102d29	obj/kern/kernel.asm	/^f0102d29:	89 1d 3c 52 1e f0    	mov    %ebx,0xf01e523c$/;"	l
f0102d2f	obj/kern/kernel.asm	/^f0102d2f:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0102d34	obj/kern/kernel.asm	/^f0102d34:	eb 10                	jmp    f0102d46 <user_mem_check+0x78>$/;"	l
f0102d36	obj/kern/kernel.asm	/^f0102d36:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102d3c	obj/kern/kernel.asm	/^f0102d3c:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f0102d3f	obj/kern/kernel.asm	/^f0102d3f:	72 bc                	jb     f0102cfd <user_mem_check+0x2f>$/;"	l
f0102d41	obj/kern/kernel.asm	/^f0102d41:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102d46	obj/kern/kernel.asm	/^f0102d46:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102d49	obj/kern/kernel.asm	/^f0102d49:	5b                   	pop    %ebx$/;"	l
f0102d4a	obj/kern/kernel.asm	/^f0102d4a:	5e                   	pop    %esi$/;"	l
f0102d4b	obj/kern/kernel.asm	/^f0102d4b:	5f                   	pop    %edi$/;"	l
f0102d4c	obj/kern/kernel.asm	/^f0102d4c:	5d                   	pop    %ebp$/;"	l
f0102d4d	obj/kern/kernel.asm	/^f0102d4d:	c3                   	ret    $/;"	l
f0102d4e	obj/kern/kernel.asm	/^f0102d4e <user_mem_assert>:$/;"	l
f0102d4e	obj/kern/kernel.asm	/^f0102d4e:	55                   	push   %ebp$/;"	l
f0102d4f	obj/kern/kernel.asm	/^f0102d4f:	89 e5                	mov    %esp,%ebp$/;"	l
f0102d51	obj/kern/kernel.asm	/^f0102d51:	53                   	push   %ebx$/;"	l
f0102d52	obj/kern/kernel.asm	/^f0102d52:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102d55	obj/kern/kernel.asm	/^f0102d55:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0102d58	obj/kern/kernel.asm	/^f0102d58:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0102d5b	obj/kern/kernel.asm	/^f0102d5b:	83 c8 04             	or     $0x4,%eax$/;"	l
f0102d5e	obj/kern/kernel.asm	/^f0102d5e:	50                   	push   %eax$/;"	l
f0102d5f	obj/kern/kernel.asm	/^f0102d5f:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0102d62	obj/kern/kernel.asm	/^f0102d62:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0102d65	obj/kern/kernel.asm	/^f0102d65:	53                   	push   %ebx$/;"	l
f0102d66	obj/kern/kernel.asm	/^f0102d66:	e8 63 ff ff ff       	call   f0102cce <user_mem_check>$/;"	l
f0102d6b	obj/kern/kernel.asm	/^f0102d6b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d6e	obj/kern/kernel.asm	/^f0102d6e:	85 c0                	test   %eax,%eax$/;"	l
f0102d70	obj/kern/kernel.asm	/^f0102d70:	79 21                	jns    f0102d93 <user_mem_assert+0x45>$/;"	l
f0102d72	obj/kern/kernel.asm	/^f0102d72:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102d75	obj/kern/kernel.asm	/^f0102d75:	ff 35 3c 52 1e f0    	pushl  0xf01e523c$/;"	l
f0102d7b	obj/kern/kernel.asm	/^f0102d7b:	ff 73 48             	pushl  0x48(%ebx)$/;"	l
f0102d7e	obj/kern/kernel.asm	/^f0102d7e:	68 88 6f 10 f0       	push   $0xf0106f88$/;"	l
f0102d83	obj/kern/kernel.asm	/^f0102d83:	e8 22 09 00 00       	call   f01036aa <cprintf>$/;"	l
f0102d88	obj/kern/kernel.asm	/^f0102d88:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102d8b	obj/kern/kernel.asm	/^f0102d8b:	e8 2a 06 00 00       	call   f01033ba <env_destroy>$/;"	l
f0102d90	obj/kern/kernel.asm	/^f0102d90:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d93	obj/kern/kernel.asm	/^f0102d93:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0102d96	obj/kern/kernel.asm	/^f0102d96:	c9                   	leave  $/;"	l
f0102d97	obj/kern/kernel.asm	/^f0102d97:	c3                   	ret    $/;"	l
f0102d98	obj/kern/kernel.asm	/^f0102d98 <region_alloc>:$/;"	l
f0102d98	obj/kern/kernel.asm	/^f0102d98:	55                   	push   %ebp$/;"	l
f0102d99	obj/kern/kernel.asm	/^f0102d99:	89 e5                	mov    %esp,%ebp$/;"	l
f0102d9b	obj/kern/kernel.asm	/^f0102d9b:	57                   	push   %edi$/;"	l
f0102d9c	obj/kern/kernel.asm	/^f0102d9c:	56                   	push   %esi$/;"	l
f0102d9d	obj/kern/kernel.asm	/^f0102d9d:	53                   	push   %ebx$/;"	l
f0102d9e	obj/kern/kernel.asm	/^f0102d9e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102da1	obj/kern/kernel.asm	/^f0102da1:	89 c7                	mov    %eax,%edi$/;"	l
f0102da3	obj/kern/kernel.asm	/^f0102da3:	89 d3                	mov    %edx,%ebx$/;"	l
f0102da5	obj/kern/kernel.asm	/^f0102da5:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0102dab	obj/kern/kernel.asm	/^f0102dab:	8d b4 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%esi$/;"	l
f0102db2	obj/kern/kernel.asm	/^f0102db2:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0102db8	obj/kern/kernel.asm	/^f0102db8:	eb 58                	jmp    f0102e12 <region_alloc+0x7a>$/;"	l
f0102dba	obj/kern/kernel.asm	/^f0102dba:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102dbd	obj/kern/kernel.asm	/^f0102dbd:	6a 00                	push   $0x0$/;"	l
f0102dbf	obj/kern/kernel.asm	/^f0102dbf:	e8 55 e1 ff ff       	call   f0100f19 <page_alloc>$/;"	l
f0102dc4	obj/kern/kernel.asm	/^f0102dc4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102dc7	obj/kern/kernel.asm	/^f0102dc7:	85 c0                	test   %eax,%eax$/;"	l
f0102dc9	obj/kern/kernel.asm	/^f0102dc9:	75 17                	jne    f0102de2 <region_alloc+0x4a>$/;"	l
f0102dcb	obj/kern/kernel.asm	/^f0102dcb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102dce	obj/kern/kernel.asm	/^f0102dce:	68 04 73 10 f0       	push   $0xf0107304$/;"	l
f0102dd3	obj/kern/kernel.asm	/^f0102dd3:	68 38 01 00 00       	push   $0x138$/;"	l
f0102dd8	obj/kern/kernel.asm	/^f0102dd8:	68 21 73 10 f0       	push   $0xf0107321$/;"	l
f0102ddd	obj/kern/kernel.asm	/^f0102ddd:	e8 5e d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102de2	obj/kern/kernel.asm	/^f0102de2:	6a 06                	push   $0x6$/;"	l
f0102de4	obj/kern/kernel.asm	/^f0102de4:	53                   	push   %ebx$/;"	l
f0102de5	obj/kern/kernel.asm	/^f0102de5:	50                   	push   %eax$/;"	l
f0102de6	obj/kern/kernel.asm	/^f0102de6:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f0102de9	obj/kern/kernel.asm	/^f0102de9:	e8 ed e3 ff ff       	call   f01011db <page_insert>$/;"	l
f0102dee	obj/kern/kernel.asm	/^f0102dee:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102df1	obj/kern/kernel.asm	/^f0102df1:	85 c0                	test   %eax,%eax$/;"	l
f0102df3	obj/kern/kernel.asm	/^f0102df3:	74 17                	je     f0102e0c <region_alloc+0x74>$/;"	l
f0102df5	obj/kern/kernel.asm	/^f0102df5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102df8	obj/kern/kernel.asm	/^f0102df8:	68 2c 73 10 f0       	push   $0xf010732c$/;"	l
f0102dfd	obj/kern/kernel.asm	/^f0102dfd:	68 3d 01 00 00       	push   $0x13d$/;"	l
f0102e02	obj/kern/kernel.asm	/^f0102e02:	68 21 73 10 f0       	push   $0xf0107321$/;"	l
f0102e07	obj/kern/kernel.asm	/^f0102e07:	e8 34 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e0c	obj/kern/kernel.asm	/^f0102e0c:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102e12	obj/kern/kernel.asm	/^f0102e12:	39 f3                	cmp    %esi,%ebx$/;"	l
f0102e14	obj/kern/kernel.asm	/^f0102e14:	72 a4                	jb     f0102dba <region_alloc+0x22>$/;"	l
f0102e16	obj/kern/kernel.asm	/^f0102e16:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102e19	obj/kern/kernel.asm	/^f0102e19:	5b                   	pop    %ebx$/;"	l
f0102e1a	obj/kern/kernel.asm	/^f0102e1a:	5e                   	pop    %esi$/;"	l
f0102e1b	obj/kern/kernel.asm	/^f0102e1b:	5f                   	pop    %edi$/;"	l
f0102e1c	obj/kern/kernel.asm	/^f0102e1c:	5d                   	pop    %ebp$/;"	l
f0102e1d	obj/kern/kernel.asm	/^f0102e1d:	c3                   	ret    $/;"	l
f0102e1e	obj/kern/kernel.asm	/^f0102e1e <envid2env>:$/;"	l
f0102e1e	obj/kern/kernel.asm	/^f0102e1e:	55                   	push   %ebp$/;"	l
f0102e1f	obj/kern/kernel.asm	/^f0102e1f:	89 e5                	mov    %esp,%ebp$/;"	l
f0102e21	obj/kern/kernel.asm	/^f0102e21:	56                   	push   %esi$/;"	l
f0102e22	obj/kern/kernel.asm	/^f0102e22:	53                   	push   %ebx$/;"	l
f0102e23	obj/kern/kernel.asm	/^f0102e23:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102e26	obj/kern/kernel.asm	/^f0102e26:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0102e29	obj/kern/kernel.asm	/^f0102e29:	85 c0                	test   %eax,%eax$/;"	l
f0102e2b	obj/kern/kernel.asm	/^f0102e2b:	75 1a                	jne    f0102e47 <envid2env+0x29>$/;"	l
f0102e2d	obj/kern/kernel.asm	/^f0102e2d:	e8 a0 2b 00 00       	call   f01059d2 <cpunum>$/;"	l
f0102e32	obj/kern/kernel.asm	/^f0102e32:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102e35	obj/kern/kernel.asm	/^f0102e35:	8b 80 28 60 1e f0    	mov    -0xfe19fd8(%eax),%eax$/;"	l
f0102e3b	obj/kern/kernel.asm	/^f0102e3b:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0102e3e	obj/kern/kernel.asm	/^f0102e3e:	89 01                	mov    %eax,(%ecx)$/;"	l
f0102e40	obj/kern/kernel.asm	/^f0102e40:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102e45	obj/kern/kernel.asm	/^f0102e45:	eb 70                	jmp    f0102eb7 <envid2env+0x99>$/;"	l
f0102e47	obj/kern/kernel.asm	/^f0102e47:	89 c3                	mov    %eax,%ebx$/;"	l
f0102e49	obj/kern/kernel.asm	/^f0102e49:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0102e4f	obj/kern/kernel.asm	/^f0102e4f:	6b db 7c             	imul   $0x7c,%ebx,%ebx$/;"	l
f0102e52	obj/kern/kernel.asm	/^f0102e52:	03 1d 48 52 1e f0    	add    0xf01e5248,%ebx$/;"	l
f0102e58	obj/kern/kernel.asm	/^f0102e58:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f0102e5c	obj/kern/kernel.asm	/^f0102e5c:	74 05                	je     f0102e63 <envid2env+0x45>$/;"	l
f0102e5e	obj/kern/kernel.asm	/^f0102e5e:	3b 43 48             	cmp    0x48(%ebx),%eax$/;"	l
f0102e61	obj/kern/kernel.asm	/^f0102e61:	74 10                	je     f0102e73 <envid2env+0x55>$/;"	l
f0102e63	obj/kern/kernel.asm	/^f0102e63:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102e66	obj/kern/kernel.asm	/^f0102e66:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102e6c	obj/kern/kernel.asm	/^f0102e6c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0102e71	obj/kern/kernel.asm	/^f0102e71:	eb 44                	jmp    f0102eb7 <envid2env+0x99>$/;"	l
f0102e73	obj/kern/kernel.asm	/^f0102e73:	84 d2                	test   %dl,%dl$/;"	l
f0102e75	obj/kern/kernel.asm	/^f0102e75:	74 36                	je     f0102ead <envid2env+0x8f>$/;"	l
f0102e77	obj/kern/kernel.asm	/^f0102e77:	e8 56 2b 00 00       	call   f01059d2 <cpunum>$/;"	l
f0102e7c	obj/kern/kernel.asm	/^f0102e7c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102e7f	obj/kern/kernel.asm	/^f0102e7f:	3b 98 28 60 1e f0    	cmp    -0xfe19fd8(%eax),%ebx$/;"	l
f0102e85	obj/kern/kernel.asm	/^f0102e85:	74 26                	je     f0102ead <envid2env+0x8f>$/;"	l
f0102e87	obj/kern/kernel.asm	/^f0102e87:	8b 73 4c             	mov    0x4c(%ebx),%esi$/;"	l
f0102e8a	obj/kern/kernel.asm	/^f0102e8a:	e8 43 2b 00 00       	call   f01059d2 <cpunum>$/;"	l
f0102e8f	obj/kern/kernel.asm	/^f0102e8f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102e92	obj/kern/kernel.asm	/^f0102e92:	8b 80 28 60 1e f0    	mov    -0xfe19fd8(%eax),%eax$/;"	l
f0102e98	obj/kern/kernel.asm	/^f0102e98:	3b 70 48             	cmp    0x48(%eax),%esi$/;"	l
f0102e9b	obj/kern/kernel.asm	/^f0102e9b:	74 10                	je     f0102ead <envid2env+0x8f>$/;"	l
f0102e9d	obj/kern/kernel.asm	/^f0102e9d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102ea0	obj/kern/kernel.asm	/^f0102ea0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102ea6	obj/kern/kernel.asm	/^f0102ea6:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0102eab	obj/kern/kernel.asm	/^f0102eab:	eb 0a                	jmp    f0102eb7 <envid2env+0x99>$/;"	l
f0102ead	obj/kern/kernel.asm	/^f0102ead:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102eb0	obj/kern/kernel.asm	/^f0102eb0:	89 18                	mov    %ebx,(%eax)$/;"	l
f0102eb2	obj/kern/kernel.asm	/^f0102eb2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102eb7	obj/kern/kernel.asm	/^f0102eb7:	5b                   	pop    %ebx$/;"	l
f0102eb8	obj/kern/kernel.asm	/^f0102eb8:	5e                   	pop    %esi$/;"	l
f0102eb9	obj/kern/kernel.asm	/^f0102eb9:	5d                   	pop    %ebp$/;"	l
f0102eba	obj/kern/kernel.asm	/^f0102eba:	c3                   	ret    $/;"	l
f0102ebb	obj/kern/kernel.asm	/^f0102ebb <env_init_percpu>:$/;"	l
f0102ebb	obj/kern/kernel.asm	/^f0102ebb:	55                   	push   %ebp$/;"	l
f0102ebc	obj/kern/kernel.asm	/^f0102ebc:	89 e5                	mov    %esp,%ebp$/;"	l
f0102ebe	obj/kern/kernel.asm	/^f0102ebe:	b8 20 03 12 f0       	mov    $0xf0120320,%eax$/;"	l
f0102ec3	obj/kern/kernel.asm	/^f0102ec3:	0f 01 10             	lgdtl  (%eax)$/;"	l
f0102ec6	obj/kern/kernel.asm	/^f0102ec6:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0102ecb	obj/kern/kernel.asm	/^f0102ecb:	8e e8                	mov    %eax,%gs$/;"	l
f0102ecd	obj/kern/kernel.asm	/^f0102ecd:	8e e0                	mov    %eax,%fs$/;"	l
f0102ecf	obj/kern/kernel.asm	/^f0102ecf:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0102ed4	obj/kern/kernel.asm	/^f0102ed4:	8e c0                	mov    %eax,%es$/;"	l
f0102ed6	obj/kern/kernel.asm	/^f0102ed6:	8e d8                	mov    %eax,%ds$/;"	l
f0102ed8	obj/kern/kernel.asm	/^f0102ed8:	8e d0                	mov    %eax,%ss$/;"	l
f0102eda	obj/kern/kernel.asm	/^f0102eda:	ea e1 2e 10 f0 08 00 	ljmp   $0x8,$0xf0102ee1$/;"	l
f0102ee1	obj/kern/kernel.asm	/^f0102ee1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102ee6	obj/kern/kernel.asm	/^f0102ee6:	0f 00 d0             	lldt   %ax$/;"	l
f0102ee9	obj/kern/kernel.asm	/^f0102ee9:	5d                   	pop    %ebp$/;"	l
f0102eea	obj/kern/kernel.asm	/^f0102eea:	c3                   	ret    $/;"	l
f0102eeb	obj/kern/kernel.asm	/^f0102eeb <env_init>:$/;"	l
f0102eeb	obj/kern/kernel.asm	/^f0102eeb:	55                   	push   %ebp$/;"	l
f0102eec	obj/kern/kernel.asm	/^f0102eec:	89 e5                	mov    %esp,%ebp$/;"	l
f0102eee	obj/kern/kernel.asm	/^f0102eee:	53                   	push   %ebx$/;"	l
f0102eef	obj/kern/kernel.asm	/^f0102eef:	8b 0d 48 52 1e f0    	mov    0xf01e5248,%ecx$/;"	l
f0102ef5	obj/kern/kernel.asm	/^f0102ef5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102efa	obj/kern/kernel.asm	/^f0102efa:	eb 17                	jmp    f0102f13 <env_init+0x28>$/;"	l
f0102efc	obj/kern/kernel.asm	/^f0102efc:	83 c0 7c             	add    $0x7c,%eax$/;"	l
f0102eff	obj/kern/kernel.asm	/^f0102eff:	81 fa ff 03 00 00    	cmp    $0x3ff,%edx$/;"	l
f0102f05	obj/kern/kernel.asm	/^f0102f05:	75 0c                	jne    f0102f13 <env_init+0x28>$/;"	l
f0102f07	obj/kern/kernel.asm	/^f0102f07:	c7 81 c8 ef 01 00 00 	movl   $0x0,0x1efc8(%ecx)$/;"	l
f0102f0e	obj/kern/kernel.asm	/^f0102f0e:	00 00 00 $/;"	l
f0102f11	obj/kern/kernel.asm	/^f0102f11:	eb 0f                	jmp    f0102f22 <env_init+0x37>$/;"	l
f0102f13	obj/kern/kernel.asm	/^f0102f13:	6b c2 7c             	imul   $0x7c,%edx,%eax$/;"	l
f0102f16	obj/kern/kernel.asm	/^f0102f16:	8d 5c 01 7c          	lea    0x7c(%ecx,%eax,1),%ebx$/;"	l
f0102f1a	obj/kern/kernel.asm	/^f0102f1a:	89 5c 01 44          	mov    %ebx,0x44(%ecx,%eax,1)$/;"	l
f0102f1e	obj/kern/kernel.asm	/^f0102f1e:	8d 44 01 48          	lea    0x48(%ecx,%eax,1),%eax$/;"	l
f0102f22	obj/kern/kernel.asm	/^f0102f22:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102f28	obj/kern/kernel.asm	/^f0102f28:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
f0102f2f	obj/kern/kernel.asm	/^f0102f2f:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0102f36	obj/kern/kernel.asm	/^f0102f36:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
f0102f3d	obj/kern/kernel.asm	/^f0102f3d:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
f0102f44	obj/kern/kernel.asm	/^f0102f44:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
f0102f4b	obj/kern/kernel.asm	/^f0102f4b:	83 c2 01             	add    $0x1,%edx$/;"	l
f0102f4e	obj/kern/kernel.asm	/^f0102f4e:	81 fa ff 03 00 00    	cmp    $0x3ff,%edx$/;"	l
f0102f54	obj/kern/kernel.asm	/^f0102f54:	7e a6                	jle    f0102efc <env_init+0x11>$/;"	l
f0102f56	obj/kern/kernel.asm	/^f0102f56:	a1 48 52 1e f0       	mov    0xf01e5248,%eax$/;"	l
f0102f5b	obj/kern/kernel.asm	/^f0102f5b:	a3 4c 52 1e f0       	mov    %eax,0xf01e524c$/;"	l
f0102f60	obj/kern/kernel.asm	/^f0102f60:	e8 56 ff ff ff       	call   f0102ebb <env_init_percpu>$/;"	l
f0102f65	obj/kern/kernel.asm	/^f0102f65:	5b                   	pop    %ebx$/;"	l
f0102f66	obj/kern/kernel.asm	/^f0102f66:	5d                   	pop    %ebp$/;"	l
f0102f67	obj/kern/kernel.asm	/^f0102f67:	c3                   	ret    $/;"	l
f0102f68	obj/kern/kernel.asm	/^f0102f68 <env_alloc>:$/;"	l
f0102f68	obj/kern/kernel.asm	/^f0102f68:	55                   	push   %ebp$/;"	l
f0102f69	obj/kern/kernel.asm	/^f0102f69:	89 e5                	mov    %esp,%ebp$/;"	l
f0102f6b	obj/kern/kernel.asm	/^f0102f6b:	53                   	push   %ebx$/;"	l
f0102f6c	obj/kern/kernel.asm	/^f0102f6c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102f6f	obj/kern/kernel.asm	/^f0102f6f:	8b 1d 4c 52 1e f0    	mov    0xf01e524c,%ebx$/;"	l
f0102f75	obj/kern/kernel.asm	/^f0102f75:	85 db                	test   %ebx,%ebx$/;"	l
f0102f77	obj/kern/kernel.asm	/^f0102f77:	0f 84 4b 01 00 00    	je     f01030c8 <env_alloc+0x160>$/;"	l
f0102f7d	obj/kern/kernel.asm	/^f0102f7d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102f80	obj/kern/kernel.asm	/^f0102f80:	6a 01                	push   $0x1$/;"	l
f0102f82	obj/kern/kernel.asm	/^f0102f82:	e8 92 df ff ff       	call   f0100f19 <page_alloc>$/;"	l
f0102f87	obj/kern/kernel.asm	/^f0102f87:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102f8a	obj/kern/kernel.asm	/^f0102f8a:	85 c0                	test   %eax,%eax$/;"	l
f0102f8c	obj/kern/kernel.asm	/^f0102f8c:	0f 84 3d 01 00 00    	je     f01030cf <env_alloc+0x167>$/;"	l
f0102f92	obj/kern/kernel.asm	/^f0102f92:	89 c2                	mov    %eax,%edx$/;"	l
f0102f94	obj/kern/kernel.asm	/^f0102f94:	2b 15 90 5e 1e f0    	sub    0xf01e5e90,%edx$/;"	l
f0102f9a	obj/kern/kernel.asm	/^f0102f9a:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102f9d	obj/kern/kernel.asm	/^f0102f9d:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102fa0	obj/kern/kernel.asm	/^f0102fa0:	89 d1                	mov    %edx,%ecx$/;"	l
f0102fa2	obj/kern/kernel.asm	/^f0102fa2:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0102fa5	obj/kern/kernel.asm	/^f0102fa5:	3b 0d 88 5e 1e f0    	cmp    0xf01e5e88,%ecx$/;"	l
f0102fab	obj/kern/kernel.asm	/^f0102fab:	72 12                	jb     f0102fbf <env_alloc+0x57>$/;"	l
f0102fad	obj/kern/kernel.asm	/^f0102fad:	52                   	push   %edx$/;"	l
f0102fae	obj/kern/kernel.asm	/^f0102fae:	68 84 60 10 f0       	push   $0xf0106084$/;"	l
f0102fb3	obj/kern/kernel.asm	/^f0102fb3:	6a 58                	push   $0x58$/;"	l
f0102fb5	obj/kern/kernel.asm	/^f0102fb5:	68 c9 6f 10 f0       	push   $0xf0106fc9$/;"	l
f0102fba	obj/kern/kernel.asm	/^f0102fba:	e8 81 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fbf	obj/kern/kernel.asm	/^f0102fbf:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f0102fc5	obj/kern/kernel.asm	/^f0102fc5:	89 53 60             	mov    %edx,0x60(%ebx)$/;"	l
f0102fc8	obj/kern/kernel.asm	/^f0102fc8:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0102fcd	obj/kern/kernel.asm	/^f0102fcd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102fd2	obj/kern/kernel.asm	/^f0102fd2:	8b 53 60             	mov    0x60(%ebx),%edx$/;"	l
f0102fd5	obj/kern/kernel.asm	/^f0102fd5:	c7 04 02 00 00 00 00 	movl   $0x0,(%edx,%eax,1)$/;"	l
f0102fdc	obj/kern/kernel.asm	/^f0102fdc:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102fdf	obj/kern/kernel.asm	/^f0102fdf:	3d ec 0e 00 00       	cmp    $0xeec,%eax$/;"	l
f0102fe4	obj/kern/kernel.asm	/^f0102fe4:	75 ec                	jne    f0102fd2 <env_alloc+0x6a>$/;"	l
f0102fe6	obj/kern/kernel.asm	/^f0102fe6:	8b 15 8c 5e 1e f0    	mov    0xf01e5e8c,%edx$/;"	l
f0102fec	obj/kern/kernel.asm	/^f0102fec:	8b 0c 02             	mov    (%edx,%eax,1),%ecx$/;"	l
f0102fef	obj/kern/kernel.asm	/^f0102fef:	8b 53 60             	mov    0x60(%ebx),%edx$/;"	l
f0102ff2	obj/kern/kernel.asm	/^f0102ff2:	89 0c 02             	mov    %ecx,(%edx,%eax,1)$/;"	l
f0102ff5	obj/kern/kernel.asm	/^f0102ff5:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102ff8	obj/kern/kernel.asm	/^f0102ff8:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0102ffd	obj/kern/kernel.asm	/^f0102ffd:	75 e7                	jne    f0102fe6 <env_alloc+0x7e>$/;"	l
f0102fff	obj/kern/kernel.asm	/^f0102fff:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0103002	obj/kern/kernel.asm	/^f0103002:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103007	obj/kern/kernel.asm	/^f0103007:	77 15                	ja     f010301e <env_alloc+0xb6>$/;"	l
f0103009	obj/kern/kernel.asm	/^f0103009:	50                   	push   %eax$/;"	l
f010300a	obj/kern/kernel.asm	/^f010300a:	68 a8 60 10 f0       	push   $0xf01060a8$/;"	l
f010300f	obj/kern/kernel.asm	/^f010300f:	68 d3 00 00 00       	push   $0xd3$/;"	l
f0103014	obj/kern/kernel.asm	/^f0103014:	68 21 73 10 f0       	push   $0xf0107321$/;"	l
f0103019	obj/kern/kernel.asm	/^f0103019:	e8 22 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f010301e	obj/kern/kernel.asm	/^f010301e:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0103024	obj/kern/kernel.asm	/^f0103024:	83 ca 05             	or     $0x5,%edx$/;"	l
f0103027	obj/kern/kernel.asm	/^f0103027:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f010302d	obj/kern/kernel.asm	/^f010302d:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0103030	obj/kern/kernel.asm	/^f0103030:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0103035	obj/kern/kernel.asm	/^f0103035:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f010303a	obj/kern/kernel.asm	/^f010303a:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010303f	obj/kern/kernel.asm	/^f010303f:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f0103042	obj/kern/kernel.asm	/^f0103042:	89 da                	mov    %ebx,%edx$/;"	l
f0103044	obj/kern/kernel.asm	/^f0103044:	2b 15 48 52 1e f0    	sub    0xf01e5248,%edx$/;"	l
f010304a	obj/kern/kernel.asm	/^f010304a:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f010304d	obj/kern/kernel.asm	/^f010304d:	69 d2 df 7b ef bd    	imul   $0xbdef7bdf,%edx,%edx$/;"	l
f0103053	obj/kern/kernel.asm	/^f0103053:	09 d0                	or     %edx,%eax$/;"	l
f0103055	obj/kern/kernel.asm	/^f0103055:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f0103058	obj/kern/kernel.asm	/^f0103058:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010305b	obj/kern/kernel.asm	/^f010305b:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f010305e	obj/kern/kernel.asm	/^f010305e:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f0103065	obj/kern/kernel.asm	/^f0103065:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f010306c	obj/kern/kernel.asm	/^f010306c:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f0103073	obj/kern/kernel.asm	/^f0103073:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103076	obj/kern/kernel.asm	/^f0103076:	6a 44                	push   $0x44$/;"	l
f0103078	obj/kern/kernel.asm	/^f0103078:	6a 00                	push   $0x0$/;"	l
f010307a	obj/kern/kernel.asm	/^f010307a:	53                   	push   %ebx$/;"	l
f010307b	obj/kern/kernel.asm	/^f010307b:	e8 31 23 00 00       	call   f01053b1 <memset>$/;"	l
f0103080	obj/kern/kernel.asm	/^f0103080:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0103086	obj/kern/kernel.asm	/^f0103086:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f010308c	obj/kern/kernel.asm	/^f010308c:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0103092	obj/kern/kernel.asm	/^f0103092:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f0103099	obj/kern/kernel.asm	/^f0103099:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f010309f	obj/kern/kernel.asm	/^f010309f:	81 4b 38 00 02 00 00 	orl    $0x200,0x38(%ebx)$/;"	l
f01030a6	obj/kern/kernel.asm	/^f01030a6:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f01030ad	obj/kern/kernel.asm	/^f01030ad:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f01030b1	obj/kern/kernel.asm	/^f01030b1:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f01030b4	obj/kern/kernel.asm	/^f01030b4:	a3 4c 52 1e f0       	mov    %eax,0xf01e524c$/;"	l
f01030b9	obj/kern/kernel.asm	/^f01030b9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01030bc	obj/kern/kernel.asm	/^f01030bc:	89 18                	mov    %ebx,(%eax)$/;"	l
f01030be	obj/kern/kernel.asm	/^f01030be:	83 c4 10             	add    $0x10,%esp$/;"	l
f01030c1	obj/kern/kernel.asm	/^f01030c1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01030c6	obj/kern/kernel.asm	/^f01030c6:	eb 0c                	jmp    f01030d4 <env_alloc+0x16c>$/;"	l
f01030c8	obj/kern/kernel.asm	/^f01030c8:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f01030cd	obj/kern/kernel.asm	/^f01030cd:	eb 05                	jmp    f01030d4 <env_alloc+0x16c>$/;"	l
f01030cf	obj/kern/kernel.asm	/^f01030cf:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01030d4	obj/kern/kernel.asm	/^f01030d4:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01030d7	obj/kern/kernel.asm	/^f01030d7:	c9                   	leave  $/;"	l
f01030d8	obj/kern/kernel.asm	/^f01030d8:	c3                   	ret    $/;"	l
f01030d9	obj/kern/kernel.asm	/^f01030d9 <env_create>:$/;"	l
f01030d9	obj/kern/kernel.asm	/^f01030d9:	55                   	push   %ebp$/;"	l
f01030da	obj/kern/kernel.asm	/^f01030da:	89 e5                	mov    %esp,%ebp$/;"	l
f01030dc	obj/kern/kernel.asm	/^f01030dc:	57                   	push   %edi$/;"	l
f01030dd	obj/kern/kernel.asm	/^f01030dd:	56                   	push   %esi$/;"	l
f01030de	obj/kern/kernel.asm	/^f01030de:	53                   	push   %ebx$/;"	l
f01030df	obj/kern/kernel.asm	/^f01030df:	83 ec 34             	sub    $0x34,%esp$/;"	l
f01030e2	obj/kern/kernel.asm	/^f01030e2:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01030e5	obj/kern/kernel.asm	/^f01030e5:	6a 00                	push   $0x0$/;"	l
f01030e7	obj/kern/kernel.asm	/^f01030e7:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01030ea	obj/kern/kernel.asm	/^f01030ea:	50                   	push   %eax$/;"	l
f01030eb	obj/kern/kernel.asm	/^f01030eb:	e8 78 fe ff ff       	call   f0102f68 <env_alloc>$/;"	l
f01030f0	obj/kern/kernel.asm	/^f01030f0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01030f3	obj/kern/kernel.asm	/^f01030f3:	85 c0                	test   %eax,%eax$/;"	l
f01030f5	obj/kern/kernel.asm	/^f01030f5:	74 17                	je     f010310e <env_create+0x35>$/;"	l
f01030f7	obj/kern/kernel.asm	/^f01030f7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01030fa	obj/kern/kernel.asm	/^f01030fa:	68 45 73 10 f0       	push   $0xf0107345$/;"	l
f01030ff	obj/kern/kernel.asm	/^f01030ff:	68 ab 01 00 00       	push   $0x1ab$/;"	l
f0103104	obj/kern/kernel.asm	/^f0103104:	68 21 73 10 f0       	push   $0xf0107321$/;"	l
f0103109	obj/kern/kernel.asm	/^f0103109:	e8 32 cf ff ff       	call   f0100040 <_panic>$/;"	l
f010310e	obj/kern/kernel.asm	/^f010310e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103111	obj/kern/kernel.asm	/^f0103111:	89 c1                	mov    %eax,%ecx$/;"	l
f0103113	obj/kern/kernel.asm	/^f0103113:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103116	obj/kern/kernel.asm	/^f0103116:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103119	obj/kern/kernel.asm	/^f0103119:	89 41 50             	mov    %eax,0x50(%ecx)$/;"	l
f010311c	obj/kern/kernel.asm	/^f010311c:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f0103122	obj/kern/kernel.asm	/^f0103122:	74 17                	je     f010313b <env_create+0x62>$/;"	l
f0103124	obj/kern/kernel.asm	/^f0103124:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103127	obj/kern/kernel.asm	/^f0103127:	68 84 73 10 f0       	push   $0xf0107384$/;"	l
f010312c	obj/kern/kernel.asm	/^f010312c:	68 7b 01 00 00       	push   $0x17b$/;"	l
f0103131	obj/kern/kernel.asm	/^f0103131:	68 21 73 10 f0       	push   $0xf0107321$/;"	l
f0103136	obj/kern/kernel.asm	/^f0103136:	e8 05 cf ff ff       	call   f0100040 <_panic>$/;"	l
f010313b	obj/kern/kernel.asm	/^f010313b:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f010313e	obj/kern/kernel.asm	/^f010313e:	85 c0                	test   %eax,%eax$/;"	l
f0103140	obj/kern/kernel.asm	/^f0103140:	75 17                	jne    f0103159 <env_create+0x80>$/;"	l
f0103142	obj/kern/kernel.asm	/^f0103142:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103145	obj/kern/kernel.asm	/^f0103145:	68 58 73 10 f0       	push   $0xf0107358$/;"	l
f010314a	obj/kern/kernel.asm	/^f010314a:	68 7f 01 00 00       	push   $0x17f$/;"	l
f010314f	obj/kern/kernel.asm	/^f010314f:	68 21 73 10 f0       	push   $0xf0107321$/;"	l
f0103154	obj/kern/kernel.asm	/^f0103154:	e8 e7 ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103159	obj/kern/kernel.asm	/^f0103159:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f010315c	obj/kern/kernel.asm	/^f010315c:	89 41 30             	mov    %eax,0x30(%ecx)$/;"	l
f010315f	obj/kern/kernel.asm	/^f010315f:	89 fb                	mov    %edi,%ebx$/;"	l
f0103161	obj/kern/kernel.asm	/^f0103161:	03 5f 1c             	add    0x1c(%edi),%ebx$/;"	l
f0103164	obj/kern/kernel.asm	/^f0103164:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
f0103168	obj/kern/kernel.asm	/^f0103168:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f010316b	obj/kern/kernel.asm	/^f010316b:	01 de                	add    %ebx,%esi$/;"	l
f010316d	obj/kern/kernel.asm	/^f010316d:	8b 41 60             	mov    0x60(%ecx),%eax$/;"	l
f0103170	obj/kern/kernel.asm	/^f0103170:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103175	obj/kern/kernel.asm	/^f0103175:	77 15                	ja     f010318c <env_create+0xb3>$/;"	l
f0103177	obj/kern/kernel.asm	/^f0103177:	50                   	push   %eax$/;"	l
f0103178	obj/kern/kernel.asm	/^f0103178:	68 a8 60 10 f0       	push   $0xf01060a8$/;"	l
f010317d	obj/kern/kernel.asm	/^f010317d:	68 86 01 00 00       	push   $0x186$/;"	l
f0103182	obj/kern/kernel.asm	/^f0103182:	68 21 73 10 f0       	push   $0xf0107321$/;"	l
f0103187	obj/kern/kernel.asm	/^f0103187:	e8 b4 ce ff ff       	call   f0100040 <_panic>$/;"	l
f010318c	obj/kern/kernel.asm	/^f010318c:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103191	obj/kern/kernel.asm	/^f0103191:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103194	obj/kern/kernel.asm	/^f0103194:	eb 60                	jmp    f01031f6 <env_create+0x11d>$/;"	l
f0103196	obj/kern/kernel.asm	/^f0103196:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0103199	obj/kern/kernel.asm	/^f0103199:	75 58                	jne    f01031f3 <env_create+0x11a>$/;"	l
f010319b	obj/kern/kernel.asm	/^f010319b:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f010319e	obj/kern/kernel.asm	/^f010319e:	39 4b 10             	cmp    %ecx,0x10(%ebx)$/;"	l
f01031a1	obj/kern/kernel.asm	/^f01031a1:	76 17                	jbe    f01031ba <env_create+0xe1>$/;"	l
f01031a3	obj/kern/kernel.asm	/^f01031a3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01031a6	obj/kern/kernel.asm	/^f01031a6:	68 a8 73 10 f0       	push   $0xf01073a8$/;"	l
f01031ab	obj/kern/kernel.asm	/^f01031ab:	68 8a 01 00 00       	push   $0x18a$/;"	l
f01031b0	obj/kern/kernel.asm	/^f01031b0:	68 21 73 10 f0       	push   $0xf0107321$/;"	l
f01031b5	obj/kern/kernel.asm	/^f01031b5:	e8 86 ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031ba	obj/kern/kernel.asm	/^f01031ba:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f01031bd	obj/kern/kernel.asm	/^f01031bd:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01031c0	obj/kern/kernel.asm	/^f01031c0:	e8 d3 fb ff ff       	call   f0102d98 <region_alloc>$/;"	l
f01031c5	obj/kern/kernel.asm	/^f01031c5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01031c8	obj/kern/kernel.asm	/^f01031c8:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f01031cb	obj/kern/kernel.asm	/^f01031cb:	89 f8                	mov    %edi,%eax$/;"	l
f01031cd	obj/kern/kernel.asm	/^f01031cd:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f01031d0	obj/kern/kernel.asm	/^f01031d0:	50                   	push   %eax$/;"	l
f01031d1	obj/kern/kernel.asm	/^f01031d1:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f01031d4	obj/kern/kernel.asm	/^f01031d4:	e8 25 22 00 00       	call   f01053fe <memmove>$/;"	l
f01031d9	obj/kern/kernel.asm	/^f01031d9:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f01031dc	obj/kern/kernel.asm	/^f01031dc:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01031df	obj/kern/kernel.asm	/^f01031df:	8b 53 14             	mov    0x14(%ebx),%edx$/;"	l
f01031e2	obj/kern/kernel.asm	/^f01031e2:	29 c2                	sub    %eax,%edx$/;"	l
f01031e4	obj/kern/kernel.asm	/^f01031e4:	52                   	push   %edx$/;"	l
f01031e5	obj/kern/kernel.asm	/^f01031e5:	6a 00                	push   $0x0$/;"	l
f01031e7	obj/kern/kernel.asm	/^f01031e7:	03 43 08             	add    0x8(%ebx),%eax$/;"	l
f01031ea	obj/kern/kernel.asm	/^f01031ea:	50                   	push   %eax$/;"	l
f01031eb	obj/kern/kernel.asm	/^f01031eb:	e8 c1 21 00 00       	call   f01053b1 <memset>$/;"	l
f01031f0	obj/kern/kernel.asm	/^f01031f0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01031f3	obj/kern/kernel.asm	/^f01031f3:	83 c3 20             	add    $0x20,%ebx$/;"	l
f01031f6	obj/kern/kernel.asm	/^f01031f6:	39 de                	cmp    %ebx,%esi$/;"	l
f01031f8	obj/kern/kernel.asm	/^f01031f8:	77 9c                	ja     f0103196 <env_create+0xbd>$/;"	l
f01031fa	obj/kern/kernel.asm	/^f01031fa:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f01031ff	obj/kern/kernel.asm	/^f01031ff:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f0103204	obj/kern/kernel.asm	/^f0103204:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103207	obj/kern/kernel.asm	/^f0103207:	e8 8c fb ff ff       	call   f0102d98 <region_alloc>$/;"	l
f010320c	obj/kern/kernel.asm	/^f010320c:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010320f	obj/kern/kernel.asm	/^f010320f:	5b                   	pop    %ebx$/;"	l
f0103210	obj/kern/kernel.asm	/^f0103210:	5e                   	pop    %esi$/;"	l
f0103211	obj/kern/kernel.asm	/^f0103211:	5f                   	pop    %edi$/;"	l
f0103212	obj/kern/kernel.asm	/^f0103212:	5d                   	pop    %ebp$/;"	l
f0103213	obj/kern/kernel.asm	/^f0103213:	c3                   	ret    $/;"	l
f0103214	obj/kern/kernel.asm	/^f0103214 <env_free>:$/;"	l
f0103214	obj/kern/kernel.asm	/^f0103214:	55                   	push   %ebp$/;"	l
f0103215	obj/kern/kernel.asm	/^f0103215:	89 e5                	mov    %esp,%ebp$/;"	l
f0103217	obj/kern/kernel.asm	/^f0103217:	57                   	push   %edi$/;"	l
f0103218	obj/kern/kernel.asm	/^f0103218:	56                   	push   %esi$/;"	l
f0103219	obj/kern/kernel.asm	/^f0103219:	53                   	push   %ebx$/;"	l
f010321a	obj/kern/kernel.asm	/^f010321a:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010321d	obj/kern/kernel.asm	/^f010321d:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103220	obj/kern/kernel.asm	/^f0103220:	e8 ad 27 00 00       	call   f01059d2 <cpunum>$/;"	l
f0103225	obj/kern/kernel.asm	/^f0103225:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103228	obj/kern/kernel.asm	/^f0103228:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f010322f	obj/kern/kernel.asm	/^f010322f:	39 b8 28 60 1e f0    	cmp    %edi,-0xfe19fd8(%eax)$/;"	l
f0103235	obj/kern/kernel.asm	/^f0103235:	75 30                	jne    f0103267 <env_free+0x53>$/;"	l
f0103237	obj/kern/kernel.asm	/^f0103237:	a1 8c 5e 1e f0       	mov    0xf01e5e8c,%eax$/;"	l
f010323c	obj/kern/kernel.asm	/^f010323c:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103241	obj/kern/kernel.asm	/^f0103241:	77 15                	ja     f0103258 <env_free+0x44>$/;"	l
f0103243	obj/kern/kernel.asm	/^f0103243:	50                   	push   %eax$/;"	l
f0103244	obj/kern/kernel.asm	/^f0103244:	68 a8 60 10 f0       	push   $0xf01060a8$/;"	l
f0103249	obj/kern/kernel.asm	/^f0103249:	68 c2 01 00 00       	push   $0x1c2$/;"	l
f010324e	obj/kern/kernel.asm	/^f010324e:	68 21 73 10 f0       	push   $0xf0107321$/;"	l
f0103253	obj/kern/kernel.asm	/^f0103253:	e8 e8 cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103258	obj/kern/kernel.asm	/^f0103258:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010325d	obj/kern/kernel.asm	/^f010325d:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103260	obj/kern/kernel.asm	/^f0103260:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103267	obj/kern/kernel.asm	/^f0103267:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f010326a	obj/kern/kernel.asm	/^f010326a:	89 d0                	mov    %edx,%eax$/;"	l
f010326c	obj/kern/kernel.asm	/^f010326c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010326f	obj/kern/kernel.asm	/^f010326f:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0103272	obj/kern/kernel.asm	/^f0103272:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103275	obj/kern/kernel.asm	/^f0103275:	8b 34 90             	mov    (%eax,%edx,4),%esi$/;"	l
f0103278	obj/kern/kernel.asm	/^f0103278:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f010327e	obj/kern/kernel.asm	/^f010327e:	0f 84 a8 00 00 00    	je     f010332c <env_free+0x118>$/;"	l
f0103284	obj/kern/kernel.asm	/^f0103284:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f010328a	obj/kern/kernel.asm	/^f010328a:	89 f0                	mov    %esi,%eax$/;"	l
f010328c	obj/kern/kernel.asm	/^f010328c:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010328f	obj/kern/kernel.asm	/^f010328f:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103292	obj/kern/kernel.asm	/^f0103292:	39 05 88 5e 1e f0    	cmp    %eax,0xf01e5e88$/;"	l
f0103298	obj/kern/kernel.asm	/^f0103298:	77 15                	ja     f01032af <env_free+0x9b>$/;"	l
f010329a	obj/kern/kernel.asm	/^f010329a:	56                   	push   %esi$/;"	l
f010329b	obj/kern/kernel.asm	/^f010329b:	68 84 60 10 f0       	push   $0xf0106084$/;"	l
f01032a0	obj/kern/kernel.asm	/^f01032a0:	68 d1 01 00 00       	push   $0x1d1$/;"	l
f01032a5	obj/kern/kernel.asm	/^f01032a5:	68 21 73 10 f0       	push   $0xf0107321$/;"	l
f01032aa	obj/kern/kernel.asm	/^f01032aa:	e8 91 cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032af	obj/kern/kernel.asm	/^f01032af:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01032b2	obj/kern/kernel.asm	/^f01032b2:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f01032b5	obj/kern/kernel.asm	/^f01032b5:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01032b8	obj/kern/kernel.asm	/^f01032b8:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01032bd	obj/kern/kernel.asm	/^f01032bd:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f01032c4	obj/kern/kernel.asm	/^f01032c4:	01 $/;"	l
f01032c5	obj/kern/kernel.asm	/^f01032c5:	74 17                	je     f01032de <env_free+0xca>$/;"	l
f01032c7	obj/kern/kernel.asm	/^f01032c7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01032ca	obj/kern/kernel.asm	/^f01032ca:	89 d8                	mov    %ebx,%eax$/;"	l
f01032cc	obj/kern/kernel.asm	/^f01032cc:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01032cf	obj/kern/kernel.asm	/^f01032cf:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f01032d2	obj/kern/kernel.asm	/^f01032d2:	50                   	push   %eax$/;"	l
f01032d3	obj/kern/kernel.asm	/^f01032d3:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f01032d6	obj/kern/kernel.asm	/^f01032d6:	e8 b3 de ff ff       	call   f010118e <page_remove>$/;"	l
f01032db	obj/kern/kernel.asm	/^f01032db:	83 c4 10             	add    $0x10,%esp$/;"	l
f01032de	obj/kern/kernel.asm	/^f01032de:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01032e1	obj/kern/kernel.asm	/^f01032e1:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f01032e7	obj/kern/kernel.asm	/^f01032e7:	75 d4                	jne    f01032bd <env_free+0xa9>$/;"	l
f01032e9	obj/kern/kernel.asm	/^f01032e9:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01032ec	obj/kern/kernel.asm	/^f01032ec:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01032ef	obj/kern/kernel.asm	/^f01032ef:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f01032f6	obj/kern/kernel.asm	/^f01032f6:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01032f9	obj/kern/kernel.asm	/^f01032f9:	3b 05 88 5e 1e f0    	cmp    0xf01e5e88,%eax$/;"	l
f01032ff	obj/kern/kernel.asm	/^f01032ff:	72 14                	jb     f0103315 <env_free+0x101>$/;"	l
f0103301	obj/kern/kernel.asm	/^f0103301:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103304	obj/kern/kernel.asm	/^f0103304:	68 f8 66 10 f0       	push   $0xf01066f8$/;"	l
f0103309	obj/kern/kernel.asm	/^f0103309:	6a 51                	push   $0x51$/;"	l
f010330b	obj/kern/kernel.asm	/^f010330b:	68 c9 6f 10 f0       	push   $0xf0106fc9$/;"	l
f0103310	obj/kern/kernel.asm	/^f0103310:	e8 2b cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103315	obj/kern/kernel.asm	/^f0103315:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103318	obj/kern/kernel.asm	/^f0103318:	a1 90 5e 1e f0       	mov    0xf01e5e90,%eax$/;"	l
f010331d	obj/kern/kernel.asm	/^f010331d:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0103320	obj/kern/kernel.asm	/^f0103320:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f0103323	obj/kern/kernel.asm	/^f0103323:	50                   	push   %eax$/;"	l
f0103324	obj/kern/kernel.asm	/^f0103324:	e8 bd dc ff ff       	call   f0100fe6 <page_decref>$/;"	l
f0103329	obj/kern/kernel.asm	/^f0103329:	83 c4 10             	add    $0x10,%esp$/;"	l
f010332c	obj/kern/kernel.asm	/^f010332c:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f0103330	obj/kern/kernel.asm	/^f0103330:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103333	obj/kern/kernel.asm	/^f0103333:	3d bb 03 00 00       	cmp    $0x3bb,%eax$/;"	l
f0103338	obj/kern/kernel.asm	/^f0103338:	0f 85 29 ff ff ff    	jne    f0103267 <env_free+0x53>$/;"	l
f010333e	obj/kern/kernel.asm	/^f010333e:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103341	obj/kern/kernel.asm	/^f0103341:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103346	obj/kern/kernel.asm	/^f0103346:	77 15                	ja     f010335d <env_free+0x149>$/;"	l
f0103348	obj/kern/kernel.asm	/^f0103348:	50                   	push   %eax$/;"	l
f0103349	obj/kern/kernel.asm	/^f0103349:	68 a8 60 10 f0       	push   $0xf01060a8$/;"	l
f010334e	obj/kern/kernel.asm	/^f010334e:	68 df 01 00 00       	push   $0x1df$/;"	l
f0103353	obj/kern/kernel.asm	/^f0103353:	68 21 73 10 f0       	push   $0xf0107321$/;"	l
f0103358	obj/kern/kernel.asm	/^f0103358:	e8 e3 cc ff ff       	call   f0100040 <_panic>$/;"	l
f010335d	obj/kern/kernel.asm	/^f010335d:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f0103364	obj/kern/kernel.asm	/^f0103364:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103369	obj/kern/kernel.asm	/^f0103369:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010336c	obj/kern/kernel.asm	/^f010336c:	3b 05 88 5e 1e f0    	cmp    0xf01e5e88,%eax$/;"	l
f0103372	obj/kern/kernel.asm	/^f0103372:	72 14                	jb     f0103388 <env_free+0x174>$/;"	l
f0103374	obj/kern/kernel.asm	/^f0103374:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103377	obj/kern/kernel.asm	/^f0103377:	68 f8 66 10 f0       	push   $0xf01066f8$/;"	l
f010337c	obj/kern/kernel.asm	/^f010337c:	6a 51                	push   $0x51$/;"	l
f010337e	obj/kern/kernel.asm	/^f010337e:	68 c9 6f 10 f0       	push   $0xf0106fc9$/;"	l
f0103383	obj/kern/kernel.asm	/^f0103383:	e8 b8 cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103388	obj/kern/kernel.asm	/^f0103388:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010338b	obj/kern/kernel.asm	/^f010338b:	8b 15 90 5e 1e f0    	mov    0xf01e5e90,%edx$/;"	l
f0103391	obj/kern/kernel.asm	/^f0103391:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0103394	obj/kern/kernel.asm	/^f0103394:	50                   	push   %eax$/;"	l
f0103395	obj/kern/kernel.asm	/^f0103395:	e8 4c dc ff ff       	call   f0100fe6 <page_decref>$/;"	l
f010339a	obj/kern/kernel.asm	/^f010339a:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f01033a1	obj/kern/kernel.asm	/^f01033a1:	a1 4c 52 1e f0       	mov    0xf01e524c,%eax$/;"	l
f01033a6	obj/kern/kernel.asm	/^f01033a6:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f01033a9	obj/kern/kernel.asm	/^f01033a9:	89 3d 4c 52 1e f0    	mov    %edi,0xf01e524c$/;"	l
f01033af	obj/kern/kernel.asm	/^f01033af:	83 c4 10             	add    $0x10,%esp$/;"	l
f01033b2	obj/kern/kernel.asm	/^f01033b2:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01033b5	obj/kern/kernel.asm	/^f01033b5:	5b                   	pop    %ebx$/;"	l
f01033b6	obj/kern/kernel.asm	/^f01033b6:	5e                   	pop    %esi$/;"	l
f01033b7	obj/kern/kernel.asm	/^f01033b7:	5f                   	pop    %edi$/;"	l
f01033b8	obj/kern/kernel.asm	/^f01033b8:	5d                   	pop    %ebp$/;"	l
f01033b9	obj/kern/kernel.asm	/^f01033b9:	c3                   	ret    $/;"	l
f01033ba	obj/kern/kernel.asm	/^f01033ba <env_destroy>:$/;"	l
f01033ba	obj/kern/kernel.asm	/^f01033ba:	55                   	push   %ebp$/;"	l
f01033bb	obj/kern/kernel.asm	/^f01033bb:	89 e5                	mov    %esp,%ebp$/;"	l
f01033bd	obj/kern/kernel.asm	/^f01033bd:	53                   	push   %ebx$/;"	l
f01033be	obj/kern/kernel.asm	/^f01033be:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01033c1	obj/kern/kernel.asm	/^f01033c1:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01033c4	obj/kern/kernel.asm	/^f01033c4:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f01033c8	obj/kern/kernel.asm	/^f01033c8:	75 19                	jne    f01033e3 <env_destroy+0x29>$/;"	l
f01033ca	obj/kern/kernel.asm	/^f01033ca:	e8 03 26 00 00       	call   f01059d2 <cpunum>$/;"	l
f01033cf	obj/kern/kernel.asm	/^f01033cf:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01033d2	obj/kern/kernel.asm	/^f01033d2:	3b 98 28 60 1e f0    	cmp    -0xfe19fd8(%eax),%ebx$/;"	l
f01033d8	obj/kern/kernel.asm	/^f01033d8:	74 09                	je     f01033e3 <env_destroy+0x29>$/;"	l
f01033da	obj/kern/kernel.asm	/^f01033da:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f01033e1	obj/kern/kernel.asm	/^f01033e1:	eb 33                	jmp    f0103416 <env_destroy+0x5c>$/;"	l
f01033e3	obj/kern/kernel.asm	/^f01033e3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01033e6	obj/kern/kernel.asm	/^f01033e6:	53                   	push   %ebx$/;"	l
f01033e7	obj/kern/kernel.asm	/^f01033e7:	e8 28 fe ff ff       	call   f0103214 <env_free>$/;"	l
f01033ec	obj/kern/kernel.asm	/^f01033ec:	e8 e1 25 00 00       	call   f01059d2 <cpunum>$/;"	l
f01033f1	obj/kern/kernel.asm	/^f01033f1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01033f4	obj/kern/kernel.asm	/^f01033f4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01033f7	obj/kern/kernel.asm	/^f01033f7:	3b 98 28 60 1e f0    	cmp    -0xfe19fd8(%eax),%ebx$/;"	l
f01033fd	obj/kern/kernel.asm	/^f01033fd:	75 17                	jne    f0103416 <env_destroy+0x5c>$/;"	l
f01033ff	obj/kern/kernel.asm	/^f01033ff:	e8 ce 25 00 00       	call   f01059d2 <cpunum>$/;"	l
f0103404	obj/kern/kernel.asm	/^f0103404:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103407	obj/kern/kernel.asm	/^f0103407:	c7 80 28 60 1e f0 00 	movl   $0x0,-0xfe19fd8(%eax)$/;"	l
f010340e	obj/kern/kernel.asm	/^f010340e:	00 00 00 $/;"	l
f0103411	obj/kern/kernel.asm	/^f0103411:	e8 7a 0e 00 00       	call   f0104290 <sched_yield>$/;"	l
f0103416	obj/kern/kernel.asm	/^f0103416:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103419	obj/kern/kernel.asm	/^f0103419:	c9                   	leave  $/;"	l
f010341a	obj/kern/kernel.asm	/^f010341a:	c3                   	ret    $/;"	l
f010341b	obj/kern/kernel.asm	/^f010341b <env_pop_tf>:$/;"	l
f010341b	obj/kern/kernel.asm	/^f010341b:	55                   	push   %ebp$/;"	l
f010341c	obj/kern/kernel.asm	/^f010341c:	89 e5                	mov    %esp,%ebp$/;"	l
f010341e	obj/kern/kernel.asm	/^f010341e:	53                   	push   %ebx$/;"	l
f010341f	obj/kern/kernel.asm	/^f010341f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103422	obj/kern/kernel.asm	/^f0103422:	e8 ab 25 00 00       	call   f01059d2 <cpunum>$/;"	l
f0103427	obj/kern/kernel.asm	/^f0103427:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010342a	obj/kern/kernel.asm	/^f010342a:	8b 98 28 60 1e f0    	mov    -0xfe19fd8(%eax),%ebx$/;"	l
f0103430	obj/kern/kernel.asm	/^f0103430:	e8 9d 25 00 00       	call   f01059d2 <cpunum>$/;"	l
f0103435	obj/kern/kernel.asm	/^f0103435:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0103438	obj/kern/kernel.asm	/^f0103438:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f010343b	obj/kern/kernel.asm	/^f010343b:	61                   	popa   $/;"	l
f010343c	obj/kern/kernel.asm	/^f010343c:	07                   	pop    %es$/;"	l
f010343d	obj/kern/kernel.asm	/^f010343d:	1f                   	pop    %ds$/;"	l
f010343e	obj/kern/kernel.asm	/^f010343e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103441	obj/kern/kernel.asm	/^f0103441:	cf                   	iret   $/;"	l
f0103442	obj/kern/kernel.asm	/^f0103442:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103445	obj/kern/kernel.asm	/^f0103445:	68 76 73 10 f0       	push   $0xf0107376$/;"	l
f010344a	obj/kern/kernel.asm	/^f010344a:	68 16 02 00 00       	push   $0x216$/;"	l
f010344f	obj/kern/kernel.asm	/^f010344f:	68 21 73 10 f0       	push   $0xf0107321$/;"	l
f0103454	obj/kern/kernel.asm	/^f0103454:	e8 e7 cb ff ff       	call   f0100040 <_panic>$/;"	l
f0103459	obj/kern/kernel.asm	/^f0103459 <env_run>:$/;"	l
f0103459	obj/kern/kernel.asm	/^f0103459:	55                   	push   %ebp$/;"	l
f010345a	obj/kern/kernel.asm	/^f010345a:	89 e5                	mov    %esp,%ebp$/;"	l
f010345c	obj/kern/kernel.asm	/^f010345c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010345f	obj/kern/kernel.asm	/^f010345f:	e8 6e 25 00 00       	call   f01059d2 <cpunum>$/;"	l
f0103464	obj/kern/kernel.asm	/^f0103464:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103467	obj/kern/kernel.asm	/^f0103467:	83 b8 28 60 1e f0 00 	cmpl   $0x0,-0xfe19fd8(%eax)$/;"	l
f010346e	obj/kern/kernel.asm	/^f010346e:	74 29                	je     f0103499 <env_run+0x40>$/;"	l
f0103470	obj/kern/kernel.asm	/^f0103470:	e8 5d 25 00 00       	call   f01059d2 <cpunum>$/;"	l
f0103475	obj/kern/kernel.asm	/^f0103475:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103478	obj/kern/kernel.asm	/^f0103478:	8b 80 28 60 1e f0    	mov    -0xfe19fd8(%eax),%eax$/;"	l
f010347e	obj/kern/kernel.asm	/^f010347e:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103482	obj/kern/kernel.asm	/^f0103482:	75 15                	jne    f0103499 <env_run+0x40>$/;"	l
f0103484	obj/kern/kernel.asm	/^f0103484:	e8 49 25 00 00       	call   f01059d2 <cpunum>$/;"	l
f0103489	obj/kern/kernel.asm	/^f0103489:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010348c	obj/kern/kernel.asm	/^f010348c:	8b 80 28 60 1e f0    	mov    -0xfe19fd8(%eax),%eax$/;"	l
f0103492	obj/kern/kernel.asm	/^f0103492:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0103499	obj/kern/kernel.asm	/^f0103499:	e8 34 25 00 00       	call   f01059d2 <cpunum>$/;"	l
f010349e	obj/kern/kernel.asm	/^f010349e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01034a1	obj/kern/kernel.asm	/^f01034a1:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01034a4	obj/kern/kernel.asm	/^f01034a4:	89 90 28 60 1e f0    	mov    %edx,-0xfe19fd8(%eax)$/;"	l
f01034aa	obj/kern/kernel.asm	/^f01034aa:	e8 23 25 00 00       	call   f01059d2 <cpunum>$/;"	l
f01034af	obj/kern/kernel.asm	/^f01034af:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01034b2	obj/kern/kernel.asm	/^f01034b2:	8b 80 28 60 1e f0    	mov    -0xfe19fd8(%eax),%eax$/;"	l
f01034b8	obj/kern/kernel.asm	/^f01034b8:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f01034bf	obj/kern/kernel.asm	/^f01034bf:	e8 0e 25 00 00       	call   f01059d2 <cpunum>$/;"	l
f01034c4	obj/kern/kernel.asm	/^f01034c4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01034c7	obj/kern/kernel.asm	/^f01034c7:	8b 80 28 60 1e f0    	mov    -0xfe19fd8(%eax),%eax$/;"	l
f01034cd	obj/kern/kernel.asm	/^f01034cd:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f01034d1	obj/kern/kernel.asm	/^f01034d1:	e8 fc 24 00 00       	call   f01059d2 <cpunum>$/;"	l
f01034d6	obj/kern/kernel.asm	/^f01034d6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01034d9	obj/kern/kernel.asm	/^f01034d9:	8b 80 28 60 1e f0    	mov    -0xfe19fd8(%eax),%eax$/;"	l
f01034df	obj/kern/kernel.asm	/^f01034df:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01034e2	obj/kern/kernel.asm	/^f01034e2:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01034e7	obj/kern/kernel.asm	/^f01034e7:	77 15                	ja     f01034fe <env_run+0xa5>$/;"	l
f01034e9	obj/kern/kernel.asm	/^f01034e9:	50                   	push   %eax$/;"	l
f01034ea	obj/kern/kernel.asm	/^f01034ea:	68 a8 60 10 f0       	push   $0xf01060a8$/;"	l
f01034ef	obj/kern/kernel.asm	/^f01034ef:	68 3b 02 00 00       	push   $0x23b$/;"	l
f01034f4	obj/kern/kernel.asm	/^f01034f4:	68 21 73 10 f0       	push   $0xf0107321$/;"	l
f01034f9	obj/kern/kernel.asm	/^f01034f9:	e8 42 cb ff ff       	call   f0100040 <_panic>$/;"	l
f01034fe	obj/kern/kernel.asm	/^f01034fe:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103503	obj/kern/kernel.asm	/^f0103503:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103506	obj/kern/kernel.asm	/^f0103506:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103509	obj/kern/kernel.asm	/^f0103509:	68 c0 03 12 f0       	push   $0xf01203c0$/;"	l
f010350e	obj/kern/kernel.asm	/^f010350e:	e8 ca 27 00 00       	call   f0105cdd <spin_unlock>$/;"	l
f0103513	obj/kern/kernel.asm	/^f0103513:	f3 90                	pause  $/;"	l
f0103515	obj/kern/kernel.asm	/^f0103515:	e8 b8 24 00 00       	call   f01059d2 <cpunum>$/;"	l
f010351a	obj/kern/kernel.asm	/^f010351a:	83 c4 04             	add    $0x4,%esp$/;"	l
f010351d	obj/kern/kernel.asm	/^f010351d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103520	obj/kern/kernel.asm	/^f0103520:	ff b0 28 60 1e f0    	pushl  -0xfe19fd8(%eax)$/;"	l
f0103526	obj/kern/kernel.asm	/^f0103526:	e8 f0 fe ff ff       	call   f010341b <env_pop_tf>$/;"	l
f010352b	obj/kern/kernel.asm	/^f010352b <mc146818_read>:$/;"	l
f010352b	obj/kern/kernel.asm	/^f010352b:	55                   	push   %ebp$/;"	l
f010352c	obj/kern/kernel.asm	/^f010352c:	89 e5                	mov    %esp,%ebp$/;"	l
f010352e	obj/kern/kernel.asm	/^f010352e:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103533	obj/kern/kernel.asm	/^f0103533:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103536	obj/kern/kernel.asm	/^f0103536:	ee                   	out    %al,(%dx)$/;"	l
f0103537	obj/kern/kernel.asm	/^f0103537:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f010353c	obj/kern/kernel.asm	/^f010353c:	ec                   	in     (%dx),%al$/;"	l
f010353d	obj/kern/kernel.asm	/^f010353d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103540	obj/kern/kernel.asm	/^f0103540:	5d                   	pop    %ebp$/;"	l
f0103541	obj/kern/kernel.asm	/^f0103541:	c3                   	ret    $/;"	l
f0103542	obj/kern/kernel.asm	/^f0103542 <mc146818_write>:$/;"	l
f0103542	obj/kern/kernel.asm	/^f0103542:	55                   	push   %ebp$/;"	l
f0103543	obj/kern/kernel.asm	/^f0103543:	89 e5                	mov    %esp,%ebp$/;"	l
f0103545	obj/kern/kernel.asm	/^f0103545:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f010354a	obj/kern/kernel.asm	/^f010354a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010354d	obj/kern/kernel.asm	/^f010354d:	ee                   	out    %al,(%dx)$/;"	l
f010354e	obj/kern/kernel.asm	/^f010354e:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0103553	obj/kern/kernel.asm	/^f0103553:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103556	obj/kern/kernel.asm	/^f0103556:	ee                   	out    %al,(%dx)$/;"	l
f0103557	obj/kern/kernel.asm	/^f0103557:	5d                   	pop    %ebp$/;"	l
f0103558	obj/kern/kernel.asm	/^f0103558:	c3                   	ret    $/;"	l
f0103559	obj/kern/kernel.asm	/^f0103559 <irq_setmask_8259A>:$/;"	l
f0103559	obj/kern/kernel.asm	/^f0103559:	55                   	push   %ebp$/;"	l
f010355a	obj/kern/kernel.asm	/^f010355a:	89 e5                	mov    %esp,%ebp$/;"	l
f010355c	obj/kern/kernel.asm	/^f010355c:	56                   	push   %esi$/;"	l
f010355d	obj/kern/kernel.asm	/^f010355d:	53                   	push   %ebx$/;"	l
f010355e	obj/kern/kernel.asm	/^f010355e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103561	obj/kern/kernel.asm	/^f0103561:	66 a3 a8 03 12 f0    	mov    %ax,0xf01203a8$/;"	l
f0103567	obj/kern/kernel.asm	/^f0103567:	80 3d 50 52 1e f0 00 	cmpb   $0x0,0xf01e5250$/;"	l
f010356e	obj/kern/kernel.asm	/^f010356e:	74 5a                	je     f01035ca <irq_setmask_8259A+0x71>$/;"	l
f0103570	obj/kern/kernel.asm	/^f0103570:	89 c6                	mov    %eax,%esi$/;"	l
f0103572	obj/kern/kernel.asm	/^f0103572:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103577	obj/kern/kernel.asm	/^f0103577:	ee                   	out    %al,(%dx)$/;"	l
f0103578	obj/kern/kernel.asm	/^f0103578:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f010357c	obj/kern/kernel.asm	/^f010357c:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0103581	obj/kern/kernel.asm	/^f0103581:	ee                   	out    %al,(%dx)$/;"	l
f0103582	obj/kern/kernel.asm	/^f0103582:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103585	obj/kern/kernel.asm	/^f0103585:	68 c8 73 10 f0       	push   $0xf01073c8$/;"	l
f010358a	obj/kern/kernel.asm	/^f010358a:	e8 1b 01 00 00       	call   f01036aa <cprintf>$/;"	l
f010358f	obj/kern/kernel.asm	/^f010358f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103592	obj/kern/kernel.asm	/^f0103592:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103597	obj/kern/kernel.asm	/^f0103597:	0f b7 f6             	movzwl %si,%esi$/;"	l
f010359a	obj/kern/kernel.asm	/^f010359a:	f7 d6                	not    %esi$/;"	l
f010359c	obj/kern/kernel.asm	/^f010359c:	0f a3 de             	bt     %ebx,%esi$/;"	l
f010359f	obj/kern/kernel.asm	/^f010359f:	73 11                	jae    f01035b2 <irq_setmask_8259A+0x59>$/;"	l
f01035a1	obj/kern/kernel.asm	/^f01035a1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01035a4	obj/kern/kernel.asm	/^f01035a4:	53                   	push   %ebx$/;"	l
f01035a5	obj/kern/kernel.asm	/^f01035a5:	68 6b 78 10 f0       	push   $0xf010786b$/;"	l
f01035aa	obj/kern/kernel.asm	/^f01035aa:	e8 fb 00 00 00       	call   f01036aa <cprintf>$/;"	l
f01035af	obj/kern/kernel.asm	/^f01035af:	83 c4 10             	add    $0x10,%esp$/;"	l
f01035b2	obj/kern/kernel.asm	/^f01035b2:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01035b5	obj/kern/kernel.asm	/^f01035b5:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f01035b8	obj/kern/kernel.asm	/^f01035b8:	75 e2                	jne    f010359c <irq_setmask_8259A+0x43>$/;"	l
f01035ba	obj/kern/kernel.asm	/^f01035ba:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01035bd	obj/kern/kernel.asm	/^f01035bd:	68 d2 72 10 f0       	push   $0xf01072d2$/;"	l
f01035c2	obj/kern/kernel.asm	/^f01035c2:	e8 e3 00 00 00       	call   f01036aa <cprintf>$/;"	l
f01035c7	obj/kern/kernel.asm	/^f01035c7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01035ca	obj/kern/kernel.asm	/^f01035ca:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01035cd	obj/kern/kernel.asm	/^f01035cd:	5b                   	pop    %ebx$/;"	l
f01035ce	obj/kern/kernel.asm	/^f01035ce:	5e                   	pop    %esi$/;"	l
f01035cf	obj/kern/kernel.asm	/^f01035cf:	5d                   	pop    %ebp$/;"	l
f01035d0	obj/kern/kernel.asm	/^f01035d0:	c3                   	ret    $/;"	l
f01035d1	obj/kern/kernel.asm	/^f01035d1 <pic_init>:$/;"	l
f01035d1	obj/kern/kernel.asm	/^f01035d1:	c6 05 50 52 1e f0 01 	movb   $0x1,0xf01e5250$/;"	l
f01035d8	obj/kern/kernel.asm	/^f01035d8:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f01035dd	obj/kern/kernel.asm	/^f01035dd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01035e2	obj/kern/kernel.asm	/^f01035e2:	ee                   	out    %al,(%dx)$/;"	l
f01035e3	obj/kern/kernel.asm	/^f01035e3:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f01035e8	obj/kern/kernel.asm	/^f01035e8:	ee                   	out    %al,(%dx)$/;"	l
f01035e9	obj/kern/kernel.asm	/^f01035e9:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f01035ee	obj/kern/kernel.asm	/^f01035ee:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f01035f3	obj/kern/kernel.asm	/^f01035f3:	ee                   	out    %al,(%dx)$/;"	l
f01035f4	obj/kern/kernel.asm	/^f01035f4:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f01035f9	obj/kern/kernel.asm	/^f01035f9:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01035fe	obj/kern/kernel.asm	/^f01035fe:	ee                   	out    %al,(%dx)$/;"	l
f01035ff	obj/kern/kernel.asm	/^f01035ff:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f0103604	obj/kern/kernel.asm	/^f0103604:	ee                   	out    %al,(%dx)$/;"	l
f0103605	obj/kern/kernel.asm	/^f0103605:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f010360a	obj/kern/kernel.asm	/^f010360a:	ee                   	out    %al,(%dx)$/;"	l
f010360b	obj/kern/kernel.asm	/^f010360b:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f0103610	obj/kern/kernel.asm	/^f0103610:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103615	obj/kern/kernel.asm	/^f0103615:	ee                   	out    %al,(%dx)$/;"	l
f0103616	obj/kern/kernel.asm	/^f0103616:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f010361b	obj/kern/kernel.asm	/^f010361b:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0103620	obj/kern/kernel.asm	/^f0103620:	ee                   	out    %al,(%dx)$/;"	l
f0103621	obj/kern/kernel.asm	/^f0103621:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0103626	obj/kern/kernel.asm	/^f0103626:	ee                   	out    %al,(%dx)$/;"	l
f0103627	obj/kern/kernel.asm	/^f0103627:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010362c	obj/kern/kernel.asm	/^f010362c:	ee                   	out    %al,(%dx)$/;"	l
f010362d	obj/kern/kernel.asm	/^f010362d:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0103632	obj/kern/kernel.asm	/^f0103632:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103637	obj/kern/kernel.asm	/^f0103637:	ee                   	out    %al,(%dx)$/;"	l
f0103638	obj/kern/kernel.asm	/^f0103638:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010363d	obj/kern/kernel.asm	/^f010363d:	ee                   	out    %al,(%dx)$/;"	l
f010363e	obj/kern/kernel.asm	/^f010363e:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f0103643	obj/kern/kernel.asm	/^f0103643:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103648	obj/kern/kernel.asm	/^f0103648:	ee                   	out    %al,(%dx)$/;"	l
f0103649	obj/kern/kernel.asm	/^f0103649:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010364e	obj/kern/kernel.asm	/^f010364e:	ee                   	out    %al,(%dx)$/;"	l
f010364f	obj/kern/kernel.asm	/^f010364f:	0f b7 05 a8 03 12 f0 	movzwl 0xf01203a8,%eax$/;"	l
f0103656	obj/kern/kernel.asm	/^f0103656:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f010365a	obj/kern/kernel.asm	/^f010365a:	74 13                	je     f010366f <pic_init+0x9e>$/;"	l
f010365c	obj/kern/kernel.asm	/^f010365c:	55                   	push   %ebp$/;"	l
f010365d	obj/kern/kernel.asm	/^f010365d:	89 e5                	mov    %esp,%ebp$/;"	l
f010365f	obj/kern/kernel.asm	/^f010365f:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103662	obj/kern/kernel.asm	/^f0103662:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0103665	obj/kern/kernel.asm	/^f0103665:	50                   	push   %eax$/;"	l
f0103666	obj/kern/kernel.asm	/^f0103666:	e8 ee fe ff ff       	call   f0103559 <irq_setmask_8259A>$/;"	l
f010366b	obj/kern/kernel.asm	/^f010366b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010366e	obj/kern/kernel.asm	/^f010366e:	c9                   	leave  $/;"	l
f010366f	obj/kern/kernel.asm	/^f010366f:	f3 c3                	repz ret $/;"	l
f0103671	obj/kern/kernel.asm	/^f0103671 <putch>:$/;"	l
f0103671	obj/kern/kernel.asm	/^f0103671:	55                   	push   %ebp$/;"	l
f0103672	obj/kern/kernel.asm	/^f0103672:	89 e5                	mov    %esp,%ebp$/;"	l
f0103674	obj/kern/kernel.asm	/^f0103674:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103677	obj/kern/kernel.asm	/^f0103677:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010367a	obj/kern/kernel.asm	/^f010367a:	e8 f4 d0 ff ff       	call   f0100773 <cputchar>$/;"	l
f010367f	obj/kern/kernel.asm	/^f010367f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103682	obj/kern/kernel.asm	/^f0103682:	c9                   	leave  $/;"	l
f0103683	obj/kern/kernel.asm	/^f0103683:	c3                   	ret    $/;"	l
f0103684	obj/kern/kernel.asm	/^f0103684 <vcprintf>:$/;"	l
f0103684	obj/kern/kernel.asm	/^f0103684:	55                   	push   %ebp$/;"	l
f0103685	obj/kern/kernel.asm	/^f0103685:	89 e5                	mov    %esp,%ebp$/;"	l
f0103687	obj/kern/kernel.asm	/^f0103687:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010368a	obj/kern/kernel.asm	/^f010368a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0103691	obj/kern/kernel.asm	/^f0103691:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103694	obj/kern/kernel.asm	/^f0103694:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103697	obj/kern/kernel.asm	/^f0103697:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f010369a	obj/kern/kernel.asm	/^f010369a:	50                   	push   %eax$/;"	l
f010369b	obj/kern/kernel.asm	/^f010369b:	68 71 36 10 f0       	push   $0xf0103671$/;"	l
f01036a0	obj/kern/kernel.asm	/^f01036a0:	e8 6a 16 00 00       	call   f0104d0f <vprintfmt>$/;"	l
f01036a5	obj/kern/kernel.asm	/^f01036a5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01036a8	obj/kern/kernel.asm	/^f01036a8:	c9                   	leave  $/;"	l
f01036a9	obj/kern/kernel.asm	/^f01036a9:	c3                   	ret    $/;"	l
f01036aa	obj/kern/kernel.asm	/^f01036aa <cprintf>:$/;"	l
f01036aa	obj/kern/kernel.asm	/^f01036aa:	55                   	push   %ebp$/;"	l
f01036ab	obj/kern/kernel.asm	/^f01036ab:	89 e5                	mov    %esp,%ebp$/;"	l
f01036ad	obj/kern/kernel.asm	/^f01036ad:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01036b0	obj/kern/kernel.asm	/^f01036b0:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f01036b3	obj/kern/kernel.asm	/^f01036b3:	50                   	push   %eax$/;"	l
f01036b4	obj/kern/kernel.asm	/^f01036b4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01036b7	obj/kern/kernel.asm	/^f01036b7:	e8 c8 ff ff ff       	call   f0103684 <vcprintf>$/;"	l
f01036bc	obj/kern/kernel.asm	/^f01036bc:	c9                   	leave  $/;"	l
f01036bd	obj/kern/kernel.asm	/^f01036bd:	c3                   	ret    $/;"	l
f01036be	obj/kern/kernel.asm	/^f01036be <trap_init_percpu>:$/;"	l
f01036be	obj/kern/kernel.asm	/^f01036be:	55                   	push   %ebp$/;"	l
f01036bf	obj/kern/kernel.asm	/^f01036bf:	89 e5                	mov    %esp,%ebp$/;"	l
f01036c1	obj/kern/kernel.asm	/^f01036c1:	57                   	push   %edi$/;"	l
f01036c2	obj/kern/kernel.asm	/^f01036c2:	56                   	push   %esi$/;"	l
f01036c3	obj/kern/kernel.asm	/^f01036c3:	53                   	push   %ebx$/;"	l
f01036c4	obj/kern/kernel.asm	/^f01036c4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01036c7	obj/kern/kernel.asm	/^f01036c7:	e8 06 23 00 00       	call   f01059d2 <cpunum>$/;"	l
f01036cc	obj/kern/kernel.asm	/^f01036cc:	89 c3                	mov    %eax,%ebx$/;"	l
f01036ce	obj/kern/kernel.asm	/^f01036ce:	e8 ff 22 00 00       	call   f01059d2 <cpunum>$/;"	l
f01036d3	obj/kern/kernel.asm	/^f01036d3:	0f be db             	movsbl %bl,%ebx$/;"	l
f01036d6	obj/kern/kernel.asm	/^f01036d6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01036d9	obj/kern/kernel.asm	/^f01036d9:	89 d9                	mov    %ebx,%ecx$/;"	l
f01036db	obj/kern/kernel.asm	/^f01036db:	c1 e1 10             	shl    $0x10,%ecx$/;"	l
f01036de	obj/kern/kernel.asm	/^f01036de:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f01036e3	obj/kern/kernel.asm	/^f01036e3:	29 ca                	sub    %ecx,%edx$/;"	l
f01036e5	obj/kern/kernel.asm	/^f01036e5:	89 90 30 60 1e f0    	mov    %edx,-0xfe19fd0(%eax)$/;"	l
f01036eb	obj/kern/kernel.asm	/^f01036eb:	e8 e2 22 00 00       	call   f01059d2 <cpunum>$/;"	l
f01036f0	obj/kern/kernel.asm	/^f01036f0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01036f3	obj/kern/kernel.asm	/^f01036f3:	66 c7 80 34 60 1e f0 	movw   $0x10,-0xfe19fcc(%eax)$/;"	l
f01036fa	obj/kern/kernel.asm	/^f01036fa:	10 00 $/;"	l
f01036fc	obj/kern/kernel.asm	/^f01036fc:	e8 d1 22 00 00       	call   f01059d2 <cpunum>$/;"	l
f0103701	obj/kern/kernel.asm	/^f0103701:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103704	obj/kern/kernel.asm	/^f0103704:	66 c7 80 92 60 1e f0 	movw   $0x68,-0xfe19f6e(%eax)$/;"	l
f010370b	obj/kern/kernel.asm	/^f010370b:	68 00 $/;"	l
f010370d	obj/kern/kernel.asm	/^f010370d:	83 c3 05             	add    $0x5,%ebx$/;"	l
f0103710	obj/kern/kernel.asm	/^f0103710:	e8 bd 22 00 00       	call   f01059d2 <cpunum>$/;"	l
f0103715	obj/kern/kernel.asm	/^f0103715:	89 c7                	mov    %eax,%edi$/;"	l
f0103717	obj/kern/kernel.asm	/^f0103717:	e8 b6 22 00 00       	call   f01059d2 <cpunum>$/;"	l
f010371c	obj/kern/kernel.asm	/^f010371c:	89 c6                	mov    %eax,%esi$/;"	l
f010371e	obj/kern/kernel.asm	/^f010371e:	e8 af 22 00 00       	call   f01059d2 <cpunum>$/;"	l
f0103723	obj/kern/kernel.asm	/^f0103723:	66 c7 04 dd 40 03 12 	movw   $0x67,-0xfedfcc0(,%ebx,8)$/;"	l
f010372a	obj/kern/kernel.asm	/^f010372a:	f0 67 00 $/;"	l
f010372d	obj/kern/kernel.asm	/^f010372d:	6b ff 74             	imul   $0x74,%edi,%edi$/;"	l
f0103730	obj/kern/kernel.asm	/^f0103730:	81 c7 2c 60 1e f0    	add    $0xf01e602c,%edi$/;"	l
f0103736	obj/kern/kernel.asm	/^f0103736:	66 89 3c dd 42 03 12 	mov    %di,-0xfedfcbe(,%ebx,8)$/;"	l
f010373d	obj/kern/kernel.asm	/^f010373d:	f0 $/;"	l
f010373e	obj/kern/kernel.asm	/^f010373e:	6b d6 74             	imul   $0x74,%esi,%edx$/;"	l
f0103741	obj/kern/kernel.asm	/^f0103741:	81 c2 2c 60 1e f0    	add    $0xf01e602c,%edx$/;"	l
f0103747	obj/kern/kernel.asm	/^f0103747:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f010374a	obj/kern/kernel.asm	/^f010374a:	88 14 dd 44 03 12 f0 	mov    %dl,-0xfedfcbc(,%ebx,8)$/;"	l
f0103751	obj/kern/kernel.asm	/^f0103751:	c6 04 dd 46 03 12 f0 	movb   $0x40,-0xfedfcba(,%ebx,8)$/;"	l
f0103758	obj/kern/kernel.asm	/^f0103758:	40 $/;"	l
f0103759	obj/kern/kernel.asm	/^f0103759:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010375c	obj/kern/kernel.asm	/^f010375c:	05 2c 60 1e f0       	add    $0xf01e602c,%eax$/;"	l
f0103761	obj/kern/kernel.asm	/^f0103761:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0103764	obj/kern/kernel.asm	/^f0103764:	88 04 dd 47 03 12 f0 	mov    %al,-0xfedfcb9(,%ebx,8)$/;"	l
f010376b	obj/kern/kernel.asm	/^f010376b:	c6 04 dd 45 03 12 f0 	movb   $0x89,-0xfedfcbb(,%ebx,8)$/;"	l
f0103772	obj/kern/kernel.asm	/^f0103772:	89 $/;"	l
f0103773	obj/kern/kernel.asm	/^f0103773:	c1 e3 03             	shl    $0x3,%ebx$/;"	l
f0103776	obj/kern/kernel.asm	/^f0103776:	0f 00 db             	ltr    %bx$/;"	l
f0103779	obj/kern/kernel.asm	/^f0103779:	b8 ac 03 12 f0       	mov    $0xf01203ac,%eax$/;"	l
f010377e	obj/kern/kernel.asm	/^f010377e:	0f 01 18             	lidtl  (%eax)$/;"	l
f0103781	obj/kern/kernel.asm	/^f0103781:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0103784	obj/kern/kernel.asm	/^f0103784:	5b                   	pop    %ebx$/;"	l
f0103785	obj/kern/kernel.asm	/^f0103785:	5e                   	pop    %esi$/;"	l
f0103786	obj/kern/kernel.asm	/^f0103786:	5f                   	pop    %edi$/;"	l
f0103787	obj/kern/kernel.asm	/^f0103787:	5d                   	pop    %ebp$/;"	l
f0103788	obj/kern/kernel.asm	/^f0103788:	c3                   	ret    $/;"	l
f0103789	obj/kern/kernel.asm	/^f0103789 <trap_init>:$/;"	l
f0103789	obj/kern/kernel.asm	/^f0103789:	55                   	push   %ebp$/;"	l
f010378a	obj/kern/kernel.asm	/^f010378a:	89 e5                	mov    %esp,%ebp$/;"	l
f010378c	obj/kern/kernel.asm	/^f010378c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010378f	obj/kern/kernel.asm	/^f010378f:	b8 1c 41 10 f0       	mov    $0xf010411c,%eax$/;"	l
f0103794	obj/kern/kernel.asm	/^f0103794:	66 a3 60 52 1e f0    	mov    %ax,0xf01e5260$/;"	l
f010379a	obj/kern/kernel.asm	/^f010379a:	66 c7 05 62 52 1e f0 	movw   $0x8,0xf01e5262$/;"	l
f01037a1	obj/kern/kernel.asm	/^f01037a1:	08 00 $/;"	l
f01037a3	obj/kern/kernel.asm	/^f01037a3:	c6 05 64 52 1e f0 00 	movb   $0x0,0xf01e5264$/;"	l
f01037aa	obj/kern/kernel.asm	/^f01037aa:	c6 05 65 52 1e f0 8e 	movb   $0x8e,0xf01e5265$/;"	l
f01037b1	obj/kern/kernel.asm	/^f01037b1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01037b4	obj/kern/kernel.asm	/^f01037b4:	66 a3 66 52 1e f0    	mov    %ax,0xf01e5266$/;"	l
f01037ba	obj/kern/kernel.asm	/^f01037ba:	b8 26 41 10 f0       	mov    $0xf0104126,%eax$/;"	l
f01037bf	obj/kern/kernel.asm	/^f01037bf:	66 a3 68 52 1e f0    	mov    %ax,0xf01e5268$/;"	l
f01037c5	obj/kern/kernel.asm	/^f01037c5:	66 c7 05 6a 52 1e f0 	movw   $0x8,0xf01e526a$/;"	l
f01037cc	obj/kern/kernel.asm	/^f01037cc:	08 00 $/;"	l
f01037ce	obj/kern/kernel.asm	/^f01037ce:	c6 05 6c 52 1e f0 00 	movb   $0x0,0xf01e526c$/;"	l
f01037d5	obj/kern/kernel.asm	/^f01037d5:	c6 05 6d 52 1e f0 8e 	movb   $0x8e,0xf01e526d$/;"	l
f01037dc	obj/kern/kernel.asm	/^f01037dc:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01037df	obj/kern/kernel.asm	/^f01037df:	66 a3 6e 52 1e f0    	mov    %ax,0xf01e526e$/;"	l
f01037e5	obj/kern/kernel.asm	/^f01037e5:	b8 2c 41 10 f0       	mov    $0xf010412c,%eax$/;"	l
f01037ea	obj/kern/kernel.asm	/^f01037ea:	66 a3 70 52 1e f0    	mov    %ax,0xf01e5270$/;"	l
f01037f0	obj/kern/kernel.asm	/^f01037f0:	66 c7 05 72 52 1e f0 	movw   $0x8,0xf01e5272$/;"	l
f01037f7	obj/kern/kernel.asm	/^f01037f7:	08 00 $/;"	l
f01037f9	obj/kern/kernel.asm	/^f01037f9:	c6 05 74 52 1e f0 00 	movb   $0x0,0xf01e5274$/;"	l
f0103800	obj/kern/kernel.asm	/^f0103800:	c6 05 75 52 1e f0 8e 	movb   $0x8e,0xf01e5275$/;"	l
f0103807	obj/kern/kernel.asm	/^f0103807:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010380a	obj/kern/kernel.asm	/^f010380a:	66 a3 76 52 1e f0    	mov    %ax,0xf01e5276$/;"	l
f0103810	obj/kern/kernel.asm	/^f0103810:	b8 32 41 10 f0       	mov    $0xf0104132,%eax$/;"	l
f0103815	obj/kern/kernel.asm	/^f0103815:	66 a3 78 52 1e f0    	mov    %ax,0xf01e5278$/;"	l
f010381b	obj/kern/kernel.asm	/^f010381b:	66 c7 05 7a 52 1e f0 	movw   $0x8,0xf01e527a$/;"	l
f0103822	obj/kern/kernel.asm	/^f0103822:	08 00 $/;"	l
f0103824	obj/kern/kernel.asm	/^f0103824:	c6 05 7c 52 1e f0 00 	movb   $0x0,0xf01e527c$/;"	l
f010382b	obj/kern/kernel.asm	/^f010382b:	c6 05 7d 52 1e f0 ee 	movb   $0xee,0xf01e527d$/;"	l
f0103832	obj/kern/kernel.asm	/^f0103832:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103835	obj/kern/kernel.asm	/^f0103835:	66 a3 7e 52 1e f0    	mov    %ax,0xf01e527e$/;"	l
f010383b	obj/kern/kernel.asm	/^f010383b:	b8 38 41 10 f0       	mov    $0xf0104138,%eax$/;"	l
f0103840	obj/kern/kernel.asm	/^f0103840:	66 a3 80 52 1e f0    	mov    %ax,0xf01e5280$/;"	l
f0103846	obj/kern/kernel.asm	/^f0103846:	66 c7 05 82 52 1e f0 	movw   $0x8,0xf01e5282$/;"	l
f010384d	obj/kern/kernel.asm	/^f010384d:	08 00 $/;"	l
f010384f	obj/kern/kernel.asm	/^f010384f:	c6 05 84 52 1e f0 00 	movb   $0x0,0xf01e5284$/;"	l
f0103856	obj/kern/kernel.asm	/^f0103856:	c6 05 85 52 1e f0 8e 	movb   $0x8e,0xf01e5285$/;"	l
f010385d	obj/kern/kernel.asm	/^f010385d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103860	obj/kern/kernel.asm	/^f0103860:	66 a3 86 52 1e f0    	mov    %ax,0xf01e5286$/;"	l
f0103866	obj/kern/kernel.asm	/^f0103866:	b8 3e 41 10 f0       	mov    $0xf010413e,%eax$/;"	l
f010386b	obj/kern/kernel.asm	/^f010386b:	66 a3 88 52 1e f0    	mov    %ax,0xf01e5288$/;"	l
f0103871	obj/kern/kernel.asm	/^f0103871:	66 c7 05 8a 52 1e f0 	movw   $0x8,0xf01e528a$/;"	l
f0103878	obj/kern/kernel.asm	/^f0103878:	08 00 $/;"	l
f010387a	obj/kern/kernel.asm	/^f010387a:	c6 05 8c 52 1e f0 00 	movb   $0x0,0xf01e528c$/;"	l
f0103881	obj/kern/kernel.asm	/^f0103881:	c6 05 8d 52 1e f0 8e 	movb   $0x8e,0xf01e528d$/;"	l
f0103888	obj/kern/kernel.asm	/^f0103888:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010388b	obj/kern/kernel.asm	/^f010388b:	66 a3 8e 52 1e f0    	mov    %ax,0xf01e528e$/;"	l
f0103891	obj/kern/kernel.asm	/^f0103891:	b8 44 41 10 f0       	mov    $0xf0104144,%eax$/;"	l
f0103896	obj/kern/kernel.asm	/^f0103896:	66 a3 90 52 1e f0    	mov    %ax,0xf01e5290$/;"	l
f010389c	obj/kern/kernel.asm	/^f010389c:	66 c7 05 92 52 1e f0 	movw   $0x8,0xf01e5292$/;"	l
f01038a3	obj/kern/kernel.asm	/^f01038a3:	08 00 $/;"	l
f01038a5	obj/kern/kernel.asm	/^f01038a5:	c6 05 94 52 1e f0 00 	movb   $0x0,0xf01e5294$/;"	l
f01038ac	obj/kern/kernel.asm	/^f01038ac:	c6 05 95 52 1e f0 8e 	movb   $0x8e,0xf01e5295$/;"	l
f01038b3	obj/kern/kernel.asm	/^f01038b3:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01038b6	obj/kern/kernel.asm	/^f01038b6:	66 a3 96 52 1e f0    	mov    %ax,0xf01e5296$/;"	l
f01038bc	obj/kern/kernel.asm	/^f01038bc:	b8 4a 41 10 f0       	mov    $0xf010414a,%eax$/;"	l
f01038c1	obj/kern/kernel.asm	/^f01038c1:	66 a3 98 52 1e f0    	mov    %ax,0xf01e5298$/;"	l
f01038c7	obj/kern/kernel.asm	/^f01038c7:	66 c7 05 9a 52 1e f0 	movw   $0x8,0xf01e529a$/;"	l
f01038ce	obj/kern/kernel.asm	/^f01038ce:	08 00 $/;"	l
f01038d0	obj/kern/kernel.asm	/^f01038d0:	c6 05 9c 52 1e f0 00 	movb   $0x0,0xf01e529c$/;"	l
f01038d7	obj/kern/kernel.asm	/^f01038d7:	c6 05 9d 52 1e f0 8e 	movb   $0x8e,0xf01e529d$/;"	l
f01038de	obj/kern/kernel.asm	/^f01038de:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01038e1	obj/kern/kernel.asm	/^f01038e1:	66 a3 9e 52 1e f0    	mov    %ax,0xf01e529e$/;"	l
f01038e7	obj/kern/kernel.asm	/^f01038e7:	b8 50 41 10 f0       	mov    $0xf0104150,%eax$/;"	l
f01038ec	obj/kern/kernel.asm	/^f01038ec:	66 a3 a0 52 1e f0    	mov    %ax,0xf01e52a0$/;"	l
f01038f2	obj/kern/kernel.asm	/^f01038f2:	66 c7 05 a2 52 1e f0 	movw   $0x8,0xf01e52a2$/;"	l
f01038f9	obj/kern/kernel.asm	/^f01038f9:	08 00 $/;"	l
f01038fb	obj/kern/kernel.asm	/^f01038fb:	c6 05 a4 52 1e f0 00 	movb   $0x0,0xf01e52a4$/;"	l
f0103902	obj/kern/kernel.asm	/^f0103902:	c6 05 a5 52 1e f0 8e 	movb   $0x8e,0xf01e52a5$/;"	l
f0103909	obj/kern/kernel.asm	/^f0103909:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010390c	obj/kern/kernel.asm	/^f010390c:	66 a3 a6 52 1e f0    	mov    %ax,0xf01e52a6$/;"	l
f0103912	obj/kern/kernel.asm	/^f0103912:	b8 54 41 10 f0       	mov    $0xf0104154,%eax$/;"	l
f0103917	obj/kern/kernel.asm	/^f0103917:	66 a3 b0 52 1e f0    	mov    %ax,0xf01e52b0$/;"	l
f010391d	obj/kern/kernel.asm	/^f010391d:	66 c7 05 b2 52 1e f0 	movw   $0x8,0xf01e52b2$/;"	l
f0103924	obj/kern/kernel.asm	/^f0103924:	08 00 $/;"	l
f0103926	obj/kern/kernel.asm	/^f0103926:	c6 05 b4 52 1e f0 00 	movb   $0x0,0xf01e52b4$/;"	l
f010392d	obj/kern/kernel.asm	/^f010392d:	c6 05 b5 52 1e f0 8e 	movb   $0x8e,0xf01e52b5$/;"	l
f0103934	obj/kern/kernel.asm	/^f0103934:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103937	obj/kern/kernel.asm	/^f0103937:	66 a3 b6 52 1e f0    	mov    %ax,0xf01e52b6$/;"	l
f010393d	obj/kern/kernel.asm	/^f010393d:	b8 58 41 10 f0       	mov    $0xf0104158,%eax$/;"	l
f0103942	obj/kern/kernel.asm	/^f0103942:	66 a3 b8 52 1e f0    	mov    %ax,0xf01e52b8$/;"	l
f0103948	obj/kern/kernel.asm	/^f0103948:	66 c7 05 ba 52 1e f0 	movw   $0x8,0xf01e52ba$/;"	l
f010394f	obj/kern/kernel.asm	/^f010394f:	08 00 $/;"	l
f0103951	obj/kern/kernel.asm	/^f0103951:	c6 05 bc 52 1e f0 00 	movb   $0x0,0xf01e52bc$/;"	l
f0103958	obj/kern/kernel.asm	/^f0103958:	c6 05 bd 52 1e f0 8e 	movb   $0x8e,0xf01e52bd$/;"	l
f010395f	obj/kern/kernel.asm	/^f010395f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103962	obj/kern/kernel.asm	/^f0103962:	66 a3 be 52 1e f0    	mov    %ax,0xf01e52be$/;"	l
f0103968	obj/kern/kernel.asm	/^f0103968:	b8 5c 41 10 f0       	mov    $0xf010415c,%eax$/;"	l
f010396d	obj/kern/kernel.asm	/^f010396d:	66 a3 c0 52 1e f0    	mov    %ax,0xf01e52c0$/;"	l
f0103973	obj/kern/kernel.asm	/^f0103973:	66 c7 05 c2 52 1e f0 	movw   $0x8,0xf01e52c2$/;"	l
f010397a	obj/kern/kernel.asm	/^f010397a:	08 00 $/;"	l
f010397c	obj/kern/kernel.asm	/^f010397c:	c6 05 c4 52 1e f0 00 	movb   $0x0,0xf01e52c4$/;"	l
f0103983	obj/kern/kernel.asm	/^f0103983:	c6 05 c5 52 1e f0 8e 	movb   $0x8e,0xf01e52c5$/;"	l
f010398a	obj/kern/kernel.asm	/^f010398a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010398d	obj/kern/kernel.asm	/^f010398d:	66 a3 c6 52 1e f0    	mov    %ax,0xf01e52c6$/;"	l
f0103993	obj/kern/kernel.asm	/^f0103993:	b8 60 41 10 f0       	mov    $0xf0104160,%eax$/;"	l
f0103998	obj/kern/kernel.asm	/^f0103998:	66 a3 c8 52 1e f0    	mov    %ax,0xf01e52c8$/;"	l
f010399e	obj/kern/kernel.asm	/^f010399e:	66 c7 05 ca 52 1e f0 	movw   $0x8,0xf01e52ca$/;"	l
f01039a5	obj/kern/kernel.asm	/^f01039a5:	08 00 $/;"	l
f01039a7	obj/kern/kernel.asm	/^f01039a7:	c6 05 cc 52 1e f0 00 	movb   $0x0,0xf01e52cc$/;"	l
f01039ae	obj/kern/kernel.asm	/^f01039ae:	c6 05 cd 52 1e f0 8e 	movb   $0x8e,0xf01e52cd$/;"	l
f01039b5	obj/kern/kernel.asm	/^f01039b5:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01039b8	obj/kern/kernel.asm	/^f01039b8:	66 a3 ce 52 1e f0    	mov    %ax,0xf01e52ce$/;"	l
f01039be	obj/kern/kernel.asm	/^f01039be:	b8 64 41 10 f0       	mov    $0xf0104164,%eax$/;"	l
f01039c3	obj/kern/kernel.asm	/^f01039c3:	66 a3 d0 52 1e f0    	mov    %ax,0xf01e52d0$/;"	l
f01039c9	obj/kern/kernel.asm	/^f01039c9:	66 c7 05 d2 52 1e f0 	movw   $0x8,0xf01e52d2$/;"	l
f01039d0	obj/kern/kernel.asm	/^f01039d0:	08 00 $/;"	l
f01039d2	obj/kern/kernel.asm	/^f01039d2:	c6 05 d4 52 1e f0 00 	movb   $0x0,0xf01e52d4$/;"	l
f01039d9	obj/kern/kernel.asm	/^f01039d9:	c6 05 d5 52 1e f0 8e 	movb   $0x8e,0xf01e52d5$/;"	l
f01039e0	obj/kern/kernel.asm	/^f01039e0:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01039e3	obj/kern/kernel.asm	/^f01039e3:	66 a3 d6 52 1e f0    	mov    %ax,0xf01e52d6$/;"	l
f01039e9	obj/kern/kernel.asm	/^f01039e9:	b8 68 41 10 f0       	mov    $0xf0104168,%eax$/;"	l
f01039ee	obj/kern/kernel.asm	/^f01039ee:	66 a3 e0 52 1e f0    	mov    %ax,0xf01e52e0$/;"	l
f01039f4	obj/kern/kernel.asm	/^f01039f4:	66 c7 05 e2 52 1e f0 	movw   $0x8,0xf01e52e2$/;"	l
f01039fb	obj/kern/kernel.asm	/^f01039fb:	08 00 $/;"	l
f01039fd	obj/kern/kernel.asm	/^f01039fd:	c6 05 e4 52 1e f0 00 	movb   $0x0,0xf01e52e4$/;"	l
f0103a04	obj/kern/kernel.asm	/^f0103a04:	c6 05 e5 52 1e f0 8e 	movb   $0x8e,0xf01e52e5$/;"	l
f0103a0b	obj/kern/kernel.asm	/^f0103a0b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103a0e	obj/kern/kernel.asm	/^f0103a0e:	66 a3 e6 52 1e f0    	mov    %ax,0xf01e52e6$/;"	l
f0103a14	obj/kern/kernel.asm	/^f0103a14:	b8 6e 41 10 f0       	mov    $0xf010416e,%eax$/;"	l
f0103a19	obj/kern/kernel.asm	/^f0103a19:	66 a3 e8 52 1e f0    	mov    %ax,0xf01e52e8$/;"	l
f0103a1f	obj/kern/kernel.asm	/^f0103a1f:	66 c7 05 ea 52 1e f0 	movw   $0x8,0xf01e52ea$/;"	l
f0103a26	obj/kern/kernel.asm	/^f0103a26:	08 00 $/;"	l
f0103a28	obj/kern/kernel.asm	/^f0103a28:	c6 05 ec 52 1e f0 00 	movb   $0x0,0xf01e52ec$/;"	l
f0103a2f	obj/kern/kernel.asm	/^f0103a2f:	c6 05 ed 52 1e f0 8e 	movb   $0x8e,0xf01e52ed$/;"	l
f0103a36	obj/kern/kernel.asm	/^f0103a36:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103a39	obj/kern/kernel.asm	/^f0103a39:	66 a3 ee 52 1e f0    	mov    %ax,0xf01e52ee$/;"	l
f0103a3f	obj/kern/kernel.asm	/^f0103a3f:	b8 74 41 10 f0       	mov    $0xf0104174,%eax$/;"	l
f0103a44	obj/kern/kernel.asm	/^f0103a44:	66 a3 f0 52 1e f0    	mov    %ax,0xf01e52f0$/;"	l
f0103a4a	obj/kern/kernel.asm	/^f0103a4a:	66 c7 05 f2 52 1e f0 	movw   $0x8,0xf01e52f2$/;"	l
f0103a51	obj/kern/kernel.asm	/^f0103a51:	08 00 $/;"	l
f0103a53	obj/kern/kernel.asm	/^f0103a53:	c6 05 f4 52 1e f0 00 	movb   $0x0,0xf01e52f4$/;"	l
f0103a5a	obj/kern/kernel.asm	/^f0103a5a:	c6 05 f5 52 1e f0 8e 	movb   $0x8e,0xf01e52f5$/;"	l
f0103a61	obj/kern/kernel.asm	/^f0103a61:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103a64	obj/kern/kernel.asm	/^f0103a64:	66 a3 f6 52 1e f0    	mov    %ax,0xf01e52f6$/;"	l
f0103a6a	obj/kern/kernel.asm	/^f0103a6a:	b8 7a 41 10 f0       	mov    $0xf010417a,%eax$/;"	l
f0103a6f	obj/kern/kernel.asm	/^f0103a6f:	66 a3 f8 52 1e f0    	mov    %ax,0xf01e52f8$/;"	l
f0103a75	obj/kern/kernel.asm	/^f0103a75:	66 c7 05 fa 52 1e f0 	movw   $0x8,0xf01e52fa$/;"	l
f0103a7c	obj/kern/kernel.asm	/^f0103a7c:	08 00 $/;"	l
f0103a7e	obj/kern/kernel.asm	/^f0103a7e:	c6 05 fc 52 1e f0 00 	movb   $0x0,0xf01e52fc$/;"	l
f0103a85	obj/kern/kernel.asm	/^f0103a85:	c6 05 fd 52 1e f0 8e 	movb   $0x8e,0xf01e52fd$/;"	l
f0103a8c	obj/kern/kernel.asm	/^f0103a8c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103a8f	obj/kern/kernel.asm	/^f0103a8f:	66 a3 fe 52 1e f0    	mov    %ax,0xf01e52fe$/;"	l
f0103a95	obj/kern/kernel.asm	/^f0103a95:	b8 80 41 10 f0       	mov    $0xf0104180,%eax$/;"	l
f0103a9a	obj/kern/kernel.asm	/^f0103a9a:	66 a3 e0 53 1e f0    	mov    %ax,0xf01e53e0$/;"	l
f0103aa0	obj/kern/kernel.asm	/^f0103aa0:	66 c7 05 e2 53 1e f0 	movw   $0x8,0xf01e53e2$/;"	l
f0103aa7	obj/kern/kernel.asm	/^f0103aa7:	08 00 $/;"	l
f0103aa9	obj/kern/kernel.asm	/^f0103aa9:	c6 05 e4 53 1e f0 00 	movb   $0x0,0xf01e53e4$/;"	l
f0103ab0	obj/kern/kernel.asm	/^f0103ab0:	c6 05 e5 53 1e f0 ee 	movb   $0xee,0xf01e53e5$/;"	l
f0103ab7	obj/kern/kernel.asm	/^f0103ab7:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103aba	obj/kern/kernel.asm	/^f0103aba:	66 a3 e6 53 1e f0    	mov    %ax,0xf01e53e6$/;"	l
f0103ac0	obj/kern/kernel.asm	/^f0103ac0:	b8 86 41 10 f0       	mov    $0xf0104186,%eax$/;"	l
f0103ac5	obj/kern/kernel.asm	/^f0103ac5:	66 a3 60 53 1e f0    	mov    %ax,0xf01e5360$/;"	l
f0103acb	obj/kern/kernel.asm	/^f0103acb:	66 c7 05 62 53 1e f0 	movw   $0x8,0xf01e5362$/;"	l
f0103ad2	obj/kern/kernel.asm	/^f0103ad2:	08 00 $/;"	l
f0103ad4	obj/kern/kernel.asm	/^f0103ad4:	c6 05 64 53 1e f0 00 	movb   $0x0,0xf01e5364$/;"	l
f0103adb	obj/kern/kernel.asm	/^f0103adb:	c6 05 65 53 1e f0 ee 	movb   $0xee,0xf01e5365$/;"	l
f0103ae2	obj/kern/kernel.asm	/^f0103ae2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103ae5	obj/kern/kernel.asm	/^f0103ae5:	66 a3 66 53 1e f0    	mov    %ax,0xf01e5366$/;"	l
f0103aeb	obj/kern/kernel.asm	/^f0103aeb:	b8 8c 41 10 f0       	mov    $0xf010418c,%eax$/;"	l
f0103af0	obj/kern/kernel.asm	/^f0103af0:	66 a3 68 53 1e f0    	mov    %ax,0xf01e5368$/;"	l
f0103af6	obj/kern/kernel.asm	/^f0103af6:	66 c7 05 6a 53 1e f0 	movw   $0x8,0xf01e536a$/;"	l
f0103afd	obj/kern/kernel.asm	/^f0103afd:	08 00 $/;"	l
f0103aff	obj/kern/kernel.asm	/^f0103aff:	c6 05 6c 53 1e f0 00 	movb   $0x0,0xf01e536c$/;"	l
f0103b06	obj/kern/kernel.asm	/^f0103b06:	c6 05 6d 53 1e f0 ee 	movb   $0xee,0xf01e536d$/;"	l
f0103b0d	obj/kern/kernel.asm	/^f0103b0d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103b10	obj/kern/kernel.asm	/^f0103b10:	66 a3 6e 53 1e f0    	mov    %ax,0xf01e536e$/;"	l
f0103b16	obj/kern/kernel.asm	/^f0103b16:	b8 92 41 10 f0       	mov    $0xf0104192,%eax$/;"	l
f0103b1b	obj/kern/kernel.asm	/^f0103b1b:	66 a3 80 53 1e f0    	mov    %ax,0xf01e5380$/;"	l
f0103b21	obj/kern/kernel.asm	/^f0103b21:	66 c7 05 82 53 1e f0 	movw   $0x8,0xf01e5382$/;"	l
f0103b28	obj/kern/kernel.asm	/^f0103b28:	08 00 $/;"	l
f0103b2a	obj/kern/kernel.asm	/^f0103b2a:	c6 05 84 53 1e f0 00 	movb   $0x0,0xf01e5384$/;"	l
f0103b31	obj/kern/kernel.asm	/^f0103b31:	c6 05 85 53 1e f0 ee 	movb   $0xee,0xf01e5385$/;"	l
f0103b38	obj/kern/kernel.asm	/^f0103b38:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103b3b	obj/kern/kernel.asm	/^f0103b3b:	66 a3 86 53 1e f0    	mov    %ax,0xf01e5386$/;"	l
f0103b41	obj/kern/kernel.asm	/^f0103b41:	b8 98 41 10 f0       	mov    $0xf0104198,%eax$/;"	l
f0103b46	obj/kern/kernel.asm	/^f0103b46:	66 a3 98 53 1e f0    	mov    %ax,0xf01e5398$/;"	l
f0103b4c	obj/kern/kernel.asm	/^f0103b4c:	66 c7 05 9a 53 1e f0 	movw   $0x8,0xf01e539a$/;"	l
f0103b53	obj/kern/kernel.asm	/^f0103b53:	08 00 $/;"	l
f0103b55	obj/kern/kernel.asm	/^f0103b55:	c6 05 9c 53 1e f0 00 	movb   $0x0,0xf01e539c$/;"	l
f0103b5c	obj/kern/kernel.asm	/^f0103b5c:	c6 05 9d 53 1e f0 ee 	movb   $0xee,0xf01e539d$/;"	l
f0103b63	obj/kern/kernel.asm	/^f0103b63:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103b66	obj/kern/kernel.asm	/^f0103b66:	66 a3 9e 53 1e f0    	mov    %ax,0xf01e539e$/;"	l
f0103b6c	obj/kern/kernel.asm	/^f0103b6c:	b8 9e 41 10 f0       	mov    $0xf010419e,%eax$/;"	l
f0103b71	obj/kern/kernel.asm	/^f0103b71:	66 a3 d0 53 1e f0    	mov    %ax,0xf01e53d0$/;"	l
f0103b77	obj/kern/kernel.asm	/^f0103b77:	66 c7 05 d2 53 1e f0 	movw   $0x8,0xf01e53d2$/;"	l
f0103b7e	obj/kern/kernel.asm	/^f0103b7e:	08 00 $/;"	l
f0103b80	obj/kern/kernel.asm	/^f0103b80:	c6 05 d4 53 1e f0 00 	movb   $0x0,0xf01e53d4$/;"	l
f0103b87	obj/kern/kernel.asm	/^f0103b87:	c6 05 d5 53 1e f0 ee 	movb   $0xee,0xf01e53d5$/;"	l
f0103b8e	obj/kern/kernel.asm	/^f0103b8e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103b91	obj/kern/kernel.asm	/^f0103b91:	66 a3 d6 53 1e f0    	mov    %ax,0xf01e53d6$/;"	l
f0103b97	obj/kern/kernel.asm	/^f0103b97:	b8 a4 41 10 f0       	mov    $0xf01041a4,%eax$/;"	l
f0103b9c	obj/kern/kernel.asm	/^f0103b9c:	66 a3 f8 53 1e f0    	mov    %ax,0xf01e53f8$/;"	l
f0103ba2	obj/kern/kernel.asm	/^f0103ba2:	66 c7 05 fa 53 1e f0 	movw   $0x8,0xf01e53fa$/;"	l
f0103ba9	obj/kern/kernel.asm	/^f0103ba9:	08 00 $/;"	l
f0103bab	obj/kern/kernel.asm	/^f0103bab:	c6 05 fc 53 1e f0 00 	movb   $0x0,0xf01e53fc$/;"	l
f0103bb2	obj/kern/kernel.asm	/^f0103bb2:	c6 05 fd 53 1e f0 ee 	movb   $0xee,0xf01e53fd$/;"	l
f0103bb9	obj/kern/kernel.asm	/^f0103bb9:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103bbc	obj/kern/kernel.asm	/^f0103bbc:	66 a3 fe 53 1e f0    	mov    %ax,0xf01e53fe$/;"	l
f0103bc2	obj/kern/kernel.asm	/^f0103bc2:	e8 f7 fa ff ff       	call   f01036be <trap_init_percpu>$/;"	l
f0103bc7	obj/kern/kernel.asm	/^f0103bc7:	c9                   	leave  $/;"	l
f0103bc8	obj/kern/kernel.asm	/^f0103bc8:	c3                   	ret    $/;"	l
f0103bc9	obj/kern/kernel.asm	/^f0103bc9 <print_regs>:$/;"	l
f0103bc9	obj/kern/kernel.asm	/^f0103bc9:	55                   	push   %ebp$/;"	l
f0103bca	obj/kern/kernel.asm	/^f0103bca:	89 e5                	mov    %esp,%ebp$/;"	l
f0103bcc	obj/kern/kernel.asm	/^f0103bcc:	53                   	push   %ebx$/;"	l
f0103bcd	obj/kern/kernel.asm	/^f0103bcd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103bd0	obj/kern/kernel.asm	/^f0103bd0:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103bd3	obj/kern/kernel.asm	/^f0103bd3:	ff 33                	pushl  (%ebx)$/;"	l
f0103bd5	obj/kern/kernel.asm	/^f0103bd5:	68 dc 73 10 f0       	push   $0xf01073dc$/;"	l
f0103bda	obj/kern/kernel.asm	/^f0103bda:	e8 cb fa ff ff       	call   f01036aa <cprintf>$/;"	l
f0103bdf	obj/kern/kernel.asm	/^f0103bdf:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103be2	obj/kern/kernel.asm	/^f0103be2:	ff 73 04             	pushl  0x4(%ebx)$/;"	l
f0103be5	obj/kern/kernel.asm	/^f0103be5:	68 eb 73 10 f0       	push   $0xf01073eb$/;"	l
f0103bea	obj/kern/kernel.asm	/^f0103bea:	e8 bb fa ff ff       	call   f01036aa <cprintf>$/;"	l
f0103bef	obj/kern/kernel.asm	/^f0103bef:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103bf2	obj/kern/kernel.asm	/^f0103bf2:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0103bf5	obj/kern/kernel.asm	/^f0103bf5:	68 fa 73 10 f0       	push   $0xf01073fa$/;"	l
f0103bfa	obj/kern/kernel.asm	/^f0103bfa:	e8 ab fa ff ff       	call   f01036aa <cprintf>$/;"	l
f0103bff	obj/kern/kernel.asm	/^f0103bff:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103c02	obj/kern/kernel.asm	/^f0103c02:	ff 73 0c             	pushl  0xc(%ebx)$/;"	l
f0103c05	obj/kern/kernel.asm	/^f0103c05:	68 09 74 10 f0       	push   $0xf0107409$/;"	l
f0103c0a	obj/kern/kernel.asm	/^f0103c0a:	e8 9b fa ff ff       	call   f01036aa <cprintf>$/;"	l
f0103c0f	obj/kern/kernel.asm	/^f0103c0f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103c12	obj/kern/kernel.asm	/^f0103c12:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f0103c15	obj/kern/kernel.asm	/^f0103c15:	68 18 74 10 f0       	push   $0xf0107418$/;"	l
f0103c1a	obj/kern/kernel.asm	/^f0103c1a:	e8 8b fa ff ff       	call   f01036aa <cprintf>$/;"	l
f0103c1f	obj/kern/kernel.asm	/^f0103c1f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103c22	obj/kern/kernel.asm	/^f0103c22:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f0103c25	obj/kern/kernel.asm	/^f0103c25:	68 27 74 10 f0       	push   $0xf0107427$/;"	l
f0103c2a	obj/kern/kernel.asm	/^f0103c2a:	e8 7b fa ff ff       	call   f01036aa <cprintf>$/;"	l
f0103c2f	obj/kern/kernel.asm	/^f0103c2f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103c32	obj/kern/kernel.asm	/^f0103c32:	ff 73 18             	pushl  0x18(%ebx)$/;"	l
f0103c35	obj/kern/kernel.asm	/^f0103c35:	68 36 74 10 f0       	push   $0xf0107436$/;"	l
f0103c3a	obj/kern/kernel.asm	/^f0103c3a:	e8 6b fa ff ff       	call   f01036aa <cprintf>$/;"	l
f0103c3f	obj/kern/kernel.asm	/^f0103c3f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103c42	obj/kern/kernel.asm	/^f0103c42:	ff 73 1c             	pushl  0x1c(%ebx)$/;"	l
f0103c45	obj/kern/kernel.asm	/^f0103c45:	68 45 74 10 f0       	push   $0xf0107445$/;"	l
f0103c4a	obj/kern/kernel.asm	/^f0103c4a:	e8 5b fa ff ff       	call   f01036aa <cprintf>$/;"	l
f0103c4f	obj/kern/kernel.asm	/^f0103c4f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103c52	obj/kern/kernel.asm	/^f0103c52:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103c55	obj/kern/kernel.asm	/^f0103c55:	c9                   	leave  $/;"	l
f0103c56	obj/kern/kernel.asm	/^f0103c56:	c3                   	ret    $/;"	l
f0103c57	obj/kern/kernel.asm	/^f0103c57 <print_trapframe>:$/;"	l
f0103c57	obj/kern/kernel.asm	/^f0103c57:	55                   	push   %ebp$/;"	l
f0103c58	obj/kern/kernel.asm	/^f0103c58:	89 e5                	mov    %esp,%ebp$/;"	l
f0103c5a	obj/kern/kernel.asm	/^f0103c5a:	56                   	push   %esi$/;"	l
f0103c5b	obj/kern/kernel.asm	/^f0103c5b:	53                   	push   %ebx$/;"	l
f0103c5c	obj/kern/kernel.asm	/^f0103c5c:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103c5f	obj/kern/kernel.asm	/^f0103c5f:	e8 6e 1d 00 00       	call   f01059d2 <cpunum>$/;"	l
f0103c64	obj/kern/kernel.asm	/^f0103c64:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103c67	obj/kern/kernel.asm	/^f0103c67:	50                   	push   %eax$/;"	l
f0103c68	obj/kern/kernel.asm	/^f0103c68:	53                   	push   %ebx$/;"	l
f0103c69	obj/kern/kernel.asm	/^f0103c69:	68 a9 74 10 f0       	push   $0xf01074a9$/;"	l
f0103c6e	obj/kern/kernel.asm	/^f0103c6e:	e8 37 fa ff ff       	call   f01036aa <cprintf>$/;"	l
f0103c73	obj/kern/kernel.asm	/^f0103c73:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103c76	obj/kern/kernel.asm	/^f0103c76:	e8 4e ff ff ff       	call   f0103bc9 <print_regs>$/;"	l
f0103c7b	obj/kern/kernel.asm	/^f0103c7b:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103c7e	obj/kern/kernel.asm	/^f0103c7e:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f0103c82	obj/kern/kernel.asm	/^f0103c82:	50                   	push   %eax$/;"	l
f0103c83	obj/kern/kernel.asm	/^f0103c83:	68 c7 74 10 f0       	push   $0xf01074c7$/;"	l
f0103c88	obj/kern/kernel.asm	/^f0103c88:	e8 1d fa ff ff       	call   f01036aa <cprintf>$/;"	l
f0103c8d	obj/kern/kernel.asm	/^f0103c8d:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103c90	obj/kern/kernel.asm	/^f0103c90:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f0103c94	obj/kern/kernel.asm	/^f0103c94:	50                   	push   %eax$/;"	l
f0103c95	obj/kern/kernel.asm	/^f0103c95:	68 da 74 10 f0       	push   $0xf01074da$/;"	l
f0103c9a	obj/kern/kernel.asm	/^f0103c9a:	e8 0b fa ff ff       	call   f01036aa <cprintf>$/;"	l
f0103c9f	obj/kern/kernel.asm	/^f0103c9f:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f0103ca2	obj/kern/kernel.asm	/^f0103ca2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ca5	obj/kern/kernel.asm	/^f0103ca5:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0103ca8	obj/kern/kernel.asm	/^f0103ca8:	77 09                	ja     f0103cb3 <print_trapframe+0x5c>$/;"	l
f0103caa	obj/kern/kernel.asm	/^f0103caa:	8b 14 85 80 77 10 f0 	mov    -0xfef8880(,%eax,4),%edx$/;"	l
f0103cb1	obj/kern/kernel.asm	/^f0103cb1:	eb 1f                	jmp    f0103cd2 <print_trapframe+0x7b>$/;"	l
f0103cb3	obj/kern/kernel.asm	/^f0103cb3:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0103cb6	obj/kern/kernel.asm	/^f0103cb6:	74 15                	je     f0103ccd <print_trapframe+0x76>$/;"	l
f0103cb8	obj/kern/kernel.asm	/^f0103cb8:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0103cbb	obj/kern/kernel.asm	/^f0103cbb:	83 fa 10             	cmp    $0x10,%edx$/;"	l
f0103cbe	obj/kern/kernel.asm	/^f0103cbe:	b9 73 74 10 f0       	mov    $0xf0107473,%ecx$/;"	l
f0103cc3	obj/kern/kernel.asm	/^f0103cc3:	ba 60 74 10 f0       	mov    $0xf0107460,%edx$/;"	l
f0103cc8	obj/kern/kernel.asm	/^f0103cc8:	0f 43 d1             	cmovae %ecx,%edx$/;"	l
f0103ccb	obj/kern/kernel.asm	/^f0103ccb:	eb 05                	jmp    f0103cd2 <print_trapframe+0x7b>$/;"	l
f0103ccd	obj/kern/kernel.asm	/^f0103ccd:	ba 54 74 10 f0       	mov    $0xf0107454,%edx$/;"	l
f0103cd2	obj/kern/kernel.asm	/^f0103cd2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103cd5	obj/kern/kernel.asm	/^f0103cd5:	52                   	push   %edx$/;"	l
f0103cd6	obj/kern/kernel.asm	/^f0103cd6:	50                   	push   %eax$/;"	l
f0103cd7	obj/kern/kernel.asm	/^f0103cd7:	68 ed 74 10 f0       	push   $0xf01074ed$/;"	l
f0103cdc	obj/kern/kernel.asm	/^f0103cdc:	e8 c9 f9 ff ff       	call   f01036aa <cprintf>$/;"	l
f0103ce1	obj/kern/kernel.asm	/^f0103ce1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ce4	obj/kern/kernel.asm	/^f0103ce4:	3b 1d 60 5a 1e f0    	cmp    0xf01e5a60,%ebx$/;"	l
f0103cea	obj/kern/kernel.asm	/^f0103cea:	75 1a                	jne    f0103d06 <print_trapframe+0xaf>$/;"	l
f0103cec	obj/kern/kernel.asm	/^f0103cec:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0103cf0	obj/kern/kernel.asm	/^f0103cf0:	75 14                	jne    f0103d06 <print_trapframe+0xaf>$/;"	l
f0103cf2	obj/kern/kernel.asm	/^f0103cf2:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0103cf5	obj/kern/kernel.asm	/^f0103cf5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103cf8	obj/kern/kernel.asm	/^f0103cf8:	50                   	push   %eax$/;"	l
f0103cf9	obj/kern/kernel.asm	/^f0103cf9:	68 ff 74 10 f0       	push   $0xf01074ff$/;"	l
f0103cfe	obj/kern/kernel.asm	/^f0103cfe:	e8 a7 f9 ff ff       	call   f01036aa <cprintf>$/;"	l
f0103d03	obj/kern/kernel.asm	/^f0103d03:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d06	obj/kern/kernel.asm	/^f0103d06:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103d09	obj/kern/kernel.asm	/^f0103d09:	ff 73 2c             	pushl  0x2c(%ebx)$/;"	l
f0103d0c	obj/kern/kernel.asm	/^f0103d0c:	68 0e 75 10 f0       	push   $0xf010750e$/;"	l
f0103d11	obj/kern/kernel.asm	/^f0103d11:	e8 94 f9 ff ff       	call   f01036aa <cprintf>$/;"	l
f0103d16	obj/kern/kernel.asm	/^f0103d16:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d19	obj/kern/kernel.asm	/^f0103d19:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0103d1d	obj/kern/kernel.asm	/^f0103d1d:	75 49                	jne    f0103d68 <print_trapframe+0x111>$/;"	l
f0103d1f	obj/kern/kernel.asm	/^f0103d1f:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0103d22	obj/kern/kernel.asm	/^f0103d22:	89 c2                	mov    %eax,%edx$/;"	l
f0103d24	obj/kern/kernel.asm	/^f0103d24:	83 e2 01             	and    $0x1,%edx$/;"	l
f0103d27	obj/kern/kernel.asm	/^f0103d27:	ba 8d 74 10 f0       	mov    $0xf010748d,%edx$/;"	l
f0103d2c	obj/kern/kernel.asm	/^f0103d2c:	b9 82 74 10 f0       	mov    $0xf0107482,%ecx$/;"	l
f0103d31	obj/kern/kernel.asm	/^f0103d31:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f0103d34	obj/kern/kernel.asm	/^f0103d34:	89 c2                	mov    %eax,%edx$/;"	l
f0103d36	obj/kern/kernel.asm	/^f0103d36:	83 e2 02             	and    $0x2,%edx$/;"	l
f0103d39	obj/kern/kernel.asm	/^f0103d39:	ba 9f 74 10 f0       	mov    $0xf010749f,%edx$/;"	l
f0103d3e	obj/kern/kernel.asm	/^f0103d3e:	be 99 74 10 f0       	mov    $0xf0107499,%esi$/;"	l
f0103d43	obj/kern/kernel.asm	/^f0103d43:	0f 45 d6             	cmovne %esi,%edx$/;"	l
f0103d46	obj/kern/kernel.asm	/^f0103d46:	83 e0 04             	and    $0x4,%eax$/;"	l
f0103d49	obj/kern/kernel.asm	/^f0103d49:	be f4 75 10 f0       	mov    $0xf01075f4,%esi$/;"	l
f0103d4e	obj/kern/kernel.asm	/^f0103d4e:	b8 a4 74 10 f0       	mov    $0xf01074a4,%eax$/;"	l
f0103d53	obj/kern/kernel.asm	/^f0103d53:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f0103d56	obj/kern/kernel.asm	/^f0103d56:	51                   	push   %ecx$/;"	l
f0103d57	obj/kern/kernel.asm	/^f0103d57:	52                   	push   %edx$/;"	l
f0103d58	obj/kern/kernel.asm	/^f0103d58:	50                   	push   %eax$/;"	l
f0103d59	obj/kern/kernel.asm	/^f0103d59:	68 1c 75 10 f0       	push   $0xf010751c$/;"	l
f0103d5e	obj/kern/kernel.asm	/^f0103d5e:	e8 47 f9 ff ff       	call   f01036aa <cprintf>$/;"	l
f0103d63	obj/kern/kernel.asm	/^f0103d63:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d66	obj/kern/kernel.asm	/^f0103d66:	eb 10                	jmp    f0103d78 <print_trapframe+0x121>$/;"	l
f0103d68	obj/kern/kernel.asm	/^f0103d68:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103d6b	obj/kern/kernel.asm	/^f0103d6b:	68 d2 72 10 f0       	push   $0xf01072d2$/;"	l
f0103d70	obj/kern/kernel.asm	/^f0103d70:	e8 35 f9 ff ff       	call   f01036aa <cprintf>$/;"	l
f0103d75	obj/kern/kernel.asm	/^f0103d75:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d78	obj/kern/kernel.asm	/^f0103d78:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103d7b	obj/kern/kernel.asm	/^f0103d7b:	ff 73 30             	pushl  0x30(%ebx)$/;"	l
f0103d7e	obj/kern/kernel.asm	/^f0103d7e:	68 2b 75 10 f0       	push   $0xf010752b$/;"	l
f0103d83	obj/kern/kernel.asm	/^f0103d83:	e8 22 f9 ff ff       	call   f01036aa <cprintf>$/;"	l
f0103d88	obj/kern/kernel.asm	/^f0103d88:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103d8b	obj/kern/kernel.asm	/^f0103d8b:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f0103d8f	obj/kern/kernel.asm	/^f0103d8f:	50                   	push   %eax$/;"	l
f0103d90	obj/kern/kernel.asm	/^f0103d90:	68 3a 75 10 f0       	push   $0xf010753a$/;"	l
f0103d95	obj/kern/kernel.asm	/^f0103d95:	e8 10 f9 ff ff       	call   f01036aa <cprintf>$/;"	l
f0103d9a	obj/kern/kernel.asm	/^f0103d9a:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103d9d	obj/kern/kernel.asm	/^f0103d9d:	ff 73 38             	pushl  0x38(%ebx)$/;"	l
f0103da0	obj/kern/kernel.asm	/^f0103da0:	68 4d 75 10 f0       	push   $0xf010754d$/;"	l
f0103da5	obj/kern/kernel.asm	/^f0103da5:	e8 00 f9 ff ff       	call   f01036aa <cprintf>$/;"	l
f0103daa	obj/kern/kernel.asm	/^f0103daa:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103dad	obj/kern/kernel.asm	/^f0103dad:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0103db1	obj/kern/kernel.asm	/^f0103db1:	74 25                	je     f0103dd8 <print_trapframe+0x181>$/;"	l
f0103db3	obj/kern/kernel.asm	/^f0103db3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103db6	obj/kern/kernel.asm	/^f0103db6:	ff 73 3c             	pushl  0x3c(%ebx)$/;"	l
f0103db9	obj/kern/kernel.asm	/^f0103db9:	68 5c 75 10 f0       	push   $0xf010755c$/;"	l
f0103dbe	obj/kern/kernel.asm	/^f0103dbe:	e8 e7 f8 ff ff       	call   f01036aa <cprintf>$/;"	l
f0103dc3	obj/kern/kernel.asm	/^f0103dc3:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103dc6	obj/kern/kernel.asm	/^f0103dc6:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f0103dca	obj/kern/kernel.asm	/^f0103dca:	50                   	push   %eax$/;"	l
f0103dcb	obj/kern/kernel.asm	/^f0103dcb:	68 6b 75 10 f0       	push   $0xf010756b$/;"	l
f0103dd0	obj/kern/kernel.asm	/^f0103dd0:	e8 d5 f8 ff ff       	call   f01036aa <cprintf>$/;"	l
f0103dd5	obj/kern/kernel.asm	/^f0103dd5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103dd8	obj/kern/kernel.asm	/^f0103dd8:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0103ddb	obj/kern/kernel.asm	/^f0103ddb:	5b                   	pop    %ebx$/;"	l
f0103ddc	obj/kern/kernel.asm	/^f0103ddc:	5e                   	pop    %esi$/;"	l
f0103ddd	obj/kern/kernel.asm	/^f0103ddd:	5d                   	pop    %ebp$/;"	l
f0103dde	obj/kern/kernel.asm	/^f0103dde:	c3                   	ret    $/;"	l
f0103ddf	obj/kern/kernel.asm	/^f0103ddf <page_fault_handler>:$/;"	l
f0103ddf	obj/kern/kernel.asm	/^f0103ddf:	55                   	push   %ebp$/;"	l
f0103de0	obj/kern/kernel.asm	/^f0103de0:	89 e5                	mov    %esp,%ebp$/;"	l
f0103de2	obj/kern/kernel.asm	/^f0103de2:	57                   	push   %edi$/;"	l
f0103de3	obj/kern/kernel.asm	/^f0103de3:	56                   	push   %esi$/;"	l
f0103de4	obj/kern/kernel.asm	/^f0103de4:	53                   	push   %ebx$/;"	l
f0103de5	obj/kern/kernel.asm	/^f0103de5:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103de8	obj/kern/kernel.asm	/^f0103de8:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103deb	obj/kern/kernel.asm	/^f0103deb:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0103dee	obj/kern/kernel.asm	/^f0103dee:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103df1	obj/kern/kernel.asm	/^f0103df1:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0103df5	obj/kern/kernel.asm	/^f0103df5:	75 17                	jne    f0103e0e <page_fault_handler+0x2f>$/;"	l
f0103df7	obj/kern/kernel.asm	/^f0103df7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103dfa	obj/kern/kernel.asm	/^f0103dfa:	68 7e 75 10 f0       	push   $0xf010757e$/;"	l
f0103dff	obj/kern/kernel.asm	/^f0103dff:	68 69 01 00 00       	push   $0x169$/;"	l
f0103e04	obj/kern/kernel.asm	/^f0103e04:	68 99 75 10 f0       	push   $0xf0107599$/;"	l
f0103e09	obj/kern/kernel.asm	/^f0103e09:	e8 32 c2 ff ff       	call   f0100040 <_panic>$/;"	l
f0103e0e	obj/kern/kernel.asm	/^f0103e0e:	e8 bf 1b 00 00       	call   f01059d2 <cpunum>$/;"	l
f0103e13	obj/kern/kernel.asm	/^f0103e13:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e16	obj/kern/kernel.asm	/^f0103e16:	8b 80 28 60 1e f0    	mov    -0xfe19fd8(%eax),%eax$/;"	l
f0103e1c	obj/kern/kernel.asm	/^f0103e1c:	83 78 64 00          	cmpl   $0x0,0x64(%eax)$/;"	l
f0103e20	obj/kern/kernel.asm	/^f0103e20:	0f 84 8e 00 00 00    	je     f0103eb4 <page_fault_handler+0xd5>$/;"	l
f0103e26	obj/kern/kernel.asm	/^f0103e26:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0103e29	obj/kern/kernel.asm	/^f0103e29:	8d 90 00 10 40 11    	lea    0x11401000(%eax),%edx$/;"	l
f0103e2f	obj/kern/kernel.asm	/^f0103e2f:	83 e8 38             	sub    $0x38,%eax$/;"	l
f0103e32	obj/kern/kernel.asm	/^f0103e32:	81 fa ff 0f 00 00    	cmp    $0xfff,%edx$/;"	l
f0103e38	obj/kern/kernel.asm	/^f0103e38:	ba cc ff bf ee       	mov    $0xeebfffcc,%edx$/;"	l
f0103e3d	obj/kern/kernel.asm	/^f0103e3d:	0f 46 d0             	cmovbe %eax,%edx$/;"	l
f0103e40	obj/kern/kernel.asm	/^f0103e40:	89 d7                	mov    %edx,%edi$/;"	l
f0103e42	obj/kern/kernel.asm	/^f0103e42:	e8 8b 1b 00 00       	call   f01059d2 <cpunum>$/;"	l
f0103e47	obj/kern/kernel.asm	/^f0103e47:	6a 06                	push   $0x6$/;"	l
f0103e49	obj/kern/kernel.asm	/^f0103e49:	6a 34                	push   $0x34$/;"	l
f0103e4b	obj/kern/kernel.asm	/^f0103e4b:	57                   	push   %edi$/;"	l
f0103e4c	obj/kern/kernel.asm	/^f0103e4c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e4f	obj/kern/kernel.asm	/^f0103e4f:	ff b0 28 60 1e f0    	pushl  -0xfe19fd8(%eax)$/;"	l
f0103e55	obj/kern/kernel.asm	/^f0103e55:	e8 f4 ee ff ff       	call   f0102d4e <user_mem_assert>$/;"	l
f0103e5a	obj/kern/kernel.asm	/^f0103e5a:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0103e5d	obj/kern/kernel.asm	/^f0103e5d:	89 fa                	mov    %edi,%edx$/;"	l
f0103e5f	obj/kern/kernel.asm	/^f0103e5f:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f0103e62	obj/kern/kernel.asm	/^f0103e62:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f0103e65	obj/kern/kernel.asm	/^f0103e65:	89 47 2c             	mov    %eax,0x2c(%edi)$/;"	l
f0103e68	obj/kern/kernel.asm	/^f0103e68:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0103e6b	obj/kern/kernel.asm	/^f0103e6b:	89 47 28             	mov    %eax,0x28(%edi)$/;"	l
f0103e6e	obj/kern/kernel.asm	/^f0103e6e:	8d 7f 08             	lea    0x8(%edi),%edi$/;"	l
f0103e71	obj/kern/kernel.asm	/^f0103e71:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f0103e76	obj/kern/kernel.asm	/^f0103e76:	89 de                	mov    %ebx,%esi$/;"	l
f0103e78	obj/kern/kernel.asm	/^f0103e78:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0103e7a	obj/kern/kernel.asm	/^f0103e7a:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f0103e7d	obj/kern/kernel.asm	/^f0103e7d:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
f0103e80	obj/kern/kernel.asm	/^f0103e80:	89 d7                	mov    %edx,%edi$/;"	l
f0103e82	obj/kern/kernel.asm	/^f0103e82:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103e85	obj/kern/kernel.asm	/^f0103e85:	89 02                	mov    %eax,(%edx)$/;"	l
f0103e87	obj/kern/kernel.asm	/^f0103e87:	e8 46 1b 00 00       	call   f01059d2 <cpunum>$/;"	l
f0103e8c	obj/kern/kernel.asm	/^f0103e8c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e8f	obj/kern/kernel.asm	/^f0103e8f:	8b 80 28 60 1e f0    	mov    -0xfe19fd8(%eax),%eax$/;"	l
f0103e95	obj/kern/kernel.asm	/^f0103e95:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f0103e98	obj/kern/kernel.asm	/^f0103e98:	89 43 30             	mov    %eax,0x30(%ebx)$/;"	l
f0103e9b	obj/kern/kernel.asm	/^f0103e9b:	89 7b 3c             	mov    %edi,0x3c(%ebx)$/;"	l
f0103e9e	obj/kern/kernel.asm	/^f0103e9e:	e8 2f 1b 00 00       	call   f01059d2 <cpunum>$/;"	l
f0103ea3	obj/kern/kernel.asm	/^f0103ea3:	83 c4 04             	add    $0x4,%esp$/;"	l
f0103ea6	obj/kern/kernel.asm	/^f0103ea6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ea9	obj/kern/kernel.asm	/^f0103ea9:	ff b0 28 60 1e f0    	pushl  -0xfe19fd8(%eax)$/;"	l
f0103eaf	obj/kern/kernel.asm	/^f0103eaf:	e8 a5 f5 ff ff       	call   f0103459 <env_run>$/;"	l
f0103eb4	obj/kern/kernel.asm	/^f0103eb4:	8b 73 30             	mov    0x30(%ebx),%esi$/;"	l
f0103eb7	obj/kern/kernel.asm	/^f0103eb7:	e8 16 1b 00 00       	call   f01059d2 <cpunum>$/;"	l
f0103ebc	obj/kern/kernel.asm	/^f0103ebc:	56                   	push   %esi$/;"	l
f0103ebd	obj/kern/kernel.asm	/^f0103ebd:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0103ec0	obj/kern/kernel.asm	/^f0103ec0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ec3	obj/kern/kernel.asm	/^f0103ec3:	8b 80 28 60 1e f0    	mov    -0xfe19fd8(%eax),%eax$/;"	l
f0103ec9	obj/kern/kernel.asm	/^f0103ec9:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0103ecc	obj/kern/kernel.asm	/^f0103ecc:	68 40 77 10 f0       	push   $0xf0107740$/;"	l
f0103ed1	obj/kern/kernel.asm	/^f0103ed1:	e8 d4 f7 ff ff       	call   f01036aa <cprintf>$/;"	l
f0103ed6	obj/kern/kernel.asm	/^f0103ed6:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103ed9	obj/kern/kernel.asm	/^f0103ed9:	e8 79 fd ff ff       	call   f0103c57 <print_trapframe>$/;"	l
f0103ede	obj/kern/kernel.asm	/^f0103ede:	e8 ef 1a 00 00       	call   f01059d2 <cpunum>$/;"	l
f0103ee3	obj/kern/kernel.asm	/^f0103ee3:	83 c4 04             	add    $0x4,%esp$/;"	l
f0103ee6	obj/kern/kernel.asm	/^f0103ee6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ee9	obj/kern/kernel.asm	/^f0103ee9:	ff b0 28 60 1e f0    	pushl  -0xfe19fd8(%eax)$/;"	l
f0103eef	obj/kern/kernel.asm	/^f0103eef:	e8 c6 f4 ff ff       	call   f01033ba <env_destroy>$/;"	l
f0103ef4	obj/kern/kernel.asm	/^f0103ef4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ef7	obj/kern/kernel.asm	/^f0103ef7:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103efa	obj/kern/kernel.asm	/^f0103efa:	5b                   	pop    %ebx$/;"	l
f0103efb	obj/kern/kernel.asm	/^f0103efb:	5e                   	pop    %esi$/;"	l
f0103efc	obj/kern/kernel.asm	/^f0103efc:	5f                   	pop    %edi$/;"	l
f0103efd	obj/kern/kernel.asm	/^f0103efd:	5d                   	pop    %ebp$/;"	l
f0103efe	obj/kern/kernel.asm	/^f0103efe:	c3                   	ret    $/;"	l
f0103eff	obj/kern/kernel.asm	/^f0103eff <trap>:$/;"	l
f0103eff	obj/kern/kernel.asm	/^f0103eff:	55                   	push   %ebp$/;"	l
f0103f00	obj/kern/kernel.asm	/^f0103f00:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f02	obj/kern/kernel.asm	/^f0103f02:	57                   	push   %edi$/;"	l
f0103f03	obj/kern/kernel.asm	/^f0103f03:	56                   	push   %esi$/;"	l
f0103f04	obj/kern/kernel.asm	/^f0103f04:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103f07	obj/kern/kernel.asm	/^f0103f07:	fc                   	cld    $/;"	l
f0103f08	obj/kern/kernel.asm	/^f0103f08:	83 3d 80 5e 1e f0 00 	cmpl   $0x0,0xf01e5e80$/;"	l
f0103f0f	obj/kern/kernel.asm	/^f0103f0f:	74 01                	je     f0103f12 <trap+0x13>$/;"	l
f0103f11	obj/kern/kernel.asm	/^f0103f11:	f4                   	hlt    $/;"	l
f0103f12	obj/kern/kernel.asm	/^f0103f12:	e8 bb 1a 00 00       	call   f01059d2 <cpunum>$/;"	l
f0103f17	obj/kern/kernel.asm	/^f0103f17:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0103f1a	obj/kern/kernel.asm	/^f0103f1a:	81 c2 20 60 1e f0    	add    $0xf01e6020,%edx$/;"	l
f0103f20	obj/kern/kernel.asm	/^f0103f20:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0103f25	obj/kern/kernel.asm	/^f0103f25:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0103f29	obj/kern/kernel.asm	/^f0103f29:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0103f2c	obj/kern/kernel.asm	/^f0103f2c:	75 10                	jne    f0103f3e <trap+0x3f>$/;"	l
f0103f2e	obj/kern/kernel.asm	/^f0103f2e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103f31	obj/kern/kernel.asm	/^f0103f31:	68 c0 03 12 f0       	push   $0xf01203c0$/;"	l
f0103f36	obj/kern/kernel.asm	/^f0103f36:	e8 05 1d 00 00       	call   f0105c40 <spin_lock>$/;"	l
f0103f3b	obj/kern/kernel.asm	/^f0103f3b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f3e	obj/kern/kernel.asm	/^f0103f3e:	9c                   	pushf  $/;"	l
f0103f3f	obj/kern/kernel.asm	/^f0103f3f:	58                   	pop    %eax$/;"	l
f0103f40	obj/kern/kernel.asm	/^f0103f40:	f6 c4 02             	test   $0x2,%ah$/;"	l
f0103f43	obj/kern/kernel.asm	/^f0103f43:	74 19                	je     f0103f5e <trap+0x5f>$/;"	l
f0103f45	obj/kern/kernel.asm	/^f0103f45:	68 a5 75 10 f0       	push   $0xf01075a5$/;"	l
f0103f4a	obj/kern/kernel.asm	/^f0103f4a:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0103f4f	obj/kern/kernel.asm	/^f0103f4f:	68 32 01 00 00       	push   $0x132$/;"	l
f0103f54	obj/kern/kernel.asm	/^f0103f54:	68 99 75 10 f0       	push   $0xf0107599$/;"	l
f0103f59	obj/kern/kernel.asm	/^f0103f59:	e8 e2 c0 ff ff       	call   f0100040 <_panic>$/;"	l
f0103f5e	obj/kern/kernel.asm	/^f0103f5e:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0103f62	obj/kern/kernel.asm	/^f0103f62:	83 e0 03             	and    $0x3,%eax$/;"	l
f0103f65	obj/kern/kernel.asm	/^f0103f65:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f0103f69	obj/kern/kernel.asm	/^f0103f69:	0f 85 a0 00 00 00    	jne    f010400f <trap+0x110>$/;"	l
f0103f6f	obj/kern/kernel.asm	/^f0103f6f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103f72	obj/kern/kernel.asm	/^f0103f72:	68 c0 03 12 f0       	push   $0xf01203c0$/;"	l
f0103f77	obj/kern/kernel.asm	/^f0103f77:	e8 c4 1c 00 00       	call   f0105c40 <spin_lock>$/;"	l
f0103f7c	obj/kern/kernel.asm	/^f0103f7c:	e8 51 1a 00 00       	call   f01059d2 <cpunum>$/;"	l
f0103f81	obj/kern/kernel.asm	/^f0103f81:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f84	obj/kern/kernel.asm	/^f0103f84:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f87	obj/kern/kernel.asm	/^f0103f87:	83 b8 28 60 1e f0 00 	cmpl   $0x0,-0xfe19fd8(%eax)$/;"	l
f0103f8e	obj/kern/kernel.asm	/^f0103f8e:	75 19                	jne    f0103fa9 <trap+0xaa>$/;"	l
f0103f90	obj/kern/kernel.asm	/^f0103f90:	68 be 75 10 f0       	push   $0xf01075be$/;"	l
f0103f95	obj/kern/kernel.asm	/^f0103f95:	68 e3 6f 10 f0       	push   $0xf0106fe3$/;"	l
f0103f9a	obj/kern/kernel.asm	/^f0103f9a:	68 3a 01 00 00       	push   $0x13a$/;"	l
f0103f9f	obj/kern/kernel.asm	/^f0103f9f:	68 99 75 10 f0       	push   $0xf0107599$/;"	l
f0103fa4	obj/kern/kernel.asm	/^f0103fa4:	e8 97 c0 ff ff       	call   f0100040 <_panic>$/;"	l
f0103fa9	obj/kern/kernel.asm	/^f0103fa9:	e8 24 1a 00 00       	call   f01059d2 <cpunum>$/;"	l
f0103fae	obj/kern/kernel.asm	/^f0103fae:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103fb1	obj/kern/kernel.asm	/^f0103fb1:	8b 80 28 60 1e f0    	mov    -0xfe19fd8(%eax),%eax$/;"	l
f0103fb7	obj/kern/kernel.asm	/^f0103fb7:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f0103fbb	obj/kern/kernel.asm	/^f0103fbb:	75 2d                	jne    f0103fea <trap+0xeb>$/;"	l
f0103fbd	obj/kern/kernel.asm	/^f0103fbd:	e8 10 1a 00 00       	call   f01059d2 <cpunum>$/;"	l
f0103fc2	obj/kern/kernel.asm	/^f0103fc2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103fc5	obj/kern/kernel.asm	/^f0103fc5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103fc8	obj/kern/kernel.asm	/^f0103fc8:	ff b0 28 60 1e f0    	pushl  -0xfe19fd8(%eax)$/;"	l
f0103fce	obj/kern/kernel.asm	/^f0103fce:	e8 41 f2 ff ff       	call   f0103214 <env_free>$/;"	l
f0103fd3	obj/kern/kernel.asm	/^f0103fd3:	e8 fa 19 00 00       	call   f01059d2 <cpunum>$/;"	l
f0103fd8	obj/kern/kernel.asm	/^f0103fd8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103fdb	obj/kern/kernel.asm	/^f0103fdb:	c7 80 28 60 1e f0 00 	movl   $0x0,-0xfe19fd8(%eax)$/;"	l
f0103fe2	obj/kern/kernel.asm	/^f0103fe2:	00 00 00 $/;"	l
f0103fe5	obj/kern/kernel.asm	/^f0103fe5:	e8 a6 02 00 00       	call   f0104290 <sched_yield>$/;"	l
f0103fea	obj/kern/kernel.asm	/^f0103fea:	e8 e3 19 00 00       	call   f01059d2 <cpunum>$/;"	l
f0103fef	obj/kern/kernel.asm	/^f0103fef:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ff2	obj/kern/kernel.asm	/^f0103ff2:	8b 80 28 60 1e f0    	mov    -0xfe19fd8(%eax),%eax$/;"	l
f0103ff8	obj/kern/kernel.asm	/^f0103ff8:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0103ffd	obj/kern/kernel.asm	/^f0103ffd:	89 c7                	mov    %eax,%edi$/;"	l
f0103fff	obj/kern/kernel.asm	/^f0103fff:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104001	obj/kern/kernel.asm	/^f0104001:	e8 cc 19 00 00       	call   f01059d2 <cpunum>$/;"	l
f0104006	obj/kern/kernel.asm	/^f0104006:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104009	obj/kern/kernel.asm	/^f0104009:	8b b0 28 60 1e f0    	mov    -0xfe19fd8(%eax),%esi$/;"	l
f010400f	obj/kern/kernel.asm	/^f010400f:	89 35 60 5a 1e f0    	mov    %esi,0xf01e5a60$/;"	l
f0104015	obj/kern/kernel.asm	/^f0104015:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0104018	obj/kern/kernel.asm	/^f0104018:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f010401b	obj/kern/kernel.asm	/^f010401b:	75 11                	jne    f010402e <trap+0x12f>$/;"	l
f010401d	obj/kern/kernel.asm	/^f010401d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104020	obj/kern/kernel.asm	/^f0104020:	56                   	push   %esi$/;"	l
f0104021	obj/kern/kernel.asm	/^f0104021:	e8 0d c9 ff ff       	call   f0100933 <monitor>$/;"	l
f0104026	obj/kern/kernel.asm	/^f0104026:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104029	obj/kern/kernel.asm	/^f0104029:	e9 ad 00 00 00       	jmp    f01040db <trap+0x1dc>$/;"	l
f010402e	obj/kern/kernel.asm	/^f010402e:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104031	obj/kern/kernel.asm	/^f0104031:	75 24                	jne    f0104057 <trap+0x158>$/;"	l
f0104033	obj/kern/kernel.asm	/^f0104033:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104036	obj/kern/kernel.asm	/^f0104036:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f0104039	obj/kern/kernel.asm	/^f0104039:	ff 36                	pushl  (%esi)$/;"	l
f010403b	obj/kern/kernel.asm	/^f010403b:	ff 76 10             	pushl  0x10(%esi)$/;"	l
f010403e	obj/kern/kernel.asm	/^f010403e:	ff 76 18             	pushl  0x18(%esi)$/;"	l
f0104041	obj/kern/kernel.asm	/^f0104041:	ff 76 14             	pushl  0x14(%esi)$/;"	l
f0104044	obj/kern/kernel.asm	/^f0104044:	ff 76 1c             	pushl  0x1c(%esi)$/;"	l
f0104047	obj/kern/kernel.asm	/^f0104047:	e8 cd 02 00 00       	call   f0104319 <syscall>$/;"	l
f010404c	obj/kern/kernel.asm	/^f010404c:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f010404f	obj/kern/kernel.asm	/^f010404f:	83 c4 20             	add    $0x20,%esp$/;"	l
f0104052	obj/kern/kernel.asm	/^f0104052:	e9 84 00 00 00       	jmp    f01040db <trap+0x1dc>$/;"	l
f0104057	obj/kern/kernel.asm	/^f0104057:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f010405a	obj/kern/kernel.asm	/^f010405a:	75 0e                	jne    f010406a <trap+0x16b>$/;"	l
f010405c	obj/kern/kernel.asm	/^f010405c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010405f	obj/kern/kernel.asm	/^f010405f:	56                   	push   %esi$/;"	l
f0104060	obj/kern/kernel.asm	/^f0104060:	e8 7a fd ff ff       	call   f0103ddf <page_fault_handler>$/;"	l
f0104065	obj/kern/kernel.asm	/^f0104065:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104068	obj/kern/kernel.asm	/^f0104068:	eb 71                	jmp    f01040db <trap+0x1dc>$/;"	l
f010406a	obj/kern/kernel.asm	/^f010406a:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f010406d	obj/kern/kernel.asm	/^f010406d:	75 1a                	jne    f0104089 <trap+0x18a>$/;"	l
f010406f	obj/kern/kernel.asm	/^f010406f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104072	obj/kern/kernel.asm	/^f0104072:	68 c5 75 10 f0       	push   $0xf01075c5$/;"	l
f0104077	obj/kern/kernel.asm	/^f0104077:	e8 2e f6 ff ff       	call   f01036aa <cprintf>$/;"	l
f010407c	obj/kern/kernel.asm	/^f010407c:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010407f	obj/kern/kernel.asm	/^f010407f:	e8 d3 fb ff ff       	call   f0103c57 <print_trapframe>$/;"	l
f0104084	obj/kern/kernel.asm	/^f0104084:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104087	obj/kern/kernel.asm	/^f0104087:	eb 52                	jmp    f01040db <trap+0x1dc>$/;"	l
f0104089	obj/kern/kernel.asm	/^f0104089:	83 f8 20             	cmp    $0x20,%eax$/;"	l
f010408c	obj/kern/kernel.asm	/^f010408c:	75 0a                	jne    f0104098 <trap+0x199>$/;"	l
f010408e	obj/kern/kernel.asm	/^f010408e:	e8 8a 1a 00 00       	call   f0105b1d <lapic_eoi>$/;"	l
f0104093	obj/kern/kernel.asm	/^f0104093:	e8 f8 01 00 00       	call   f0104290 <sched_yield>$/;"	l
f0104098	obj/kern/kernel.asm	/^f0104098:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010409b	obj/kern/kernel.asm	/^f010409b:	56                   	push   %esi$/;"	l
f010409c	obj/kern/kernel.asm	/^f010409c:	e8 b6 fb ff ff       	call   f0103c57 <print_trapframe>$/;"	l
f01040a1	obj/kern/kernel.asm	/^f01040a1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01040a4	obj/kern/kernel.asm	/^f01040a4:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f01040a9	obj/kern/kernel.asm	/^f01040a9:	75 17                	jne    f01040c2 <trap+0x1c3>$/;"	l
f01040ab	obj/kern/kernel.asm	/^f01040ab:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01040ae	obj/kern/kernel.asm	/^f01040ae:	68 e2 75 10 f0       	push   $0xf01075e2$/;"	l
f01040b3	obj/kern/kernel.asm	/^f01040b3:	68 18 01 00 00       	push   $0x118$/;"	l
f01040b8	obj/kern/kernel.asm	/^f01040b8:	68 99 75 10 f0       	push   $0xf0107599$/;"	l
f01040bd	obj/kern/kernel.asm	/^f01040bd:	e8 7e bf ff ff       	call   f0100040 <_panic>$/;"	l
f01040c2	obj/kern/kernel.asm	/^f01040c2:	e8 0b 19 00 00       	call   f01059d2 <cpunum>$/;"	l
f01040c7	obj/kern/kernel.asm	/^f01040c7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01040ca	obj/kern/kernel.asm	/^f01040ca:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040cd	obj/kern/kernel.asm	/^f01040cd:	ff b0 28 60 1e f0    	pushl  -0xfe19fd8(%eax)$/;"	l
f01040d3	obj/kern/kernel.asm	/^f01040d3:	e8 e2 f2 ff ff       	call   f01033ba <env_destroy>$/;"	l
f01040d8	obj/kern/kernel.asm	/^f01040d8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01040db	obj/kern/kernel.asm	/^f01040db:	e8 f2 18 00 00       	call   f01059d2 <cpunum>$/;"	l
f01040e0	obj/kern/kernel.asm	/^f01040e0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040e3	obj/kern/kernel.asm	/^f01040e3:	83 b8 28 60 1e f0 00 	cmpl   $0x0,-0xfe19fd8(%eax)$/;"	l
f01040ea	obj/kern/kernel.asm	/^f01040ea:	74 2a                	je     f0104116 <trap+0x217>$/;"	l
f01040ec	obj/kern/kernel.asm	/^f01040ec:	e8 e1 18 00 00       	call   f01059d2 <cpunum>$/;"	l
f01040f1	obj/kern/kernel.asm	/^f01040f1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040f4	obj/kern/kernel.asm	/^f01040f4:	8b 80 28 60 1e f0    	mov    -0xfe19fd8(%eax),%eax$/;"	l
f01040fa	obj/kern/kernel.asm	/^f01040fa:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f01040fe	obj/kern/kernel.asm	/^f01040fe:	75 16                	jne    f0104116 <trap+0x217>$/;"	l
f0104100	obj/kern/kernel.asm	/^f0104100:	e8 cd 18 00 00       	call   f01059d2 <cpunum>$/;"	l
f0104105	obj/kern/kernel.asm	/^f0104105:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104108	obj/kern/kernel.asm	/^f0104108:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010410b	obj/kern/kernel.asm	/^f010410b:	ff b0 28 60 1e f0    	pushl  -0xfe19fd8(%eax)$/;"	l
f0104111	obj/kern/kernel.asm	/^f0104111:	e8 43 f3 ff ff       	call   f0103459 <env_run>$/;"	l
f0104116	obj/kern/kernel.asm	/^f0104116:	e8 75 01 00 00       	call   f0104290 <sched_yield>$/;"	l
f010411b	obj/kern/kernel.asm	/^f010411b:	90                   	nop$/;"	l
f010411c	obj/kern/kernel.asm	/^f010411c <divide_handler>:$/;"	l
f010411c	obj/kern/kernel.asm	/^f010411c:	6a 00                	push   $0x0$/;"	l
f010411e	obj/kern/kernel.asm	/^f010411e:	6a 00                	push   $0x0$/;"	l
f0104120	obj/kern/kernel.asm	/^f0104120:	e9 85 00 00 00       	jmp    f01041aa <_alltraps>$/;"	l
f0104125	obj/kern/kernel.asm	/^f0104125:	90                   	nop$/;"	l
f0104126	obj/kern/kernel.asm	/^f0104126 <debug_handler>:$/;"	l
f0104126	obj/kern/kernel.asm	/^f0104126:	6a 00                	push   $0x0$/;"	l
f0104128	obj/kern/kernel.asm	/^f0104128:	6a 01                	push   $0x1$/;"	l
f010412a	obj/kern/kernel.asm	/^f010412a:	eb 7e                	jmp    f01041aa <_alltraps>$/;"	l
f010412c	obj/kern/kernel.asm	/^f010412c <nmi_handler>:$/;"	l
f010412c	obj/kern/kernel.asm	/^f010412c:	6a 00                	push   $0x0$/;"	l
f010412e	obj/kern/kernel.asm	/^f010412e:	6a 02                	push   $0x2$/;"	l
f0104130	obj/kern/kernel.asm	/^f0104130:	eb 78                	jmp    f01041aa <_alltraps>$/;"	l
f0104132	obj/kern/kernel.asm	/^f0104132 <brkpt_handler>:$/;"	l
f0104132	obj/kern/kernel.asm	/^f0104132:	6a 00                	push   $0x0$/;"	l
f0104134	obj/kern/kernel.asm	/^f0104134:	6a 03                	push   $0x3$/;"	l
f0104136	obj/kern/kernel.asm	/^f0104136:	eb 72                	jmp    f01041aa <_alltraps>$/;"	l
f0104138	obj/kern/kernel.asm	/^f0104138 <oflow_handler>:$/;"	l
f0104138	obj/kern/kernel.asm	/^f0104138:	6a 00                	push   $0x0$/;"	l
f010413a	obj/kern/kernel.asm	/^f010413a:	6a 04                	push   $0x4$/;"	l
f010413c	obj/kern/kernel.asm	/^f010413c:	eb 6c                	jmp    f01041aa <_alltraps>$/;"	l
f010413e	obj/kern/kernel.asm	/^f010413e <bound_handler>:$/;"	l
f010413e	obj/kern/kernel.asm	/^f010413e:	6a 00                	push   $0x0$/;"	l
f0104140	obj/kern/kernel.asm	/^f0104140:	6a 05                	push   $0x5$/;"	l
f0104142	obj/kern/kernel.asm	/^f0104142:	eb 66                	jmp    f01041aa <_alltraps>$/;"	l
f0104144	obj/kern/kernel.asm	/^f0104144 <illop_handler>:$/;"	l
f0104144	obj/kern/kernel.asm	/^f0104144:	6a 00                	push   $0x0$/;"	l
f0104146	obj/kern/kernel.asm	/^f0104146:	6a 06                	push   $0x6$/;"	l
f0104148	obj/kern/kernel.asm	/^f0104148:	eb 60                	jmp    f01041aa <_alltraps>$/;"	l
f010414a	obj/kern/kernel.asm	/^f010414a <device_handler>:$/;"	l
f010414a	obj/kern/kernel.asm	/^f010414a:	6a 00                	push   $0x0$/;"	l
f010414c	obj/kern/kernel.asm	/^f010414c:	6a 07                	push   $0x7$/;"	l
f010414e	obj/kern/kernel.asm	/^f010414e:	eb 5a                	jmp    f01041aa <_alltraps>$/;"	l
f0104150	obj/kern/kernel.asm	/^f0104150 <dblflt_handler>:$/;"	l
f0104150	obj/kern/kernel.asm	/^f0104150:	6a 08                	push   $0x8$/;"	l
f0104152	obj/kern/kernel.asm	/^f0104152:	eb 56                	jmp    f01041aa <_alltraps>$/;"	l
f0104154	obj/kern/kernel.asm	/^f0104154 <tss_handler>:$/;"	l
f0104154	obj/kern/kernel.asm	/^f0104154:	6a 0a                	push   $0xa$/;"	l
f0104156	obj/kern/kernel.asm	/^f0104156:	eb 52                	jmp    f01041aa <_alltraps>$/;"	l
f0104158	obj/kern/kernel.asm	/^f0104158 <segnp_handler>:$/;"	l
f0104158	obj/kern/kernel.asm	/^f0104158:	6a 0b                	push   $0xb$/;"	l
f010415a	obj/kern/kernel.asm	/^f010415a:	eb 4e                	jmp    f01041aa <_alltraps>$/;"	l
f010415c	obj/kern/kernel.asm	/^f010415c <stack_handler>:$/;"	l
f010415c	obj/kern/kernel.asm	/^f010415c:	6a 0c                	push   $0xc$/;"	l
f010415e	obj/kern/kernel.asm	/^f010415e:	eb 4a                	jmp    f01041aa <_alltraps>$/;"	l
f0104160	obj/kern/kernel.asm	/^f0104160 <gpflt_handler>:$/;"	l
f0104160	obj/kern/kernel.asm	/^f0104160:	6a 0d                	push   $0xd$/;"	l
f0104162	obj/kern/kernel.asm	/^f0104162:	eb 46                	jmp    f01041aa <_alltraps>$/;"	l
f0104164	obj/kern/kernel.asm	/^f0104164 <pgflt_handler>:$/;"	l
f0104164	obj/kern/kernel.asm	/^f0104164:	6a 0e                	push   $0xe$/;"	l
f0104166	obj/kern/kernel.asm	/^f0104166:	eb 42                	jmp    f01041aa <_alltraps>$/;"	l
f0104168	obj/kern/kernel.asm	/^f0104168 <fperr_handler>:$/;"	l
f0104168	obj/kern/kernel.asm	/^f0104168:	6a 00                	push   $0x0$/;"	l
f010416a	obj/kern/kernel.asm	/^f010416a:	6a 10                	push   $0x10$/;"	l
f010416c	obj/kern/kernel.asm	/^f010416c:	eb 3c                	jmp    f01041aa <_alltraps>$/;"	l
f010416e	obj/kern/kernel.asm	/^f010416e <align_handler>:$/;"	l
f010416e	obj/kern/kernel.asm	/^f010416e:	6a 00                	push   $0x0$/;"	l
f0104170	obj/kern/kernel.asm	/^f0104170:	6a 11                	push   $0x11$/;"	l
f0104172	obj/kern/kernel.asm	/^f0104172:	eb 36                	jmp    f01041aa <_alltraps>$/;"	l
f0104174	obj/kern/kernel.asm	/^f0104174 <mchk_handler>:$/;"	l
f0104174	obj/kern/kernel.asm	/^f0104174:	6a 00                	push   $0x0$/;"	l
f0104176	obj/kern/kernel.asm	/^f0104176:	6a 12                	push   $0x12$/;"	l
f0104178	obj/kern/kernel.asm	/^f0104178:	eb 30                	jmp    f01041aa <_alltraps>$/;"	l
f010417a	obj/kern/kernel.asm	/^f010417a <simderr_handler>:$/;"	l
f010417a	obj/kern/kernel.asm	/^f010417a:	6a 00                	push   $0x0$/;"	l
f010417c	obj/kern/kernel.asm	/^f010417c:	6a 13                	push   $0x13$/;"	l
f010417e	obj/kern/kernel.asm	/^f010417e:	eb 2a                	jmp    f01041aa <_alltraps>$/;"	l
f0104180	obj/kern/kernel.asm	/^f0104180 <syscall_handler>:$/;"	l
f0104180	obj/kern/kernel.asm	/^f0104180:	6a 00                	push   $0x0$/;"	l
f0104182	obj/kern/kernel.asm	/^f0104182:	6a 30                	push   $0x30$/;"	l
f0104184	obj/kern/kernel.asm	/^f0104184:	eb 24                	jmp    f01041aa <_alltraps>$/;"	l
f0104186	obj/kern/kernel.asm	/^f0104186 <irq_timer_handler>:$/;"	l
f0104186	obj/kern/kernel.asm	/^f0104186:	6a 00                	push   $0x0$/;"	l
f0104188	obj/kern/kernel.asm	/^f0104188:	6a 20                	push   $0x20$/;"	l
f010418a	obj/kern/kernel.asm	/^f010418a:	eb 1e                	jmp    f01041aa <_alltraps>$/;"	l
f010418c	obj/kern/kernel.asm	/^f010418c <irq_kbd_handler>:$/;"	l
f010418c	obj/kern/kernel.asm	/^f010418c:	6a 00                	push   $0x0$/;"	l
f010418e	obj/kern/kernel.asm	/^f010418e:	6a 21                	push   $0x21$/;"	l
f0104190	obj/kern/kernel.asm	/^f0104190:	eb 18                	jmp    f01041aa <_alltraps>$/;"	l
f0104192	obj/kern/kernel.asm	/^f0104192 <irq_serial_handler>:$/;"	l
f0104192	obj/kern/kernel.asm	/^f0104192:	6a 00                	push   $0x0$/;"	l
f0104194	obj/kern/kernel.asm	/^f0104194:	6a 24                	push   $0x24$/;"	l
f0104196	obj/kern/kernel.asm	/^f0104196:	eb 12                	jmp    f01041aa <_alltraps>$/;"	l
f0104198	obj/kern/kernel.asm	/^f0104198 <irq_spurious_handler>:$/;"	l
f0104198	obj/kern/kernel.asm	/^f0104198:	6a 00                	push   $0x0$/;"	l
f010419a	obj/kern/kernel.asm	/^f010419a:	6a 27                	push   $0x27$/;"	l
f010419c	obj/kern/kernel.asm	/^f010419c:	eb 0c                	jmp    f01041aa <_alltraps>$/;"	l
f010419e	obj/kern/kernel.asm	/^f010419e <irq_ide_handler>:$/;"	l
f010419e	obj/kern/kernel.asm	/^f010419e:	6a 00                	push   $0x0$/;"	l
f01041a0	obj/kern/kernel.asm	/^f01041a0:	6a 2e                	push   $0x2e$/;"	l
f01041a2	obj/kern/kernel.asm	/^f01041a2:	eb 06                	jmp    f01041aa <_alltraps>$/;"	l
f01041a4	obj/kern/kernel.asm	/^f01041a4 <irq_error_handler>:$/;"	l
f01041a4	obj/kern/kernel.asm	/^f01041a4:	6a 00                	push   $0x0$/;"	l
f01041a6	obj/kern/kernel.asm	/^f01041a6:	6a 33                	push   $0x33$/;"	l
f01041a8	obj/kern/kernel.asm	/^f01041a8:	eb 00                	jmp    f01041aa <_alltraps>$/;"	l
f01041aa	obj/kern/kernel.asm	/^f01041aa <_alltraps>:$/;"	l
f01041aa	obj/kern/kernel.asm	/^f01041aa:	1e                   	push   %ds$/;"	l
f01041ab	obj/kern/kernel.asm	/^f01041ab:	06                   	push   %es$/;"	l
f01041ac	obj/kern/kernel.asm	/^f01041ac:	60                   	pusha  $/;"	l
f01041ad	obj/kern/kernel.asm	/^f01041ad:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01041b2	obj/kern/kernel.asm	/^f01041b2:	8e d8                	mov    %eax,%ds$/;"	l
f01041b4	obj/kern/kernel.asm	/^f01041b4:	8e c0                	mov    %eax,%es$/;"	l
f01041b6	obj/kern/kernel.asm	/^f01041b6:	54                   	push   %esp$/;"	l
f01041b7	obj/kern/kernel.asm	/^f01041b7:	e8 43 fd ff ff       	call   f0103eff <trap>$/;"	l
f01041bc	obj/kern/kernel.asm	/^f01041bc <sched_halt>:$/;"	l
f01041bc	obj/kern/kernel.asm	/^f01041bc:	55                   	push   %ebp$/;"	l
f01041bd	obj/kern/kernel.asm	/^f01041bd:	89 e5                	mov    %esp,%ebp$/;"	l
f01041bf	obj/kern/kernel.asm	/^f01041bf:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01041c2	obj/kern/kernel.asm	/^f01041c2:	a1 48 52 1e f0       	mov    0xf01e5248,%eax$/;"	l
f01041c7	obj/kern/kernel.asm	/^f01041c7:	8d 50 54             	lea    0x54(%eax),%edx$/;"	l
f01041ca	obj/kern/kernel.asm	/^f01041ca:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01041cf	obj/kern/kernel.asm	/^f01041cf:	8b 02                	mov    (%edx),%eax$/;"	l
f01041d1	obj/kern/kernel.asm	/^f01041d1:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01041d4	obj/kern/kernel.asm	/^f01041d4:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f01041d7	obj/kern/kernel.asm	/^f01041d7:	76 10                	jbe    f01041e9 <sched_halt+0x2d>$/;"	l
f01041d9	obj/kern/kernel.asm	/^f01041d9:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01041dc	obj/kern/kernel.asm	/^f01041dc:	83 c2 7c             	add    $0x7c,%edx$/;"	l
f01041df	obj/kern/kernel.asm	/^f01041df:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f01041e5	obj/kern/kernel.asm	/^f01041e5:	75 e8                	jne    f01041cf <sched_halt+0x13>$/;"	l
f01041e7	obj/kern/kernel.asm	/^f01041e7:	eb 08                	jmp    f01041f1 <sched_halt+0x35>$/;"	l
f01041e9	obj/kern/kernel.asm	/^f01041e9:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f01041ef	obj/kern/kernel.asm	/^f01041ef:	75 1f                	jne    f0104210 <sched_halt+0x54>$/;"	l
f01041f1	obj/kern/kernel.asm	/^f01041f1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01041f4	obj/kern/kernel.asm	/^f01041f4:	68 d0 77 10 f0       	push   $0xf01077d0$/;"	l
f01041f9	obj/kern/kernel.asm	/^f01041f9:	e8 ac f4 ff ff       	call   f01036aa <cprintf>$/;"	l
f01041fe	obj/kern/kernel.asm	/^f01041fe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104201	obj/kern/kernel.asm	/^f0104201:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104204	obj/kern/kernel.asm	/^f0104204:	6a 00                	push   $0x0$/;"	l
f0104206	obj/kern/kernel.asm	/^f0104206:	e8 28 c7 ff ff       	call   f0100933 <monitor>$/;"	l
f010420b	obj/kern/kernel.asm	/^f010420b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010420e	obj/kern/kernel.asm	/^f010420e:	eb f1                	jmp    f0104201 <sched_halt+0x45>$/;"	l
f0104210	obj/kern/kernel.asm	/^f0104210:	e8 bd 17 00 00       	call   f01059d2 <cpunum>$/;"	l
f0104215	obj/kern/kernel.asm	/^f0104215:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104218	obj/kern/kernel.asm	/^f0104218:	c7 80 28 60 1e f0 00 	movl   $0x0,-0xfe19fd8(%eax)$/;"	l
f010421f	obj/kern/kernel.asm	/^f010421f:	00 00 00 $/;"	l
f0104222	obj/kern/kernel.asm	/^f0104222:	a1 8c 5e 1e f0       	mov    0xf01e5e8c,%eax$/;"	l
f0104227	obj/kern/kernel.asm	/^f0104227:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010422c	obj/kern/kernel.asm	/^f010422c:	77 12                	ja     f0104240 <sched_halt+0x84>$/;"	l
f010422e	obj/kern/kernel.asm	/^f010422e:	50                   	push   %eax$/;"	l
f010422f	obj/kern/kernel.asm	/^f010422f:	68 a8 60 10 f0       	push   $0xf01060a8$/;"	l
f0104234	obj/kern/kernel.asm	/^f0104234:	6a 50                	push   $0x50$/;"	l
f0104236	obj/kern/kernel.asm	/^f0104236:	68 f9 77 10 f0       	push   $0xf01077f9$/;"	l
f010423b	obj/kern/kernel.asm	/^f010423b:	e8 00 be ff ff       	call   f0100040 <_panic>$/;"	l
f0104240	obj/kern/kernel.asm	/^f0104240:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0104245	obj/kern/kernel.asm	/^f0104245:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104248	obj/kern/kernel.asm	/^f0104248:	e8 85 17 00 00       	call   f01059d2 <cpunum>$/;"	l
f010424d	obj/kern/kernel.asm	/^f010424d:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104250	obj/kern/kernel.asm	/^f0104250:	81 c2 20 60 1e f0    	add    $0xf01e6020,%edx$/;"	l
f0104256	obj/kern/kernel.asm	/^f0104256:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f010425b	obj/kern/kernel.asm	/^f010425b:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f010425f	obj/kern/kernel.asm	/^f010425f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104262	obj/kern/kernel.asm	/^f0104262:	68 c0 03 12 f0       	push   $0xf01203c0$/;"	l
f0104267	obj/kern/kernel.asm	/^f0104267:	e8 71 1a 00 00       	call   f0105cdd <spin_unlock>$/;"	l
f010426c	obj/kern/kernel.asm	/^f010426c:	f3 90                	pause  $/;"	l
f010426e	obj/kern/kernel.asm	/^f010426e:	e8 5f 17 00 00       	call   f01059d2 <cpunum>$/;"	l
f0104273	obj/kern/kernel.asm	/^f0104273:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104276	obj/kern/kernel.asm	/^f0104276:	8b 80 30 60 1e f0    	mov    -0xfe19fd0(%eax),%eax$/;"	l
f010427c	obj/kern/kernel.asm	/^f010427c:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0104281	obj/kern/kernel.asm	/^f0104281:	89 c4                	mov    %eax,%esp$/;"	l
f0104283	obj/kern/kernel.asm	/^f0104283:	6a 00                	push   $0x0$/;"	l
f0104285	obj/kern/kernel.asm	/^f0104285:	6a 00                	push   $0x0$/;"	l
f0104287	obj/kern/kernel.asm	/^f0104287:	fb                   	sti    $/;"	l
f0104288	obj/kern/kernel.asm	/^f0104288:	f4                   	hlt    $/;"	l
f0104289	obj/kern/kernel.asm	/^f0104289:	eb fd                	jmp    f0104288 <sched_halt+0xcc>$/;"	l
f010428b	obj/kern/kernel.asm	/^f010428b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010428e	obj/kern/kernel.asm	/^f010428e:	c9                   	leave  $/;"	l
f010428f	obj/kern/kernel.asm	/^f010428f:	c3                   	ret    $/;"	l
f0104290	obj/kern/kernel.asm	/^f0104290 <sched_yield>:$/;"	l
f0104290	obj/kern/kernel.asm	/^f0104290:	55                   	push   %ebp$/;"	l
f0104291	obj/kern/kernel.asm	/^f0104291:	89 e5                	mov    %esp,%ebp$/;"	l
f0104293	obj/kern/kernel.asm	/^f0104293:	57                   	push   %edi$/;"	l
f0104294	obj/kern/kernel.asm	/^f0104294:	56                   	push   %esi$/;"	l
f0104295	obj/kern/kernel.asm	/^f0104295:	53                   	push   %ebx$/;"	l
f0104296	obj/kern/kernel.asm	/^f0104296:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104299	obj/kern/kernel.asm	/^f0104299:	e8 34 17 00 00       	call   f01059d2 <cpunum>$/;"	l
f010429e	obj/kern/kernel.asm	/^f010429e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01042a1	obj/kern/kernel.asm	/^f01042a1:	8b b0 28 60 1e f0    	mov    -0xfe19fd8(%eax),%esi$/;"	l
f01042a7	obj/kern/kernel.asm	/^f01042a7:	85 f6                	test   %esi,%esi$/;"	l
f01042a9	obj/kern/kernel.asm	/^f01042a9:	74 0e                	je     f01042b9 <sched_yield+0x29>$/;"	l
f01042ab	obj/kern/kernel.asm	/^f01042ab:	8b 4e 48             	mov    0x48(%esi),%ecx$/;"	l
f01042ae	obj/kern/kernel.asm	/^f01042ae:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx$/;"	l
f01042b4	obj/kern/kernel.asm	/^f01042b4:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01042b7	obj/kern/kernel.asm	/^f01042b7:	eb 05                	jmp    f01042be <sched_yield+0x2e>$/;"	l
f01042b9	obj/kern/kernel.asm	/^f01042b9:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01042be	obj/kern/kernel.asm	/^f01042be:	8b 1d 48 52 1e f0    	mov    0xf01e5248,%ebx$/;"	l
f01042c4	obj/kern/kernel.asm	/^f01042c4:	89 ca                	mov    %ecx,%edx$/;"	l
f01042c6	obj/kern/kernel.asm	/^f01042c6:	81 c1 00 04 00 00    	add    $0x400,%ecx$/;"	l
f01042cc	obj/kern/kernel.asm	/^f01042cc:	89 d7                	mov    %edx,%edi$/;"	l
f01042ce	obj/kern/kernel.asm	/^f01042ce:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
f01042d1	obj/kern/kernel.asm	/^f01042d1:	c1 ef 16             	shr    $0x16,%edi$/;"	l
f01042d4	obj/kern/kernel.asm	/^f01042d4:	8d 04 3a             	lea    (%edx,%edi,1),%eax$/;"	l
f01042d7	obj/kern/kernel.asm	/^f01042d7:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f01042dc	obj/kern/kernel.asm	/^f01042dc:	29 f8                	sub    %edi,%eax$/;"	l
f01042de	obj/kern/kernel.asm	/^f01042de:	6b c0 7c             	imul   $0x7c,%eax,%eax$/;"	l
f01042e1	obj/kern/kernel.asm	/^f01042e1:	01 d8                	add    %ebx,%eax$/;"	l
f01042e3	obj/kern/kernel.asm	/^f01042e3:	83 78 54 02          	cmpl   $0x2,0x54(%eax)$/;"	l
f01042e7	obj/kern/kernel.asm	/^f01042e7:	75 09                	jne    f01042f2 <sched_yield+0x62>$/;"	l
f01042e9	obj/kern/kernel.asm	/^f01042e9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01042ec	obj/kern/kernel.asm	/^f01042ec:	50                   	push   %eax$/;"	l
f01042ed	obj/kern/kernel.asm	/^f01042ed:	e8 67 f1 ff ff       	call   f0103459 <env_run>$/;"	l
f01042f2	obj/kern/kernel.asm	/^f01042f2:	83 c2 01             	add    $0x1,%edx$/;"	l
f01042f5	obj/kern/kernel.asm	/^f01042f5:	39 ca                	cmp    %ecx,%edx$/;"	l
f01042f7	obj/kern/kernel.asm	/^f01042f7:	75 d3                	jne    f01042cc <sched_yield+0x3c>$/;"	l
f01042f9	obj/kern/kernel.asm	/^f01042f9:	85 f6                	test   %esi,%esi$/;"	l
f01042fb	obj/kern/kernel.asm	/^f01042fb:	74 0f                	je     f010430c <sched_yield+0x7c>$/;"	l
f01042fd	obj/kern/kernel.asm	/^f01042fd:	83 7e 54 03          	cmpl   $0x3,0x54(%esi)$/;"	l
f0104301	obj/kern/kernel.asm	/^f0104301:	75 09                	jne    f010430c <sched_yield+0x7c>$/;"	l
f0104303	obj/kern/kernel.asm	/^f0104303:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104306	obj/kern/kernel.asm	/^f0104306:	56                   	push   %esi$/;"	l
f0104307	obj/kern/kernel.asm	/^f0104307:	e8 4d f1 ff ff       	call   f0103459 <env_run>$/;"	l
f010430c	obj/kern/kernel.asm	/^f010430c:	e8 ab fe ff ff       	call   f01041bc <sched_halt>$/;"	l
f0104311	obj/kern/kernel.asm	/^f0104311:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104314	obj/kern/kernel.asm	/^f0104314:	5b                   	pop    %ebx$/;"	l
f0104315	obj/kern/kernel.asm	/^f0104315:	5e                   	pop    %esi$/;"	l
f0104316	obj/kern/kernel.asm	/^f0104316:	5f                   	pop    %edi$/;"	l
f0104317	obj/kern/kernel.asm	/^f0104317:	5d                   	pop    %ebp$/;"	l
f0104318	obj/kern/kernel.asm	/^f0104318:	c3                   	ret    $/;"	l
f0104319	obj/kern/kernel.asm	/^f0104319 <syscall>:$/;"	l
f0104319	obj/kern/kernel.asm	/^f0104319:	55                   	push   %ebp$/;"	l
f010431a	obj/kern/kernel.asm	/^f010431a:	89 e5                	mov    %esp,%ebp$/;"	l
f010431c	obj/kern/kernel.asm	/^f010431c:	57                   	push   %edi$/;"	l
f010431d	obj/kern/kernel.asm	/^f010431d:	56                   	push   %esi$/;"	l
f010431e	obj/kern/kernel.asm	/^f010431e:	53                   	push   %ebx$/;"	l
f010431f	obj/kern/kernel.asm	/^f010431f:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104322	obj/kern/kernel.asm	/^f0104322:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104325	obj/kern/kernel.asm	/^f0104325:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0104328	obj/kern/kernel.asm	/^f0104328:	0f 87 c6 04 00 00    	ja     f01047f4 <syscall+0x4db>$/;"	l
f010432e	obj/kern/kernel.asm	/^f010432e:	ff 24 85 0c 78 10 f0 	jmp    *-0xfef87f4(,%eax,4)$/;"	l
f0104335	obj/kern/kernel.asm	/^f0104335:	e8 98 16 00 00       	call   f01059d2 <cpunum>$/;"	l
f010433a	obj/kern/kernel.asm	/^f010433a:	6a 00                	push   $0x0$/;"	l
f010433c	obj/kern/kernel.asm	/^f010433c:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010433f	obj/kern/kernel.asm	/^f010433f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104342	obj/kern/kernel.asm	/^f0104342:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104345	obj/kern/kernel.asm	/^f0104345:	ff b0 28 60 1e f0    	pushl  -0xfe19fd8(%eax)$/;"	l
f010434b	obj/kern/kernel.asm	/^f010434b:	e8 fe e9 ff ff       	call   f0102d4e <user_mem_assert>$/;"	l
f0104350	obj/kern/kernel.asm	/^f0104350:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0104353	obj/kern/kernel.asm	/^f0104353:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104356	obj/kern/kernel.asm	/^f0104356:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104359	obj/kern/kernel.asm	/^f0104359:	68 06 78 10 f0       	push   $0xf0107806$/;"	l
f010435e	obj/kern/kernel.asm	/^f010435e:	e8 47 f3 ff ff       	call   f01036aa <cprintf>$/;"	l
f0104363	obj/kern/kernel.asm	/^f0104363:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104366	obj/kern/kernel.asm	/^f0104366:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010436b	obj/kern/kernel.asm	/^f010436b:	e9 90 04 00 00       	jmp    f0104800 <syscall+0x4e7>$/;"	l
f0104370	obj/kern/kernel.asm	/^f0104370:	e8 6e c2 ff ff       	call   f01005e3 <cons_getc>$/;"	l
f0104375	obj/kern/kernel.asm	/^f0104375:	89 c3                	mov    %eax,%ebx$/;"	l
f0104377	obj/kern/kernel.asm	/^f0104377:	e9 84 04 00 00       	jmp    f0104800 <syscall+0x4e7>$/;"	l
f010437c	obj/kern/kernel.asm	/^f010437c:	e8 51 16 00 00       	call   f01059d2 <cpunum>$/;"	l
f0104381	obj/kern/kernel.asm	/^f0104381:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104384	obj/kern/kernel.asm	/^f0104384:	8b 80 28 60 1e f0    	mov    -0xfe19fd8(%eax),%eax$/;"	l
f010438a	obj/kern/kernel.asm	/^f010438a:	8b 58 48             	mov    0x48(%eax),%ebx$/;"	l
f010438d	obj/kern/kernel.asm	/^f010438d:	e9 6e 04 00 00       	jmp    f0104800 <syscall+0x4e7>$/;"	l
f0104392	obj/kern/kernel.asm	/^f0104392:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104395	obj/kern/kernel.asm	/^f0104395:	6a 01                	push   $0x1$/;"	l
f0104397	obj/kern/kernel.asm	/^f0104397:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010439a	obj/kern/kernel.asm	/^f010439a:	50                   	push   %eax$/;"	l
f010439b	obj/kern/kernel.asm	/^f010439b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010439e	obj/kern/kernel.asm	/^f010439e:	e8 7b ea ff ff       	call   f0102e1e <envid2env>$/;"	l
f01043a3	obj/kern/kernel.asm	/^f01043a3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01043a6	obj/kern/kernel.asm	/^f01043a6:	89 c3                	mov    %eax,%ebx$/;"	l
f01043a8	obj/kern/kernel.asm	/^f01043a8:	85 c0                	test   %eax,%eax$/;"	l
f01043aa	obj/kern/kernel.asm	/^f01043aa:	0f 88 50 04 00 00    	js     f0104800 <syscall+0x4e7>$/;"	l
f01043b0	obj/kern/kernel.asm	/^f01043b0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01043b3	obj/kern/kernel.asm	/^f01043b3:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f01043b6	obj/kern/kernel.asm	/^f01043b6:	e8 ff ef ff ff       	call   f01033ba <env_destroy>$/;"	l
f01043bb	obj/kern/kernel.asm	/^f01043bb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01043be	obj/kern/kernel.asm	/^f01043be:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01043c3	obj/kern/kernel.asm	/^f01043c3:	e9 38 04 00 00       	jmp    f0104800 <syscall+0x4e7>$/;"	l
f01043c8	obj/kern/kernel.asm	/^f01043c8:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f01043cf	obj/kern/kernel.asm	/^f01043cf:	77 77                	ja     f0104448 <syscall+0x12f>$/;"	l
f01043d1	obj/kern/kernel.asm	/^f01043d1:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f01043d8	obj/kern/kernel.asm	/^f01043d8:	75 78                	jne    f0104452 <syscall+0x139>$/;"	l
f01043da	obj/kern/kernel.asm	/^f01043da:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01043dd	obj/kern/kernel.asm	/^f01043dd:	25 fd f1 ff ff       	and    $0xfffff1fd,%eax$/;"	l
f01043e2	obj/kern/kernel.asm	/^f01043e2:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f01043e5	obj/kern/kernel.asm	/^f01043e5:	75 75                	jne    f010445c <syscall+0x143>$/;"	l
f01043e7	obj/kern/kernel.asm	/^f01043e7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01043ea	obj/kern/kernel.asm	/^f01043ea:	6a 01                	push   $0x1$/;"	l
f01043ec	obj/kern/kernel.asm	/^f01043ec:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01043ef	obj/kern/kernel.asm	/^f01043ef:	50                   	push   %eax$/;"	l
f01043f0	obj/kern/kernel.asm	/^f01043f0:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01043f3	obj/kern/kernel.asm	/^f01043f3:	e8 26 ea ff ff       	call   f0102e1e <envid2env>$/;"	l
f01043f8	obj/kern/kernel.asm	/^f01043f8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01043fb	obj/kern/kernel.asm	/^f01043fb:	89 c3                	mov    %eax,%ebx$/;"	l
f01043fd	obj/kern/kernel.asm	/^f01043fd:	85 c0                	test   %eax,%eax$/;"	l
f01043ff	obj/kern/kernel.asm	/^f01043ff:	0f 85 fb 03 00 00    	jne    f0104800 <syscall+0x4e7>$/;"	l
f0104405	obj/kern/kernel.asm	/^f0104405:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104408	obj/kern/kernel.asm	/^f0104408:	6a 01                	push   $0x1$/;"	l
f010440a	obj/kern/kernel.asm	/^f010440a:	e8 0a cb ff ff       	call   f0100f19 <page_alloc>$/;"	l
f010440f	obj/kern/kernel.asm	/^f010440f:	89 c7                	mov    %eax,%edi$/;"	l
f0104411	obj/kern/kernel.asm	/^f0104411:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104414	obj/kern/kernel.asm	/^f0104414:	85 c0                	test   %eax,%eax$/;"	l
f0104416	obj/kern/kernel.asm	/^f0104416:	74 4e                	je     f0104466 <syscall+0x14d>$/;"	l
f0104418	obj/kern/kernel.asm	/^f0104418:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f010441b	obj/kern/kernel.asm	/^f010441b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010441e	obj/kern/kernel.asm	/^f010441e:	50                   	push   %eax$/;"	l
f010441f	obj/kern/kernel.asm	/^f010441f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104422	obj/kern/kernel.asm	/^f0104422:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104425	obj/kern/kernel.asm	/^f0104425:	e8 b1 cd ff ff       	call   f01011db <page_insert>$/;"	l
f010442a	obj/kern/kernel.asm	/^f010442a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010442d	obj/kern/kernel.asm	/^f010442d:	89 c3                	mov    %eax,%ebx$/;"	l
f010442f	obj/kern/kernel.asm	/^f010442f:	85 c0                	test   %eax,%eax$/;"	l
f0104431	obj/kern/kernel.asm	/^f0104431:	0f 84 c9 03 00 00    	je     f0104800 <syscall+0x4e7>$/;"	l
f0104437	obj/kern/kernel.asm	/^f0104437:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010443a	obj/kern/kernel.asm	/^f010443a:	57                   	push   %edi$/;"	l
f010443b	obj/kern/kernel.asm	/^f010443b:	e8 50 cb ff ff       	call   f0100f90 <page_free>$/;"	l
f0104440	obj/kern/kernel.asm	/^f0104440:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104443	obj/kern/kernel.asm	/^f0104443:	e9 b8 03 00 00       	jmp    f0104800 <syscall+0x4e7>$/;"	l
f0104448	obj/kern/kernel.asm	/^f0104448:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f010444d	obj/kern/kernel.asm	/^f010444d:	e9 ae 03 00 00       	jmp    f0104800 <syscall+0x4e7>$/;"	l
f0104452	obj/kern/kernel.asm	/^f0104452:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104457	obj/kern/kernel.asm	/^f0104457:	e9 a4 03 00 00       	jmp    f0104800 <syscall+0x4e7>$/;"	l
f010445c	obj/kern/kernel.asm	/^f010445c:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104461	obj/kern/kernel.asm	/^f0104461:	e9 9a 03 00 00       	jmp    f0104800 <syscall+0x4e7>$/;"	l
f0104466	obj/kern/kernel.asm	/^f0104466:	bb fc ff ff ff       	mov    $0xfffffffc,%ebx$/;"	l
f010446b	obj/kern/kernel.asm	/^f010446b:	e9 90 03 00 00       	jmp    f0104800 <syscall+0x4e7>$/;"	l
f0104470	obj/kern/kernel.asm	/^f0104470:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104473	obj/kern/kernel.asm	/^f0104473:	6a 01                	push   $0x1$/;"	l
f0104475	obj/kern/kernel.asm	/^f0104475:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104478	obj/kern/kernel.asm	/^f0104478:	50                   	push   %eax$/;"	l
f0104479	obj/kern/kernel.asm	/^f0104479:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010447c	obj/kern/kernel.asm	/^f010447c:	e8 9d e9 ff ff       	call   f0102e1e <envid2env>$/;"	l
f0104481	obj/kern/kernel.asm	/^f0104481:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104484	obj/kern/kernel.asm	/^f0104484:	89 c3                	mov    %eax,%ebx$/;"	l
f0104486	obj/kern/kernel.asm	/^f0104486:	85 c0                	test   %eax,%eax$/;"	l
f0104488	obj/kern/kernel.asm	/^f0104488:	0f 85 72 03 00 00    	jne    f0104800 <syscall+0x4e7>$/;"	l
f010448e	obj/kern/kernel.asm	/^f010448e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104491	obj/kern/kernel.asm	/^f0104491:	6a 01                	push   $0x1$/;"	l
f0104493	obj/kern/kernel.asm	/^f0104493:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0104496	obj/kern/kernel.asm	/^f0104496:	50                   	push   %eax$/;"	l
f0104497	obj/kern/kernel.asm	/^f0104497:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f010449a	obj/kern/kernel.asm	/^f010449a:	e8 7f e9 ff ff       	call   f0102e1e <envid2env>$/;"	l
f010449f	obj/kern/kernel.asm	/^f010449f:	83 c4 10             	add    $0x10,%esp$/;"	l
f01044a2	obj/kern/kernel.asm	/^f01044a2:	89 c3                	mov    %eax,%ebx$/;"	l
f01044a4	obj/kern/kernel.asm	/^f01044a4:	85 c0                	test   %eax,%eax$/;"	l
f01044a6	obj/kern/kernel.asm	/^f01044a6:	0f 85 54 03 00 00    	jne    f0104800 <syscall+0x4e7>$/;"	l
f01044ac	obj/kern/kernel.asm	/^f01044ac:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f01044b3	obj/kern/kernel.asm	/^f01044b3:	77 6e                	ja     f0104523 <syscall+0x20a>$/;"	l
f01044b5	obj/kern/kernel.asm	/^f01044b5:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f01044bc	obj/kern/kernel.asm	/^f01044bc:	75 6f                	jne    f010452d <syscall+0x214>$/;"	l
f01044be	obj/kern/kernel.asm	/^f01044be:	81 7d 18 ff ff bf ee 	cmpl   $0xeebfffff,0x18(%ebp)$/;"	l
f01044c5	obj/kern/kernel.asm	/^f01044c5:	77 66                	ja     f010452d <syscall+0x214>$/;"	l
f01044c7	obj/kern/kernel.asm	/^f01044c7:	f7 45 18 ff 0f 00 00 	testl  $0xfff,0x18(%ebp)$/;"	l
f01044ce	obj/kern/kernel.asm	/^f01044ce:	75 67                	jne    f0104537 <syscall+0x21e>$/;"	l
f01044d0	obj/kern/kernel.asm	/^f01044d0:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
f01044d3	obj/kern/kernel.asm	/^f01044d3:	25 fd f1 ff ff       	and    $0xfffff1fd,%eax$/;"	l
f01044d8	obj/kern/kernel.asm	/^f01044d8:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f01044db	obj/kern/kernel.asm	/^f01044db:	75 64                	jne    f0104541 <syscall+0x228>$/;"	l
f01044dd	obj/kern/kernel.asm	/^f01044dd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01044e0	obj/kern/kernel.asm	/^f01044e0:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01044e3	obj/kern/kernel.asm	/^f01044e3:	50                   	push   %eax$/;"	l
f01044e4	obj/kern/kernel.asm	/^f01044e4:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01044e7	obj/kern/kernel.asm	/^f01044e7:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01044ea	obj/kern/kernel.asm	/^f01044ea:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f01044ed	obj/kern/kernel.asm	/^f01044ed:	e8 00 cc ff ff       	call   f01010f2 <page_lookup>$/;"	l
f01044f2	obj/kern/kernel.asm	/^f01044f2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01044f5	obj/kern/kernel.asm	/^f01044f5:	85 c0                	test   %eax,%eax$/;"	l
f01044f7	obj/kern/kernel.asm	/^f01044f7:	74 52                	je     f010454b <syscall+0x232>$/;"	l
f01044f9	obj/kern/kernel.asm	/^f01044f9:	f6 45 1c 02          	testb  $0x2,0x1c(%ebp)$/;"	l
f01044fd	obj/kern/kernel.asm	/^f01044fd:	74 08                	je     f0104507 <syscall+0x1ee>$/;"	l
f01044ff	obj/kern/kernel.asm	/^f01044ff:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104502	obj/kern/kernel.asm	/^f0104502:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0104505	obj/kern/kernel.asm	/^f0104505:	74 4e                	je     f0104555 <syscall+0x23c>$/;"	l
f0104507	obj/kern/kernel.asm	/^f0104507:	ff 75 1c             	pushl  0x1c(%ebp)$/;"	l
f010450a	obj/kern/kernel.asm	/^f010450a:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f010450d	obj/kern/kernel.asm	/^f010450d:	50                   	push   %eax$/;"	l
f010450e	obj/kern/kernel.asm	/^f010450e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104511	obj/kern/kernel.asm	/^f0104511:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104514	obj/kern/kernel.asm	/^f0104514:	e8 c2 cc ff ff       	call   f01011db <page_insert>$/;"	l
f0104519	obj/kern/kernel.asm	/^f0104519:	83 c4 10             	add    $0x10,%esp$/;"	l
f010451c	obj/kern/kernel.asm	/^f010451c:	89 c3                	mov    %eax,%ebx$/;"	l
f010451e	obj/kern/kernel.asm	/^f010451e:	e9 dd 02 00 00       	jmp    f0104800 <syscall+0x4e7>$/;"	l
f0104523	obj/kern/kernel.asm	/^f0104523:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104528	obj/kern/kernel.asm	/^f0104528:	e9 d3 02 00 00       	jmp    f0104800 <syscall+0x4e7>$/;"	l
f010452d	obj/kern/kernel.asm	/^f010452d:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104532	obj/kern/kernel.asm	/^f0104532:	e9 c9 02 00 00       	jmp    f0104800 <syscall+0x4e7>$/;"	l
f0104537	obj/kern/kernel.asm	/^f0104537:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f010453c	obj/kern/kernel.asm	/^f010453c:	e9 bf 02 00 00       	jmp    f0104800 <syscall+0x4e7>$/;"	l
f0104541	obj/kern/kernel.asm	/^f0104541:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104546	obj/kern/kernel.asm	/^f0104546:	e9 b5 02 00 00       	jmp    f0104800 <syscall+0x4e7>$/;"	l
f010454b	obj/kern/kernel.asm	/^f010454b:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104550	obj/kern/kernel.asm	/^f0104550:	e9 ab 02 00 00       	jmp    f0104800 <syscall+0x4e7>$/;"	l
f0104555	obj/kern/kernel.asm	/^f0104555:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f010455a	obj/kern/kernel.asm	/^f010455a:	e9 a1 02 00 00       	jmp    f0104800 <syscall+0x4e7>$/;"	l
f010455f	obj/kern/kernel.asm	/^f010455f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104562	obj/kern/kernel.asm	/^f0104562:	6a 01                	push   $0x1$/;"	l
f0104564	obj/kern/kernel.asm	/^f0104564:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104567	obj/kern/kernel.asm	/^f0104567:	50                   	push   %eax$/;"	l
f0104568	obj/kern/kernel.asm	/^f0104568:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010456b	obj/kern/kernel.asm	/^f010456b:	e8 ae e8 ff ff       	call   f0102e1e <envid2env>$/;"	l
f0104570	obj/kern/kernel.asm	/^f0104570:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104573	obj/kern/kernel.asm	/^f0104573:	89 c3                	mov    %eax,%ebx$/;"	l
f0104575	obj/kern/kernel.asm	/^f0104575:	85 c0                	test   %eax,%eax$/;"	l
f0104577	obj/kern/kernel.asm	/^f0104577:	0f 85 83 02 00 00    	jne    f0104800 <syscall+0x4e7>$/;"	l
f010457d	obj/kern/kernel.asm	/^f010457d:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f0104584	obj/kern/kernel.asm	/^f0104584:	77 27                	ja     f01045ad <syscall+0x294>$/;"	l
f0104586	obj/kern/kernel.asm	/^f0104586:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f010458d	obj/kern/kernel.asm	/^f010458d:	75 28                	jne    f01045b7 <syscall+0x29e>$/;"	l
f010458f	obj/kern/kernel.asm	/^f010458f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104592	obj/kern/kernel.asm	/^f0104592:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104595	obj/kern/kernel.asm	/^f0104595:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104598	obj/kern/kernel.asm	/^f0104598:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f010459b	obj/kern/kernel.asm	/^f010459b:	e8 ee cb ff ff       	call   f010118e <page_remove>$/;"	l
f01045a0	obj/kern/kernel.asm	/^f01045a0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01045a3	obj/kern/kernel.asm	/^f01045a3:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01045a8	obj/kern/kernel.asm	/^f01045a8:	e9 53 02 00 00       	jmp    f0104800 <syscall+0x4e7>$/;"	l
f01045ad	obj/kern/kernel.asm	/^f01045ad:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01045b2	obj/kern/kernel.asm	/^f01045b2:	e9 49 02 00 00       	jmp    f0104800 <syscall+0x4e7>$/;"	l
f01045b7	obj/kern/kernel.asm	/^f01045b7:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01045bc	obj/kern/kernel.asm	/^f01045bc:	e9 3f 02 00 00       	jmp    f0104800 <syscall+0x4e7>$/;"	l
f01045c1	obj/kern/kernel.asm	/^f01045c1:	e8 0c 14 00 00       	call   f01059d2 <cpunum>$/;"	l
f01045c6	obj/kern/kernel.asm	/^f01045c6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01045c9	obj/kern/kernel.asm	/^f01045c9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045cc	obj/kern/kernel.asm	/^f01045cc:	8b 80 28 60 1e f0    	mov    -0xfe19fd8(%eax),%eax$/;"	l
f01045d2	obj/kern/kernel.asm	/^f01045d2:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f01045d5	obj/kern/kernel.asm	/^f01045d5:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01045d8	obj/kern/kernel.asm	/^f01045d8:	50                   	push   %eax$/;"	l
f01045d9	obj/kern/kernel.asm	/^f01045d9:	e8 8a e9 ff ff       	call   f0102f68 <env_alloc>$/;"	l
f01045de	obj/kern/kernel.asm	/^f01045de:	83 c4 10             	add    $0x10,%esp$/;"	l
f01045e1	obj/kern/kernel.asm	/^f01045e1:	89 c3                	mov    %eax,%ebx$/;"	l
f01045e3	obj/kern/kernel.asm	/^f01045e3:	85 c0                	test   %eax,%eax$/;"	l
f01045e5	obj/kern/kernel.asm	/^f01045e5:	0f 85 15 02 00 00    	jne    f0104800 <syscall+0x4e7>$/;"	l
f01045eb	obj/kern/kernel.asm	/^f01045eb:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01045ee	obj/kern/kernel.asm	/^f01045ee:	c7 43 54 04 00 00 00 	movl   $0x4,0x54(%ebx)$/;"	l
f01045f5	obj/kern/kernel.asm	/^f01045f5:	e8 d8 13 00 00       	call   f01059d2 <cpunum>$/;"	l
f01045fa	obj/kern/kernel.asm	/^f01045fa:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045fd	obj/kern/kernel.asm	/^f01045fd:	8b b0 28 60 1e f0    	mov    -0xfe19fd8(%eax),%esi$/;"	l
f0104603	obj/kern/kernel.asm	/^f0104603:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104608	obj/kern/kernel.asm	/^f0104608:	89 df                	mov    %ebx,%edi$/;"	l
f010460a	obj/kern/kernel.asm	/^f010460a:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010460c	obj/kern/kernel.asm	/^f010460c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010460f	obj/kern/kernel.asm	/^f010460f:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0104616	obj/kern/kernel.asm	/^f0104616:	8b 58 48             	mov    0x48(%eax),%ebx$/;"	l
f0104619	obj/kern/kernel.asm	/^f0104619:	e9 e2 01 00 00       	jmp    f0104800 <syscall+0x4e7>$/;"	l
f010461e	obj/kern/kernel.asm	/^f010461e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104621	obj/kern/kernel.asm	/^f0104621:	83 e8 02             	sub    $0x2,%eax$/;"	l
f0104624	obj/kern/kernel.asm	/^f0104624:	a9 fd ff ff ff       	test   $0xfffffffd,%eax$/;"	l
f0104629	obj/kern/kernel.asm	/^f0104629:	75 2c                	jne    f0104657 <syscall+0x33e>$/;"	l
f010462b	obj/kern/kernel.asm	/^f010462b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010462e	obj/kern/kernel.asm	/^f010462e:	6a 01                	push   $0x1$/;"	l
f0104630	obj/kern/kernel.asm	/^f0104630:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104633	obj/kern/kernel.asm	/^f0104633:	50                   	push   %eax$/;"	l
f0104634	obj/kern/kernel.asm	/^f0104634:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104637	obj/kern/kernel.asm	/^f0104637:	e8 e2 e7 ff ff       	call   f0102e1e <envid2env>$/;"	l
f010463c	obj/kern/kernel.asm	/^f010463c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010463f	obj/kern/kernel.asm	/^f010463f:	89 c3                	mov    %eax,%ebx$/;"	l
f0104641	obj/kern/kernel.asm	/^f0104641:	85 c0                	test   %eax,%eax$/;"	l
f0104643	obj/kern/kernel.asm	/^f0104643:	0f 85 b7 01 00 00    	jne    f0104800 <syscall+0x4e7>$/;"	l
f0104649	obj/kern/kernel.asm	/^f0104649:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f010464c	obj/kern/kernel.asm	/^f010464c:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f010464f	obj/kern/kernel.asm	/^f010464f:	89 4a 54             	mov    %ecx,0x54(%edx)$/;"	l
f0104652	obj/kern/kernel.asm	/^f0104652:	e9 a9 01 00 00       	jmp    f0104800 <syscall+0x4e7>$/;"	l
f0104657	obj/kern/kernel.asm	/^f0104657:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f010465c	obj/kern/kernel.asm	/^f010465c:	e9 9f 01 00 00       	jmp    f0104800 <syscall+0x4e7>$/;"	l
f0104661	obj/kern/kernel.asm	/^f0104661:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104664	obj/kern/kernel.asm	/^f0104664:	6a 01                	push   $0x1$/;"	l
f0104666	obj/kern/kernel.asm	/^f0104666:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104669	obj/kern/kernel.asm	/^f0104669:	50                   	push   %eax$/;"	l
f010466a	obj/kern/kernel.asm	/^f010466a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010466d	obj/kern/kernel.asm	/^f010466d:	e8 ac e7 ff ff       	call   f0102e1e <envid2env>$/;"	l
f0104672	obj/kern/kernel.asm	/^f0104672:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104675	obj/kern/kernel.asm	/^f0104675:	85 c0                	test   %eax,%eax$/;"	l
f0104677	obj/kern/kernel.asm	/^f0104677:	75 09                	jne    f0104682 <syscall+0x369>$/;"	l
f0104679	obj/kern/kernel.asm	/^f0104679:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f010467c	obj/kern/kernel.asm	/^f010467c:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f010467f	obj/kern/kernel.asm	/^f010467f:	89 7a 64             	mov    %edi,0x64(%edx)$/;"	l
f0104682	obj/kern/kernel.asm	/^f0104682:	89 c3                	mov    %eax,%ebx$/;"	l
f0104684	obj/kern/kernel.asm	/^f0104684:	e9 77 01 00 00       	jmp    f0104800 <syscall+0x4e7>$/;"	l
f0104689	obj/kern/kernel.asm	/^f0104689:	e8 02 fc ff ff       	call   f0104290 <sched_yield>$/;"	l
f010468e	obj/kern/kernel.asm	/^f010468e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104691	obj/kern/kernel.asm	/^f0104691:	6a 00                	push   $0x0$/;"	l
f0104693	obj/kern/kernel.asm	/^f0104693:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0104696	obj/kern/kernel.asm	/^f0104696:	50                   	push   %eax$/;"	l
f0104697	obj/kern/kernel.asm	/^f0104697:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010469a	obj/kern/kernel.asm	/^f010469a:	e8 7f e7 ff ff       	call   f0102e1e <envid2env>$/;"	l
f010469f	obj/kern/kernel.asm	/^f010469f:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046a2	obj/kern/kernel.asm	/^f01046a2:	85 c0                	test   %eax,%eax$/;"	l
f01046a4	obj/kern/kernel.asm	/^f01046a4:	0f 88 db 00 00 00    	js     f0104785 <syscall+0x46c>$/;"	l
f01046aa	obj/kern/kernel.asm	/^f01046aa:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01046ad	obj/kern/kernel.asm	/^f01046ad:	80 78 68 00          	cmpb   $0x0,0x68(%eax)$/;"	l
f01046b1	obj/kern/kernel.asm	/^f01046b1:	0f 84 d2 00 00 00    	je     f0104789 <syscall+0x470>$/;"	l
f01046b7	obj/kern/kernel.asm	/^f01046b7:	8b 58 74             	mov    0x74(%eax),%ebx$/;"	l
f01046ba	obj/kern/kernel.asm	/^f01046ba:	85 db                	test   %ebx,%ebx$/;"	l
f01046bc	obj/kern/kernel.asm	/^f01046bc:	0f 85 ce 00 00 00    	jne    f0104790 <syscall+0x477>$/;"	l
f01046c2	obj/kern/kernel.asm	/^f01046c2:	81 7d 14 ff ff bf ee 	cmpl   $0xeebfffff,0x14(%ebp)$/;"	l
f01046c9	obj/kern/kernel.asm	/^f01046c9:	0f 87 82 00 00 00    	ja     f0104751 <syscall+0x438>$/;"	l
f01046cf	obj/kern/kernel.asm	/^f01046cf:	f7 45 14 ff 0f 00 00 	testl  $0xfff,0x14(%ebp)$/;"	l
f01046d6	obj/kern/kernel.asm	/^f01046d6:	0f 85 bb 00 00 00    	jne    f0104797 <syscall+0x47e>$/;"	l
f01046dc	obj/kern/kernel.asm	/^f01046dc:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f01046df	obj/kern/kernel.asm	/^f01046df:	25 fd f1 ff ff       	and    $0xfffff1fd,%eax$/;"	l
f01046e4	obj/kern/kernel.asm	/^f01046e4:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f01046e7	obj/kern/kernel.asm	/^f01046e7:	0f 85 b1 00 00 00    	jne    f010479e <syscall+0x485>$/;"	l
f01046ed	obj/kern/kernel.asm	/^f01046ed:	e8 e0 12 00 00       	call   f01059d2 <cpunum>$/;"	l
f01046f2	obj/kern/kernel.asm	/^f01046f2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01046f5	obj/kern/kernel.asm	/^f01046f5:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f01046f8	obj/kern/kernel.asm	/^f01046f8:	52                   	push   %edx$/;"	l
f01046f9	obj/kern/kernel.asm	/^f01046f9:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f01046fc	obj/kern/kernel.asm	/^f01046fc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01046ff	obj/kern/kernel.asm	/^f01046ff:	8b 80 28 60 1e f0    	mov    -0xfe19fd8(%eax),%eax$/;"	l
f0104705	obj/kern/kernel.asm	/^f0104705:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104708	obj/kern/kernel.asm	/^f0104708:	e8 e5 c9 ff ff       	call   f01010f2 <page_lookup>$/;"	l
f010470d	obj/kern/kernel.asm	/^f010470d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104710	obj/kern/kernel.asm	/^f0104710:	85 c0                	test   %eax,%eax$/;"	l
f0104712	obj/kern/kernel.asm	/^f0104712:	0f 84 8d 00 00 00    	je     f01047a5 <syscall+0x48c>$/;"	l
f0104718	obj/kern/kernel.asm	/^f0104718:	f6 45 18 02          	testb  $0x2,0x18(%ebp)$/;"	l
f010471c	obj/kern/kernel.asm	/^f010471c:	74 0c                	je     f010472a <syscall+0x411>$/;"	l
f010471e	obj/kern/kernel.asm	/^f010471e:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104721	obj/kern/kernel.asm	/^f0104721:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0104724	obj/kern/kernel.asm	/^f0104724:	0f 84 82 00 00 00    	je     f01047ac <syscall+0x493>$/;"	l
f010472a	obj/kern/kernel.asm	/^f010472a:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f010472d	obj/kern/kernel.asm	/^f010472d:	8b 4a 6c             	mov    0x6c(%edx),%ecx$/;"	l
f0104730	obj/kern/kernel.asm	/^f0104730:	85 c9                	test   %ecx,%ecx$/;"	l
f0104732	obj/kern/kernel.asm	/^f0104732:	74 1d                	je     f0104751 <syscall+0x438>$/;"	l
f0104734	obj/kern/kernel.asm	/^f0104734:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0104737	obj/kern/kernel.asm	/^f0104737:	51                   	push   %ecx$/;"	l
f0104738	obj/kern/kernel.asm	/^f0104738:	50                   	push   %eax$/;"	l
f0104739	obj/kern/kernel.asm	/^f0104739:	ff 72 60             	pushl  0x60(%edx)$/;"	l
f010473c	obj/kern/kernel.asm	/^f010473c:	e8 9a ca ff ff       	call   f01011db <page_insert>$/;"	l
f0104741	obj/kern/kernel.asm	/^f0104741:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104744	obj/kern/kernel.asm	/^f0104744:	85 c0                	test   %eax,%eax$/;"	l
f0104746	obj/kern/kernel.asm	/^f0104746:	78 6b                	js     f01047b3 <syscall+0x49a>$/;"	l
f0104748	obj/kern/kernel.asm	/^f0104748:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010474b	obj/kern/kernel.asm	/^f010474b:	8b 7d 18             	mov    0x18(%ebp),%edi$/;"	l
f010474e	obj/kern/kernel.asm	/^f010474e:	89 78 78             	mov    %edi,0x78(%eax)$/;"	l
f0104751	obj/kern/kernel.asm	/^f0104751:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104754	obj/kern/kernel.asm	/^f0104754:	c6 46 68 00          	movb   $0x0,0x68(%esi)$/;"	l
f0104758	obj/kern/kernel.asm	/^f0104758:	e8 75 12 00 00       	call   f01059d2 <cpunum>$/;"	l
f010475d	obj/kern/kernel.asm	/^f010475d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104760	obj/kern/kernel.asm	/^f0104760:	8b 80 28 60 1e f0    	mov    -0xfe19fd8(%eax),%eax$/;"	l
f0104766	obj/kern/kernel.asm	/^f0104766:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104769	obj/kern/kernel.asm	/^f0104769:	89 46 74             	mov    %eax,0x74(%esi)$/;"	l
f010476c	obj/kern/kernel.asm	/^f010476c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010476f	obj/kern/kernel.asm	/^f010476f:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104772	obj/kern/kernel.asm	/^f0104772:	89 48 70             	mov    %ecx,0x70(%eax)$/;"	l
f0104775	obj/kern/kernel.asm	/^f0104775:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f010477c	obj/kern/kernel.asm	/^f010477c:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0104783	obj/kern/kernel.asm	/^f0104783:	eb 7b                	jmp    f0104800 <syscall+0x4e7>$/;"	l
f0104785	obj/kern/kernel.asm	/^f0104785:	89 c3                	mov    %eax,%ebx$/;"	l
f0104787	obj/kern/kernel.asm	/^f0104787:	eb 77                	jmp    f0104800 <syscall+0x4e7>$/;"	l
f0104789	obj/kern/kernel.asm	/^f0104789:	bb f9 ff ff ff       	mov    $0xfffffff9,%ebx$/;"	l
f010478e	obj/kern/kernel.asm	/^f010478e:	eb 70                	jmp    f0104800 <syscall+0x4e7>$/;"	l
f0104790	obj/kern/kernel.asm	/^f0104790:	bb f9 ff ff ff       	mov    $0xfffffff9,%ebx$/;"	l
f0104795	obj/kern/kernel.asm	/^f0104795:	eb 69                	jmp    f0104800 <syscall+0x4e7>$/;"	l
f0104797	obj/kern/kernel.asm	/^f0104797:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f010479c	obj/kern/kernel.asm	/^f010479c:	eb 62                	jmp    f0104800 <syscall+0x4e7>$/;"	l
f010479e	obj/kern/kernel.asm	/^f010479e:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01047a3	obj/kern/kernel.asm	/^f01047a3:	eb 5b                	jmp    f0104800 <syscall+0x4e7>$/;"	l
f01047a5	obj/kern/kernel.asm	/^f01047a5:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01047aa	obj/kern/kernel.asm	/^f01047aa:	eb 54                	jmp    f0104800 <syscall+0x4e7>$/;"	l
f01047ac	obj/kern/kernel.asm	/^f01047ac:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01047b1	obj/kern/kernel.asm	/^f01047b1:	eb 4d                	jmp    f0104800 <syscall+0x4e7>$/;"	l
f01047b3	obj/kern/kernel.asm	/^f01047b3:	89 c3                	mov    %eax,%ebx$/;"	l
f01047b5	obj/kern/kernel.asm	/^f01047b5:	eb 49                	jmp    f0104800 <syscall+0x4e7>$/;"	l
f01047b7	obj/kern/kernel.asm	/^f01047b7:	e8 16 12 00 00       	call   f01059d2 <cpunum>$/;"	l
f01047bc	obj/kern/kernel.asm	/^f01047bc:	81 7d 0c ff ff bf ee 	cmpl   $0xeebfffff,0xc(%ebp)$/;"	l
f01047c3	obj/kern/kernel.asm	/^f01047c3:	77 09                	ja     f01047ce <syscall+0x4b5>$/;"	l
f01047c5	obj/kern/kernel.asm	/^f01047c5:	f7 45 0c ff 0f 00 00 	testl  $0xfff,0xc(%ebp)$/;"	l
f01047cc	obj/kern/kernel.asm	/^f01047cc:	75 2d                	jne    f01047fb <syscall+0x4e2>$/;"	l
f01047ce	obj/kern/kernel.asm	/^f01047ce:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01047d1	obj/kern/kernel.asm	/^f01047d1:	8b 80 28 60 1e f0    	mov    -0xfe19fd8(%eax),%eax$/;"	l
f01047d7	obj/kern/kernel.asm	/^f01047d7:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f01047de	obj/kern/kernel.asm	/^f01047de:	c6 40 68 01          	movb   $0x1,0x68(%eax)$/;"	l
f01047e2	obj/kern/kernel.asm	/^f01047e2:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01047e5	obj/kern/kernel.asm	/^f01047e5:	89 78 6c             	mov    %edi,0x6c(%eax)$/;"	l
f01047e8	obj/kern/kernel.asm	/^f01047e8:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%eax)$/;"	l
f01047ef	obj/kern/kernel.asm	/^f01047ef:	e8 9c fa ff ff       	call   f0104290 <sched_yield>$/;"	l
f01047f4	obj/kern/kernel.asm	/^f01047f4:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01047f9	obj/kern/kernel.asm	/^f01047f9:	eb 05                	jmp    f0104800 <syscall+0x4e7>$/;"	l
f01047fb	obj/kern/kernel.asm	/^f01047fb:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104800	obj/kern/kernel.asm	/^f0104800:	89 d8                	mov    %ebx,%eax$/;"	l
f0104802	obj/kern/kernel.asm	/^f0104802:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104805	obj/kern/kernel.asm	/^f0104805:	5b                   	pop    %ebx$/;"	l
f0104806	obj/kern/kernel.asm	/^f0104806:	5e                   	pop    %esi$/;"	l
f0104807	obj/kern/kernel.asm	/^f0104807:	5f                   	pop    %edi$/;"	l
f0104808	obj/kern/kernel.asm	/^f0104808:	5d                   	pop    %ebp$/;"	l
f0104809	obj/kern/kernel.asm	/^f0104809:	c3                   	ret    $/;"	l
f010480a	obj/kern/kernel.asm	/^f010480a <stab_binsearch>:$/;"	l
f010480a	obj/kern/kernel.asm	/^f010480a:	55                   	push   %ebp$/;"	l
f010480b	obj/kern/kernel.asm	/^f010480b:	89 e5                	mov    %esp,%ebp$/;"	l
f010480d	obj/kern/kernel.asm	/^f010480d:	57                   	push   %edi$/;"	l
f010480e	obj/kern/kernel.asm	/^f010480e:	56                   	push   %esi$/;"	l
f010480f	obj/kern/kernel.asm	/^f010480f:	53                   	push   %ebx$/;"	l
f0104810	obj/kern/kernel.asm	/^f0104810:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104813	obj/kern/kernel.asm	/^f0104813:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0104816	obj/kern/kernel.asm	/^f0104816:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104819	obj/kern/kernel.asm	/^f0104819:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f010481c	obj/kern/kernel.asm	/^f010481c:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010481f	obj/kern/kernel.asm	/^f010481f:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0104821	obj/kern/kernel.asm	/^f0104821:	8b 01                	mov    (%ecx),%eax$/;"	l
f0104823	obj/kern/kernel.asm	/^f0104823:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0104826	obj/kern/kernel.asm	/^f0104826:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f010482d	obj/kern/kernel.asm	/^f010482d:	eb 7f                	jmp    f01048ae <stab_binsearch+0xa4>$/;"	l
f010482f	obj/kern/kernel.asm	/^f010482f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104832	obj/kern/kernel.asm	/^f0104832:	01 d8                	add    %ebx,%eax$/;"	l
f0104834	obj/kern/kernel.asm	/^f0104834:	89 c6                	mov    %eax,%esi$/;"	l
f0104836	obj/kern/kernel.asm	/^f0104836:	c1 ee 1f             	shr    $0x1f,%esi$/;"	l
f0104839	obj/kern/kernel.asm	/^f0104839:	01 c6                	add    %eax,%esi$/;"	l
f010483b	obj/kern/kernel.asm	/^f010483b:	d1 fe                	sar    %esi$/;"	d
f010483d	obj/kern/kernel.asm	/^f010483d:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f0104840	obj/kern/kernel.asm	/^f0104840:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0104843	obj/kern/kernel.asm	/^f0104843:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f0104846	obj/kern/kernel.asm	/^f0104846:	89 f0                	mov    %esi,%eax$/;"	l
f0104848	obj/kern/kernel.asm	/^f0104848:	eb 03                	jmp    f010484d <stab_binsearch+0x43>$/;"	l
f010484a	obj/kern/kernel.asm	/^f010484a:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010484d	obj/kern/kernel.asm	/^f010484d:	39 c3                	cmp    %eax,%ebx$/;"	l
f010484f	obj/kern/kernel.asm	/^f010484f:	7f 0d                	jg     f010485e <stab_binsearch+0x54>$/;"	l
f0104851	obj/kern/kernel.asm	/^f0104851:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0104855	obj/kern/kernel.asm	/^f0104855:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0104858	obj/kern/kernel.asm	/^f0104858:	39 f9                	cmp    %edi,%ecx$/;"	l
f010485a	obj/kern/kernel.asm	/^f010485a:	75 ee                	jne    f010484a <stab_binsearch+0x40>$/;"	l
f010485c	obj/kern/kernel.asm	/^f010485c:	eb 05                	jmp    f0104863 <stab_binsearch+0x59>$/;"	l
f010485e	obj/kern/kernel.asm	/^f010485e:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0104861	obj/kern/kernel.asm	/^f0104861:	eb 4b                	jmp    f01048ae <stab_binsearch+0xa4>$/;"	l
f0104863	obj/kern/kernel.asm	/^f0104863:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104866	obj/kern/kernel.asm	/^f0104866:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0104869	obj/kern/kernel.asm	/^f0104869:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f010486d	obj/kern/kernel.asm	/^f010486d:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0104870	obj/kern/kernel.asm	/^f0104870:	76 11                	jbe    f0104883 <stab_binsearch+0x79>$/;"	l
f0104872	obj/kern/kernel.asm	/^f0104872:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104875	obj/kern/kernel.asm	/^f0104875:	89 03                	mov    %eax,(%ebx)$/;"	l
f0104877	obj/kern/kernel.asm	/^f0104877:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f010487a	obj/kern/kernel.asm	/^f010487a:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0104881	obj/kern/kernel.asm	/^f0104881:	eb 2b                	jmp    f01048ae <stab_binsearch+0xa4>$/;"	l
f0104883	obj/kern/kernel.asm	/^f0104883:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0104886	obj/kern/kernel.asm	/^f0104886:	73 14                	jae    f010489c <stab_binsearch+0x92>$/;"	l
f0104888	obj/kern/kernel.asm	/^f0104888:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010488b	obj/kern/kernel.asm	/^f010488b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010488e	obj/kern/kernel.asm	/^f010488e:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104891	obj/kern/kernel.asm	/^f0104891:	89 06                	mov    %eax,(%esi)$/;"	l
f0104893	obj/kern/kernel.asm	/^f0104893:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f010489a	obj/kern/kernel.asm	/^f010489a:	eb 12                	jmp    f01048ae <stab_binsearch+0xa4>$/;"	l
f010489c	obj/kern/kernel.asm	/^f010489c:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f010489f	obj/kern/kernel.asm	/^f010489f:	89 06                	mov    %eax,(%esi)$/;"	l
f01048a1	obj/kern/kernel.asm	/^f01048a1:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f01048a5	obj/kern/kernel.asm	/^f01048a5:	89 c3                	mov    %eax,%ebx$/;"	l
f01048a7	obj/kern/kernel.asm	/^f01048a7:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f01048ae	obj/kern/kernel.asm	/^f01048ae:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f01048b1	obj/kern/kernel.asm	/^f01048b1:	0f 8e 78 ff ff ff    	jle    f010482f <stab_binsearch+0x25>$/;"	l
f01048b7	obj/kern/kernel.asm	/^f01048b7:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f01048bb	obj/kern/kernel.asm	/^f01048bb:	75 0f                	jne    f01048cc <stab_binsearch+0xc2>$/;"	l
f01048bd	obj/kern/kernel.asm	/^f01048bd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01048c0	obj/kern/kernel.asm	/^f01048c0:	8b 00                	mov    (%eax),%eax$/;"	l
f01048c2	obj/kern/kernel.asm	/^f01048c2:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01048c5	obj/kern/kernel.asm	/^f01048c5:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01048c8	obj/kern/kernel.asm	/^f01048c8:	89 06                	mov    %eax,(%esi)$/;"	l
f01048ca	obj/kern/kernel.asm	/^f01048ca:	eb 2c                	jmp    f01048f8 <stab_binsearch+0xee>$/;"	l
f01048cc	obj/kern/kernel.asm	/^f01048cc:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01048cf	obj/kern/kernel.asm	/^f01048cf:	8b 00                	mov    (%eax),%eax$/;"	l
f01048d1	obj/kern/kernel.asm	/^f01048d1:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01048d4	obj/kern/kernel.asm	/^f01048d4:	8b 0e                	mov    (%esi),%ecx$/;"	l
f01048d6	obj/kern/kernel.asm	/^f01048d6:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01048d9	obj/kern/kernel.asm	/^f01048d9:	8b 75 ec             	mov    -0x14(%ebp),%esi$/;"	l
f01048dc	obj/kern/kernel.asm	/^f01048dc:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f01048df	obj/kern/kernel.asm	/^f01048df:	eb 03                	jmp    f01048e4 <stab_binsearch+0xda>$/;"	l
f01048e1	obj/kern/kernel.asm	/^f01048e1:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01048e4	obj/kern/kernel.asm	/^f01048e4:	39 c8                	cmp    %ecx,%eax$/;"	l
f01048e6	obj/kern/kernel.asm	/^f01048e6:	7e 0b                	jle    f01048f3 <stab_binsearch+0xe9>$/;"	l
f01048e8	obj/kern/kernel.asm	/^f01048e8:	0f b6 5a 04          	movzbl 0x4(%edx),%ebx$/;"	l
f01048ec	obj/kern/kernel.asm	/^f01048ec:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f01048ef	obj/kern/kernel.asm	/^f01048ef:	39 df                	cmp    %ebx,%edi$/;"	l
f01048f1	obj/kern/kernel.asm	/^f01048f1:	75 ee                	jne    f01048e1 <stab_binsearch+0xd7>$/;"	l
f01048f3	obj/kern/kernel.asm	/^f01048f3:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01048f6	obj/kern/kernel.asm	/^f01048f6:	89 06                	mov    %eax,(%esi)$/;"	l
f01048f8	obj/kern/kernel.asm	/^f01048f8:	83 c4 14             	add    $0x14,%esp$/;"	l
f01048fb	obj/kern/kernel.asm	/^f01048fb:	5b                   	pop    %ebx$/;"	l
f01048fc	obj/kern/kernel.asm	/^f01048fc:	5e                   	pop    %esi$/;"	l
f01048fd	obj/kern/kernel.asm	/^f01048fd:	5f                   	pop    %edi$/;"	l
f01048fe	obj/kern/kernel.asm	/^f01048fe:	5d                   	pop    %ebp$/;"	l
f01048ff	obj/kern/kernel.asm	/^f01048ff:	c3                   	ret    $/;"	l
f0104900	obj/kern/kernel.asm	/^f0104900 <debuginfo_eip>:$/;"	l
f0104900	obj/kern/kernel.asm	/^f0104900:	55                   	push   %ebp$/;"	l
f0104901	obj/kern/kernel.asm	/^f0104901:	89 e5                	mov    %esp,%ebp$/;"	l
f0104903	obj/kern/kernel.asm	/^f0104903:	57                   	push   %edi$/;"	l
f0104904	obj/kern/kernel.asm	/^f0104904:	56                   	push   %esi$/;"	l
f0104905	obj/kern/kernel.asm	/^f0104905:	53                   	push   %ebx$/;"	l
f0104906	obj/kern/kernel.asm	/^f0104906:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0104909	obj/kern/kernel.asm	/^f0104909:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010490c	obj/kern/kernel.asm	/^f010490c:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010490f	obj/kern/kernel.asm	/^f010490f:	c7 03 44 78 10 f0    	movl   $0xf0107844,(%ebx)$/;"	l
f0104915	obj/kern/kernel.asm	/^f0104915:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f010491c	obj/kern/kernel.asm	/^f010491c:	c7 43 08 44 78 10 f0 	movl   $0xf0107844,0x8(%ebx)$/;"	l
f0104923	obj/kern/kernel.asm	/^f0104923:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f010492a	obj/kern/kernel.asm	/^f010492a:	89 7b 10             	mov    %edi,0x10(%ebx)$/;"	l
f010492d	obj/kern/kernel.asm	/^f010492d:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f0104934	obj/kern/kernel.asm	/^f0104934:	81 ff ff ff 7f ef    	cmp    $0xef7fffff,%edi$/;"	l
f010493a	obj/kern/kernel.asm	/^f010493a:	0f 87 a4 00 00 00    	ja     f01049e4 <debuginfo_eip+0xe4>$/;"	l
f0104940	obj/kern/kernel.asm	/^f0104940:	e8 8d 10 00 00       	call   f01059d2 <cpunum>$/;"	l
f0104945	obj/kern/kernel.asm	/^f0104945:	6a 04                	push   $0x4$/;"	l
f0104947	obj/kern/kernel.asm	/^f0104947:	6a 10                	push   $0x10$/;"	l
f0104949	obj/kern/kernel.asm	/^f0104949:	68 00 00 20 00       	push   $0x200000$/;"	l
f010494e	obj/kern/kernel.asm	/^f010494e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104951	obj/kern/kernel.asm	/^f0104951:	ff b0 28 60 1e f0    	pushl  -0xfe19fd8(%eax)$/;"	l
f0104957	obj/kern/kernel.asm	/^f0104957:	e8 72 e3 ff ff       	call   f0102cce <user_mem_check>$/;"	l
f010495c	obj/kern/kernel.asm	/^f010495c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010495f	obj/kern/kernel.asm	/^f010495f:	85 c0                	test   %eax,%eax$/;"	l
f0104961	obj/kern/kernel.asm	/^f0104961:	0f 85 47 02 00 00    	jne    f0104bae <debuginfo_eip+0x2ae>$/;"	l
f0104967	obj/kern/kernel.asm	/^f0104967:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f010496c	obj/kern/kernel.asm	/^f010496c:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f010496f	obj/kern/kernel.asm	/^f010496f:	8b 35 04 00 20 00    	mov    0x200004,%esi$/;"	l
f0104975	obj/kern/kernel.asm	/^f0104975:	8b 15 08 00 20 00    	mov    0x200008,%edx$/;"	l
f010497b	obj/kern/kernel.asm	/^f010497b:	89 55 b8             	mov    %edx,-0x48(%ebp)$/;"	l
f010497e	obj/kern/kernel.asm	/^f010497e:	8b 15 0c 00 20 00    	mov    0x20000c,%edx$/;"	l
f0104984	obj/kern/kernel.asm	/^f0104984:	89 55 bc             	mov    %edx,-0x44(%ebp)$/;"	l
f0104987	obj/kern/kernel.asm	/^f0104987:	e8 46 10 00 00       	call   f01059d2 <cpunum>$/;"	l
f010498c	obj/kern/kernel.asm	/^f010498c:	6a 04                	push   $0x4$/;"	l
f010498e	obj/kern/kernel.asm	/^f010498e:	89 f2                	mov    %esi,%edx$/;"	l
f0104990	obj/kern/kernel.asm	/^f0104990:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f0104993	obj/kern/kernel.asm	/^f0104993:	29 ca                	sub    %ecx,%edx$/;"	l
f0104995	obj/kern/kernel.asm	/^f0104995:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0104998	obj/kern/kernel.asm	/^f0104998:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f010499e	obj/kern/kernel.asm	/^f010499e:	52                   	push   %edx$/;"	l
f010499f	obj/kern/kernel.asm	/^f010499f:	51                   	push   %ecx$/;"	l
f01049a0	obj/kern/kernel.asm	/^f01049a0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049a3	obj/kern/kernel.asm	/^f01049a3:	ff b0 28 60 1e f0    	pushl  -0xfe19fd8(%eax)$/;"	l
f01049a9	obj/kern/kernel.asm	/^f01049a9:	e8 20 e3 ff ff       	call   f0102cce <user_mem_check>$/;"	l
f01049ae	obj/kern/kernel.asm	/^f01049ae:	83 c4 10             	add    $0x10,%esp$/;"	l
f01049b1	obj/kern/kernel.asm	/^f01049b1:	85 c0                	test   %eax,%eax$/;"	l
f01049b3	obj/kern/kernel.asm	/^f01049b3:	0f 85 fc 01 00 00    	jne    f0104bb5 <debuginfo_eip+0x2b5>$/;"	l
f01049b9	obj/kern/kernel.asm	/^f01049b9:	e8 14 10 00 00       	call   f01059d2 <cpunum>$/;"	l
f01049be	obj/kern/kernel.asm	/^f01049be:	6a 04                	push   $0x4$/;"	l
f01049c0	obj/kern/kernel.asm	/^f01049c0:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f01049c3	obj/kern/kernel.asm	/^f01049c3:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f01049c6	obj/kern/kernel.asm	/^f01049c6:	52                   	push   %edx$/;"	l
f01049c7	obj/kern/kernel.asm	/^f01049c7:	ff 75 c0             	pushl  -0x40(%ebp)$/;"	l
f01049ca	obj/kern/kernel.asm	/^f01049ca:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049cd	obj/kern/kernel.asm	/^f01049cd:	ff b0 28 60 1e f0    	pushl  -0xfe19fd8(%eax)$/;"	l
f01049d3	obj/kern/kernel.asm	/^f01049d3:	e8 f6 e2 ff ff       	call   f0102cce <user_mem_check>$/;"	l
f01049d8	obj/kern/kernel.asm	/^f01049d8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01049db	obj/kern/kernel.asm	/^f01049db:	85 c0                	test   %eax,%eax$/;"	l
f01049dd	obj/kern/kernel.asm	/^f01049dd:	74 1f                	je     f01049fe <debuginfo_eip+0xfe>$/;"	l
f01049df	obj/kern/kernel.asm	/^f01049df:	e9 d8 01 00 00       	jmp    f0104bbc <debuginfo_eip+0x2bc>$/;"	l
f01049e4	obj/kern/kernel.asm	/^f01049e4:	c7 45 bc ee 55 11 f0 	movl   $0xf01155ee,-0x44(%ebp)$/;"	l
f01049eb	obj/kern/kernel.asm	/^f01049eb:	c7 45 b8 41 1e 11 f0 	movl   $0xf0111e41,-0x48(%ebp)$/;"	l
f01049f2	obj/kern/kernel.asm	/^f01049f2:	be 40 1e 11 f0       	mov    $0xf0111e40,%esi$/;"	l
f01049f7	obj/kern/kernel.asm	/^f01049f7:	c7 45 c0 f0 7d 10 f0 	movl   $0xf0107df0,-0x40(%ebp)$/;"	l
f01049fe	obj/kern/kernel.asm	/^f01049fe:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f0104a01	obj/kern/kernel.asm	/^f0104a01:	39 45 b8             	cmp    %eax,-0x48(%ebp)$/;"	l
f0104a04	obj/kern/kernel.asm	/^f0104a04:	0f 83 b9 01 00 00    	jae    f0104bc3 <debuginfo_eip+0x2c3>$/;"	l
f0104a0a	obj/kern/kernel.asm	/^f0104a0a:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f0104a0e	obj/kern/kernel.asm	/^f0104a0e:	0f 85 b6 01 00 00    	jne    f0104bca <debuginfo_eip+0x2ca>$/;"	l
f0104a14	obj/kern/kernel.asm	/^f0104a14:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0104a1b	obj/kern/kernel.asm	/^f0104a1b:	2b 75 c0             	sub    -0x40(%ebp),%esi$/;"	l
f0104a1e	obj/kern/kernel.asm	/^f0104a1e:	c1 fe 02             	sar    $0x2,%esi$/;"	l
f0104a21	obj/kern/kernel.asm	/^f0104a21:	69 c6 ab aa aa aa    	imul   $0xaaaaaaab,%esi,%eax$/;"	l
f0104a27	obj/kern/kernel.asm	/^f0104a27:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104a2a	obj/kern/kernel.asm	/^f0104a2a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104a2d	obj/kern/kernel.asm	/^f0104a2d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104a30	obj/kern/kernel.asm	/^f0104a30:	57                   	push   %edi$/;"	l
f0104a31	obj/kern/kernel.asm	/^f0104a31:	6a 64                	push   $0x64$/;"	l
f0104a33	obj/kern/kernel.asm	/^f0104a33:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
f0104a36	obj/kern/kernel.asm	/^f0104a36:	89 d1                	mov    %edx,%ecx$/;"	l
f0104a38	obj/kern/kernel.asm	/^f0104a38:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0104a3b	obj/kern/kernel.asm	/^f0104a3b:	8b 75 c0             	mov    -0x40(%ebp),%esi$/;"	l
f0104a3e	obj/kern/kernel.asm	/^f0104a3e:	89 f0                	mov    %esi,%eax$/;"	l
f0104a40	obj/kern/kernel.asm	/^f0104a40:	e8 c5 fd ff ff       	call   f010480a <stab_binsearch>$/;"	l
f0104a45	obj/kern/kernel.asm	/^f0104a45:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104a48	obj/kern/kernel.asm	/^f0104a48:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a4b	obj/kern/kernel.asm	/^f0104a4b:	85 c0                	test   %eax,%eax$/;"	l
f0104a4d	obj/kern/kernel.asm	/^f0104a4d:	0f 84 7e 01 00 00    	je     f0104bd1 <debuginfo_eip+0x2d1>$/;"	l
f0104a53	obj/kern/kernel.asm	/^f0104a53:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0104a56	obj/kern/kernel.asm	/^f0104a56:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104a59	obj/kern/kernel.asm	/^f0104a59:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104a5c	obj/kern/kernel.asm	/^f0104a5c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104a5f	obj/kern/kernel.asm	/^f0104a5f:	57                   	push   %edi$/;"	l
f0104a60	obj/kern/kernel.asm	/^f0104a60:	6a 24                	push   $0x24$/;"	l
f0104a62	obj/kern/kernel.asm	/^f0104a62:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0104a65	obj/kern/kernel.asm	/^f0104a65:	89 d1                	mov    %edx,%ecx$/;"	l
f0104a67	obj/kern/kernel.asm	/^f0104a67:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0104a6a	obj/kern/kernel.asm	/^f0104a6a:	89 f0                	mov    %esi,%eax$/;"	l
f0104a6c	obj/kern/kernel.asm	/^f0104a6c:	e8 99 fd ff ff       	call   f010480a <stab_binsearch>$/;"	l
f0104a71	obj/kern/kernel.asm	/^f0104a71:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104a74	obj/kern/kernel.asm	/^f0104a74:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0104a77	obj/kern/kernel.asm	/^f0104a77:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a7a	obj/kern/kernel.asm	/^f0104a7a:	39 d0                	cmp    %edx,%eax$/;"	l
f0104a7c	obj/kern/kernel.asm	/^f0104a7c:	7f 2e                	jg     f0104aac <debuginfo_eip+0x1ac>$/;"	l
f0104a7e	obj/kern/kernel.asm	/^f0104a7e:	8d 0c 40             	lea    (%eax,%eax,2),%ecx$/;"	l
f0104a81	obj/kern/kernel.asm	/^f0104a81:	8d 34 8e             	lea    (%esi,%ecx,4),%esi$/;"	l
f0104a84	obj/kern/kernel.asm	/^f0104a84:	89 75 c4             	mov    %esi,-0x3c(%ebp)$/;"	l
f0104a87	obj/kern/kernel.asm	/^f0104a87:	8b 36                	mov    (%esi),%esi$/;"	l
f0104a89	obj/kern/kernel.asm	/^f0104a89:	8b 4d bc             	mov    -0x44(%ebp),%ecx$/;"	l
f0104a8c	obj/kern/kernel.asm	/^f0104a8c:	2b 4d b8             	sub    -0x48(%ebp),%ecx$/;"	l
f0104a8f	obj/kern/kernel.asm	/^f0104a8f:	39 ce                	cmp    %ecx,%esi$/;"	l
f0104a91	obj/kern/kernel.asm	/^f0104a91:	73 06                	jae    f0104a99 <debuginfo_eip+0x199>$/;"	l
f0104a93	obj/kern/kernel.asm	/^f0104a93:	03 75 b8             	add    -0x48(%ebp),%esi$/;"	l
f0104a96	obj/kern/kernel.asm	/^f0104a96:	89 73 08             	mov    %esi,0x8(%ebx)$/;"	l
f0104a99	obj/kern/kernel.asm	/^f0104a99:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0104a9c	obj/kern/kernel.asm	/^f0104a9c:	8b 4e 08             	mov    0x8(%esi),%ecx$/;"	l
f0104a9f	obj/kern/kernel.asm	/^f0104a9f:	89 4b 10             	mov    %ecx,0x10(%ebx)$/;"	l
f0104aa2	obj/kern/kernel.asm	/^f0104aa2:	29 cf                	sub    %ecx,%edi$/;"	l
f0104aa4	obj/kern/kernel.asm	/^f0104aa4:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104aa7	obj/kern/kernel.asm	/^f0104aa7:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0104aaa	obj/kern/kernel.asm	/^f0104aaa:	eb 0f                	jmp    f0104abb <debuginfo_eip+0x1bb>$/;"	l
f0104aac	obj/kern/kernel.asm	/^f0104aac:	89 7b 10             	mov    %edi,0x10(%ebx)$/;"	l
f0104aaf	obj/kern/kernel.asm	/^f0104aaf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104ab2	obj/kern/kernel.asm	/^f0104ab2:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104ab5	obj/kern/kernel.asm	/^f0104ab5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104ab8	obj/kern/kernel.asm	/^f0104ab8:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0104abb	obj/kern/kernel.asm	/^f0104abb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104abe	obj/kern/kernel.asm	/^f0104abe:	6a 3a                	push   $0x3a$/;"	l
f0104ac0	obj/kern/kernel.asm	/^f0104ac0:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0104ac3	obj/kern/kernel.asm	/^f0104ac3:	e8 cd 08 00 00       	call   f0105395 <strfind>$/;"	l
f0104ac8	obj/kern/kernel.asm	/^f0104ac8:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f0104acb	obj/kern/kernel.asm	/^f0104acb:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f0104ace	obj/kern/kernel.asm	/^f0104ace:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104ad1	obj/kern/kernel.asm	/^f0104ad1:	57                   	push   %edi$/;"	l
f0104ad2	obj/kern/kernel.asm	/^f0104ad2:	6a 44                	push   $0x44$/;"	l
f0104ad4	obj/kern/kernel.asm	/^f0104ad4:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f0104ad7	obj/kern/kernel.asm	/^f0104ad7:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0104ada	obj/kern/kernel.asm	/^f0104ada:	8b 75 c0             	mov    -0x40(%ebp),%esi$/;"	l
f0104add	obj/kern/kernel.asm	/^f0104add:	89 f0                	mov    %esi,%eax$/;"	l
f0104adf	obj/kern/kernel.asm	/^f0104adf:	e8 26 fd ff ff       	call   f010480a <stab_binsearch>$/;"	l
f0104ae4	obj/kern/kernel.asm	/^f0104ae4:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0104ae7	obj/kern/kernel.asm	/^f0104ae7:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0104aea	obj/kern/kernel.asm	/^f0104aea:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104aed	obj/kern/kernel.asm	/^f0104aed:	39 c2                	cmp    %eax,%edx$/;"	l
f0104aef	obj/kern/kernel.asm	/^f0104aef:	0f 8f e3 00 00 00    	jg     f0104bd8 <debuginfo_eip+0x2d8>$/;"	l
f0104af5	obj/kern/kernel.asm	/^f0104af5:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0104af8	obj/kern/kernel.asm	/^f0104af8:	0f b7 44 86 06       	movzwl 0x6(%esi,%eax,4),%eax$/;"	l
f0104afd	obj/kern/kernel.asm	/^f0104afd:	89 43 04             	mov    %eax,0x4(%ebx)$/;"	l
f0104b00	obj/kern/kernel.asm	/^f0104b00:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104b03	obj/kern/kernel.asm	/^f0104b03:	89 d0                	mov    %edx,%eax$/;"	l
f0104b05	obj/kern/kernel.asm	/^f0104b05:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f0104b08	obj/kern/kernel.asm	/^f0104b08:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f0104b0b	obj/kern/kernel.asm	/^f0104b0b:	c6 45 c4 00          	movb   $0x0,-0x3c(%ebp)$/;"	l
f0104b0f	obj/kern/kernel.asm	/^f0104b0f:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f0104b12	obj/kern/kernel.asm	/^f0104b12:	eb 0a                	jmp    f0104b1e <debuginfo_eip+0x21e>$/;"	l
f0104b14	obj/kern/kernel.asm	/^f0104b14:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104b17	obj/kern/kernel.asm	/^f0104b17:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0104b1a	obj/kern/kernel.asm	/^f0104b1a:	c6 45 c4 01          	movb   $0x1,-0x3c(%ebp)$/;"	l
f0104b1e	obj/kern/kernel.asm	/^f0104b1e:	39 c7                	cmp    %eax,%edi$/;"	l
f0104b20	obj/kern/kernel.asm	/^f0104b20:	7e 05                	jle    f0104b27 <debuginfo_eip+0x227>$/;"	l
f0104b22	obj/kern/kernel.asm	/^f0104b22:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104b25	obj/kern/kernel.asm	/^f0104b25:	eb 47                	jmp    f0104b6e <debuginfo_eip+0x26e>$/;"	l
f0104b27	obj/kern/kernel.asm	/^f0104b27:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0104b2b	obj/kern/kernel.asm	/^f0104b2b:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0104b2e	obj/kern/kernel.asm	/^f0104b2e:	75 0e                	jne    f0104b3e <debuginfo_eip+0x23e>$/;"	l
f0104b30	obj/kern/kernel.asm	/^f0104b30:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104b33	obj/kern/kernel.asm	/^f0104b33:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0104b37	obj/kern/kernel.asm	/^f0104b37:	74 1c                	je     f0104b55 <debuginfo_eip+0x255>$/;"	l
f0104b39	obj/kern/kernel.asm	/^f0104b39:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104b3c	obj/kern/kernel.asm	/^f0104b3c:	eb 17                	jmp    f0104b55 <debuginfo_eip+0x255>$/;"	l
f0104b3e	obj/kern/kernel.asm	/^f0104b3e:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f0104b41	obj/kern/kernel.asm	/^f0104b41:	75 d1                	jne    f0104b14 <debuginfo_eip+0x214>$/;"	l
f0104b43	obj/kern/kernel.asm	/^f0104b43:	83 7a 08 00          	cmpl   $0x0,0x8(%edx)$/;"	l
f0104b47	obj/kern/kernel.asm	/^f0104b47:	74 cb                	je     f0104b14 <debuginfo_eip+0x214>$/;"	l
f0104b49	obj/kern/kernel.asm	/^f0104b49:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104b4c	obj/kern/kernel.asm	/^f0104b4c:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0104b50	obj/kern/kernel.asm	/^f0104b50:	74 03                	je     f0104b55 <debuginfo_eip+0x255>$/;"	l
f0104b52	obj/kern/kernel.asm	/^f0104b52:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104b55	obj/kern/kernel.asm	/^f0104b55:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0104b58	obj/kern/kernel.asm	/^f0104b58:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f0104b5b	obj/kern/kernel.asm	/^f0104b5b:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f0104b5e	obj/kern/kernel.asm	/^f0104b5e:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f0104b61	obj/kern/kernel.asm	/^f0104b61:	8b 7d b8             	mov    -0x48(%ebp),%edi$/;"	l
f0104b64	obj/kern/kernel.asm	/^f0104b64:	29 f8                	sub    %edi,%eax$/;"	l
f0104b66	obj/kern/kernel.asm	/^f0104b66:	39 c2                	cmp    %eax,%edx$/;"	l
f0104b68	obj/kern/kernel.asm	/^f0104b68:	73 04                	jae    f0104b6e <debuginfo_eip+0x26e>$/;"	l
f0104b6a	obj/kern/kernel.asm	/^f0104b6a:	01 fa                	add    %edi,%edx$/;"	l
f0104b6c	obj/kern/kernel.asm	/^f0104b6c:	89 13                	mov    %edx,(%ebx)$/;"	l
f0104b6e	obj/kern/kernel.asm	/^f0104b6e:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0104b71	obj/kern/kernel.asm	/^f0104b71:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f0104b74	obj/kern/kernel.asm	/^f0104b74:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104b79	obj/kern/kernel.asm	/^f0104b79:	39 f2                	cmp    %esi,%edx$/;"	l
f0104b7b	obj/kern/kernel.asm	/^f0104b7b:	7d 67                	jge    f0104be4 <debuginfo_eip+0x2e4>$/;"	l
f0104b7d	obj/kern/kernel.asm	/^f0104b7d:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104b80	obj/kern/kernel.asm	/^f0104b80:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0104b83	obj/kern/kernel.asm	/^f0104b83:	89 d0                	mov    %edx,%eax$/;"	l
f0104b85	obj/kern/kernel.asm	/^f0104b85:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f0104b88	obj/kern/kernel.asm	/^f0104b88:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f0104b8b	obj/kern/kernel.asm	/^f0104b8b:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f0104b8e	obj/kern/kernel.asm	/^f0104b8e:	eb 04                	jmp    f0104b94 <debuginfo_eip+0x294>$/;"	l
f0104b90	obj/kern/kernel.asm	/^f0104b90:	83 43 14 01          	addl   $0x1,0x14(%ebx)$/;"	l
f0104b94	obj/kern/kernel.asm	/^f0104b94:	39 c6                	cmp    %eax,%esi$/;"	l
f0104b96	obj/kern/kernel.asm	/^f0104b96:	7e 47                	jle    f0104bdf <debuginfo_eip+0x2df>$/;"	l
f0104b98	obj/kern/kernel.asm	/^f0104b98:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0104b9c	obj/kern/kernel.asm	/^f0104b9c:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104b9f	obj/kern/kernel.asm	/^f0104b9f:	83 c2 0c             	add    $0xc,%edx$/;"	l
f0104ba2	obj/kern/kernel.asm	/^f0104ba2:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f0104ba5	obj/kern/kernel.asm	/^f0104ba5:	74 e9                	je     f0104b90 <debuginfo_eip+0x290>$/;"	l
f0104ba7	obj/kern/kernel.asm	/^f0104ba7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104bac	obj/kern/kernel.asm	/^f0104bac:	eb 36                	jmp    f0104be4 <debuginfo_eip+0x2e4>$/;"	l
f0104bae	obj/kern/kernel.asm	/^f0104bae:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104bb3	obj/kern/kernel.asm	/^f0104bb3:	eb 2f                	jmp    f0104be4 <debuginfo_eip+0x2e4>$/;"	l
f0104bb5	obj/kern/kernel.asm	/^f0104bb5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104bba	obj/kern/kernel.asm	/^f0104bba:	eb 28                	jmp    f0104be4 <debuginfo_eip+0x2e4>$/;"	l
f0104bbc	obj/kern/kernel.asm	/^f0104bbc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104bc1	obj/kern/kernel.asm	/^f0104bc1:	eb 21                	jmp    f0104be4 <debuginfo_eip+0x2e4>$/;"	l
f0104bc3	obj/kern/kernel.asm	/^f0104bc3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104bc8	obj/kern/kernel.asm	/^f0104bc8:	eb 1a                	jmp    f0104be4 <debuginfo_eip+0x2e4>$/;"	l
f0104bca	obj/kern/kernel.asm	/^f0104bca:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104bcf	obj/kern/kernel.asm	/^f0104bcf:	eb 13                	jmp    f0104be4 <debuginfo_eip+0x2e4>$/;"	l
f0104bd1	obj/kern/kernel.asm	/^f0104bd1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104bd6	obj/kern/kernel.asm	/^f0104bd6:	eb 0c                	jmp    f0104be4 <debuginfo_eip+0x2e4>$/;"	l
f0104bd8	obj/kern/kernel.asm	/^f0104bd8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104bdd	obj/kern/kernel.asm	/^f0104bdd:	eb 05                	jmp    f0104be4 <debuginfo_eip+0x2e4>$/;"	l
f0104bdf	obj/kern/kernel.asm	/^f0104bdf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104be4	obj/kern/kernel.asm	/^f0104be4:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104be7	obj/kern/kernel.asm	/^f0104be7:	5b                   	pop    %ebx$/;"	l
f0104be8	obj/kern/kernel.asm	/^f0104be8:	5e                   	pop    %esi$/;"	l
f0104be9	obj/kern/kernel.asm	/^f0104be9:	5f                   	pop    %edi$/;"	l
f0104bea	obj/kern/kernel.asm	/^f0104bea:	5d                   	pop    %ebp$/;"	l
f0104beb	obj/kern/kernel.asm	/^f0104beb:	c3                   	ret    $/;"	l
f0104bec	obj/kern/kernel.asm	/^f0104bec <printnum>:$/;"	l
f0104bec	obj/kern/kernel.asm	/^f0104bec:	55                   	push   %ebp$/;"	l
f0104bed	obj/kern/kernel.asm	/^f0104bed:	89 e5                	mov    %esp,%ebp$/;"	l
f0104bef	obj/kern/kernel.asm	/^f0104bef:	57                   	push   %edi$/;"	l
f0104bf0	obj/kern/kernel.asm	/^f0104bf0:	56                   	push   %esi$/;"	l
f0104bf1	obj/kern/kernel.asm	/^f0104bf1:	53                   	push   %ebx$/;"	l
f0104bf2	obj/kern/kernel.asm	/^f0104bf2:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104bf5	obj/kern/kernel.asm	/^f0104bf5:	89 c7                	mov    %eax,%edi$/;"	l
f0104bf7	obj/kern/kernel.asm	/^f0104bf7:	89 d6                	mov    %edx,%esi$/;"	l
f0104bf9	obj/kern/kernel.asm	/^f0104bf9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104bfc	obj/kern/kernel.asm	/^f0104bfc:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104bff	obj/kern/kernel.asm	/^f0104bff:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104c02	obj/kern/kernel.asm	/^f0104c02:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0104c05	obj/kern/kernel.asm	/^f0104c05:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104c08	obj/kern/kernel.asm	/^f0104c08:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104c0d	obj/kern/kernel.asm	/^f0104c0d:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0104c10	obj/kern/kernel.asm	/^f0104c10:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f0104c13	obj/kern/kernel.asm	/^f0104c13:	39 d3                	cmp    %edx,%ebx$/;"	l
f0104c15	obj/kern/kernel.asm	/^f0104c15:	72 05                	jb     f0104c1c <printnum+0x30>$/;"	l
f0104c17	obj/kern/kernel.asm	/^f0104c17:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f0104c1a	obj/kern/kernel.asm	/^f0104c1a:	77 45                	ja     f0104c61 <printnum+0x75>$/;"	l
f0104c1c	obj/kern/kernel.asm	/^f0104c1c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104c1f	obj/kern/kernel.asm	/^f0104c1f:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0104c22	obj/kern/kernel.asm	/^f0104c22:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104c25	obj/kern/kernel.asm	/^f0104c25:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f0104c28	obj/kern/kernel.asm	/^f0104c28:	53                   	push   %ebx$/;"	l
f0104c29	obj/kern/kernel.asm	/^f0104c29:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104c2c	obj/kern/kernel.asm	/^f0104c2c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104c2f	obj/kern/kernel.asm	/^f0104c2f:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0104c32	obj/kern/kernel.asm	/^f0104c32:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0104c35	obj/kern/kernel.asm	/^f0104c35:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0104c38	obj/kern/kernel.asm	/^f0104c38:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0104c3b	obj/kern/kernel.asm	/^f0104c3b:	e8 90 11 00 00       	call   f0105dd0 <__udivdi3>$/;"	l
f0104c40	obj/kern/kernel.asm	/^f0104c40:	83 c4 18             	add    $0x18,%esp$/;"	l
f0104c43	obj/kern/kernel.asm	/^f0104c43:	52                   	push   %edx$/;"	l
f0104c44	obj/kern/kernel.asm	/^f0104c44:	50                   	push   %eax$/;"	l
f0104c45	obj/kern/kernel.asm	/^f0104c45:	89 f2                	mov    %esi,%edx$/;"	l
f0104c47	obj/kern/kernel.asm	/^f0104c47:	89 f8                	mov    %edi,%eax$/;"	l
f0104c49	obj/kern/kernel.asm	/^f0104c49:	e8 9e ff ff ff       	call   f0104bec <printnum>$/;"	l
f0104c4e	obj/kern/kernel.asm	/^f0104c4e:	83 c4 20             	add    $0x20,%esp$/;"	l
f0104c51	obj/kern/kernel.asm	/^f0104c51:	eb 18                	jmp    f0104c6b <printnum+0x7f>$/;"	l
f0104c53	obj/kern/kernel.asm	/^f0104c53:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104c56	obj/kern/kernel.asm	/^f0104c56:	56                   	push   %esi$/;"	l
f0104c57	obj/kern/kernel.asm	/^f0104c57:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0104c5a	obj/kern/kernel.asm	/^f0104c5a:	ff d7                	call   *%edi$/;"	l
f0104c5c	obj/kern/kernel.asm	/^f0104c5c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104c5f	obj/kern/kernel.asm	/^f0104c5f:	eb 03                	jmp    f0104c64 <printnum+0x78>$/;"	l
f0104c61	obj/kern/kernel.asm	/^f0104c61:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0104c64	obj/kern/kernel.asm	/^f0104c64:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104c67	obj/kern/kernel.asm	/^f0104c67:	85 db                	test   %ebx,%ebx$/;"	l
f0104c69	obj/kern/kernel.asm	/^f0104c69:	7f e8                	jg     f0104c53 <printnum+0x67>$/;"	l
f0104c6b	obj/kern/kernel.asm	/^f0104c6b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104c6e	obj/kern/kernel.asm	/^f0104c6e:	56                   	push   %esi$/;"	l
f0104c6f	obj/kern/kernel.asm	/^f0104c6f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104c72	obj/kern/kernel.asm	/^f0104c72:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0104c75	obj/kern/kernel.asm	/^f0104c75:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0104c78	obj/kern/kernel.asm	/^f0104c78:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0104c7b	obj/kern/kernel.asm	/^f0104c7b:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0104c7e	obj/kern/kernel.asm	/^f0104c7e:	e8 7d 12 00 00       	call   f0105f00 <__umoddi3>$/;"	l
f0104c83	obj/kern/kernel.asm	/^f0104c83:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104c86	obj/kern/kernel.asm	/^f0104c86:	0f be 80 4e 78 10 f0 	movsbl -0xfef87b2(%eax),%eax$/;"	l
f0104c8d	obj/kern/kernel.asm	/^f0104c8d:	50                   	push   %eax$/;"	l
f0104c8e	obj/kern/kernel.asm	/^f0104c8e:	ff d7                	call   *%edi$/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104c93	obj/kern/kernel.asm	/^f0104c93:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104c96	obj/kern/kernel.asm	/^f0104c96:	5b                   	pop    %ebx$/;"	l
f0104c97	obj/kern/kernel.asm	/^f0104c97:	5e                   	pop    %esi$/;"	l
f0104c98	obj/kern/kernel.asm	/^f0104c98:	5f                   	pop    %edi$/;"	l
f0104c99	obj/kern/kernel.asm	/^f0104c99:	5d                   	pop    %ebp$/;"	l
f0104c9a	obj/kern/kernel.asm	/^f0104c9a:	c3                   	ret    $/;"	l
f0104c9b	obj/kern/kernel.asm	/^f0104c9b <getuint>:$/;"	l
f0104c9b	obj/kern/kernel.asm	/^f0104c9b:	55                   	push   %ebp$/;"	l
f0104c9c	obj/kern/kernel.asm	/^f0104c9c:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c9e	obj/kern/kernel.asm	/^f0104c9e:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0104ca1	obj/kern/kernel.asm	/^f0104ca1:	7e 0e                	jle    f0104cb1 <getuint+0x16>$/;"	l
f0104ca3	obj/kern/kernel.asm	/^f0104ca3:	8b 10                	mov    (%eax),%edx$/;"	l
f0104ca5	obj/kern/kernel.asm	/^f0104ca5:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f0104ca8	obj/kern/kernel.asm	/^f0104ca8:	89 08                	mov    %ecx,(%eax)$/;"	l
f0104caa	obj/kern/kernel.asm	/^f0104caa:	8b 02                	mov    (%edx),%eax$/;"	l
f0104cac	obj/kern/kernel.asm	/^f0104cac:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0104caf	obj/kern/kernel.asm	/^f0104caf:	eb 22                	jmp    f0104cd3 <getuint+0x38>$/;"	l
f0104cb1	obj/kern/kernel.asm	/^f0104cb1:	85 d2                	test   %edx,%edx$/;"	l
f0104cb3	obj/kern/kernel.asm	/^f0104cb3:	74 10                	je     f0104cc5 <getuint+0x2a>$/;"	l
f0104cb5	obj/kern/kernel.asm	/^f0104cb5:	8b 10                	mov    (%eax),%edx$/;"	l
f0104cb7	obj/kern/kernel.asm	/^f0104cb7:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0104cba	obj/kern/kernel.asm	/^f0104cba:	89 08                	mov    %ecx,(%eax)$/;"	l
f0104cbc	obj/kern/kernel.asm	/^f0104cbc:	8b 02                	mov    (%edx),%eax$/;"	l
f0104cbe	obj/kern/kernel.asm	/^f0104cbe:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104cc3	obj/kern/kernel.asm	/^f0104cc3:	eb 0e                	jmp    f0104cd3 <getuint+0x38>$/;"	l
f0104cc5	obj/kern/kernel.asm	/^f0104cc5:	8b 10                	mov    (%eax),%edx$/;"	l
f0104cc7	obj/kern/kernel.asm	/^f0104cc7:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0104cca	obj/kern/kernel.asm	/^f0104cca:	89 08                	mov    %ecx,(%eax)$/;"	l
f0104ccc	obj/kern/kernel.asm	/^f0104ccc:	8b 02                	mov    (%edx),%eax$/;"	l
f0104cce	obj/kern/kernel.asm	/^f0104cce:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104cd3	obj/kern/kernel.asm	/^f0104cd3:	5d                   	pop    %ebp$/;"	l
f0104cd4	obj/kern/kernel.asm	/^f0104cd4:	c3                   	ret    $/;"	l
f0104cd5	obj/kern/kernel.asm	/^f0104cd5 <sprintputch>:$/;"	l
f0104cd5	obj/kern/kernel.asm	/^f0104cd5:	55                   	push   %ebp$/;"	l
f0104cd6	obj/kern/kernel.asm	/^f0104cd6:	89 e5                	mov    %esp,%ebp$/;"	l
f0104cd8	obj/kern/kernel.asm	/^f0104cd8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104cdb	obj/kern/kernel.asm	/^f0104cdb:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0104cdf	obj/kern/kernel.asm	/^f0104cdf:	8b 10                	mov    (%eax),%edx$/;"	l
f0104ce1	obj/kern/kernel.asm	/^f0104ce1:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0104ce4	obj/kern/kernel.asm	/^f0104ce4:	73 0a                	jae    f0104cf0 <sprintputch+0x1b>$/;"	l
f0104ce6	obj/kern/kernel.asm	/^f0104ce6:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0104ce9	obj/kern/kernel.asm	/^f0104ce9:	89 08                	mov    %ecx,(%eax)$/;"	l
f0104ceb	obj/kern/kernel.asm	/^f0104ceb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104cee	obj/kern/kernel.asm	/^f0104cee:	88 02                	mov    %al,(%edx)$/;"	l
f0104cf0	obj/kern/kernel.asm	/^f0104cf0:	5d                   	pop    %ebp$/;"	l
f0104cf1	obj/kern/kernel.asm	/^f0104cf1:	c3                   	ret    $/;"	l
f0104cf2	obj/kern/kernel.asm	/^f0104cf2 <printfmt>:$/;"	l
f0104cf2	obj/kern/kernel.asm	/^f0104cf2:	55                   	push   %ebp$/;"	l
f0104cf3	obj/kern/kernel.asm	/^f0104cf3:	89 e5                	mov    %esp,%ebp$/;"	l
f0104cf5	obj/kern/kernel.asm	/^f0104cf5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104cf8	obj/kern/kernel.asm	/^f0104cf8:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0104cfb	obj/kern/kernel.asm	/^f0104cfb:	50                   	push   %eax$/;"	l
f0104cfc	obj/kern/kernel.asm	/^f0104cfc:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104cff	obj/kern/kernel.asm	/^f0104cff:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104d02	obj/kern/kernel.asm	/^f0104d02:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0104d05	obj/kern/kernel.asm	/^f0104d05:	e8 05 00 00 00       	call   f0104d0f <vprintfmt>$/;"	l
f0104d0a	obj/kern/kernel.asm	/^f0104d0a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104d0d	obj/kern/kernel.asm	/^f0104d0d:	c9                   	leave  $/;"	l
f0104d0e	obj/kern/kernel.asm	/^f0104d0e:	c3                   	ret    $/;"	l
f0104d0f	obj/kern/kernel.asm	/^f0104d0f <vprintfmt>:$/;"	l
f0104d0f	obj/kern/kernel.asm	/^f0104d0f:	55                   	push   %ebp$/;"	l
f0104d10	obj/kern/kernel.asm	/^f0104d10:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d12	obj/kern/kernel.asm	/^f0104d12:	57                   	push   %edi$/;"	l
f0104d13	obj/kern/kernel.asm	/^f0104d13:	56                   	push   %esi$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14:	53                   	push   %ebx$/;"	l
f0104d15	obj/kern/kernel.asm	/^f0104d15:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0104d18	obj/kern/kernel.asm	/^f0104d18:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104d1b	obj/kern/kernel.asm	/^f0104d1b:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104d1e	obj/kern/kernel.asm	/^f0104d1e:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0104d21	obj/kern/kernel.asm	/^f0104d21:	eb 12                	jmp    f0104d35 <vprintfmt+0x26>$/;"	l
f0104d23	obj/kern/kernel.asm	/^f0104d23:	85 c0                	test   %eax,%eax$/;"	l
f0104d25	obj/kern/kernel.asm	/^f0104d25:	0f 84 a7 03 00 00    	je     f01050d2 <vprintfmt+0x3c3>$/;"	l
f0104d2b	obj/kern/kernel.asm	/^f0104d2b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104d2e	obj/kern/kernel.asm	/^f0104d2e:	53                   	push   %ebx$/;"	l
f0104d2f	obj/kern/kernel.asm	/^f0104d2f:	50                   	push   %eax$/;"	l
f0104d30	obj/kern/kernel.asm	/^f0104d30:	ff d6                	call   *%esi$/;"	l
f0104d32	obj/kern/kernel.asm	/^f0104d32:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104d35	obj/kern/kernel.asm	/^f0104d35:	83 c7 01             	add    $0x1,%edi$/;"	l
f0104d38	obj/kern/kernel.asm	/^f0104d38:	0f b6 47 ff          	movzbl -0x1(%edi),%eax$/;"	l
f0104d3c	obj/kern/kernel.asm	/^f0104d3c:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0104d3f	obj/kern/kernel.asm	/^f0104d3f:	75 e2                	jne    f0104d23 <vprintfmt+0x14>$/;"	l
f0104d41	obj/kern/kernel.asm	/^f0104d41:	c6 45 d4 20          	movb   $0x20,-0x2c(%ebp)$/;"	l
f0104d45	obj/kern/kernel.asm	/^f0104d45:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)$/;"	l
f0104d4c	obj/kern/kernel.asm	/^f0104d4c:	c7 45 cc ff ff ff ff 	movl   $0xffffffff,-0x34(%ebp)$/;"	l
f0104d53	obj/kern/kernel.asm	/^f0104d53:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)$/;"	l
f0104d5a	obj/kern/kernel.asm	/^f0104d5a:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)$/;"	l
f0104d61	obj/kern/kernel.asm	/^f0104d61:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0104d66	obj/kern/kernel.asm	/^f0104d66:	eb 07                	jmp    f0104d6f <vprintfmt+0x60>$/;"	l
f0104d68	obj/kern/kernel.asm	/^f0104d68:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104d6b	obj/kern/kernel.asm	/^f0104d6b:	c6 45 d4 2d          	movb   $0x2d,-0x2c(%ebp)$/;"	l
f0104d6f	obj/kern/kernel.asm	/^f0104d6f:	8d 47 01             	lea    0x1(%edi),%eax$/;"	l
f0104d72	obj/kern/kernel.asm	/^f0104d72:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104d75	obj/kern/kernel.asm	/^f0104d75:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f0104d78	obj/kern/kernel.asm	/^f0104d78:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0104d7b	obj/kern/kernel.asm	/^f0104d7b:	83 e8 23             	sub    $0x23,%eax$/;"	l
f0104d7e	obj/kern/kernel.asm	/^f0104d7e:	3c 55                	cmp    $0x55,%al$/;"	l
f0104d80	obj/kern/kernel.asm	/^f0104d80:	0f 87 31 03 00 00    	ja     f01050b7 <vprintfmt+0x3a8>$/;"	l
f0104d86	obj/kern/kernel.asm	/^f0104d86:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104d89	obj/kern/kernel.asm	/^f0104d89:	ff 24 85 a0 79 10 f0 	jmp    *-0xfef8660(,%eax,4)$/;"	l
f0104d90	obj/kern/kernel.asm	/^f0104d90:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104d93	obj/kern/kernel.asm	/^f0104d93:	c6 45 d4 30          	movb   $0x30,-0x2c(%ebp)$/;"	l
f0104d97	obj/kern/kernel.asm	/^f0104d97:	eb d6                	jmp    f0104d6f <vprintfmt+0x60>$/;"	l
f0104d99	obj/kern/kernel.asm	/^f0104d99:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104d9c	obj/kern/kernel.asm	/^f0104d9c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104da1	obj/kern/kernel.asm	/^f0104da1:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0104da4	obj/kern/kernel.asm	/^f0104da4:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104da7	obj/kern/kernel.asm	/^f0104da7:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax$/;"	l
f0104dab	obj/kern/kernel.asm	/^f0104dab:	0f be 17             	movsbl (%edi),%edx$/;"	l
f0104dae	obj/kern/kernel.asm	/^f0104dae:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f0104db1	obj/kern/kernel.asm	/^f0104db1:	83 fe 09             	cmp    $0x9,%esi$/;"	l
f0104db4	obj/kern/kernel.asm	/^f0104db4:	77 34                	ja     f0104dea <vprintfmt+0xdb>$/;"	l
f0104db6	obj/kern/kernel.asm	/^f0104db6:	83 c7 01             	add    $0x1,%edi$/;"	l
f0104db9	obj/kern/kernel.asm	/^f0104db9:	eb e9                	jmp    f0104da4 <vprintfmt+0x95>$/;"	l
f0104dbb	obj/kern/kernel.asm	/^f0104dbb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104dbe	obj/kern/kernel.asm	/^f0104dbe:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104dc1	obj/kern/kernel.asm	/^f0104dc1:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104dc4	obj/kern/kernel.asm	/^f0104dc4:	8b 00                	mov    (%eax),%eax$/;"	l
f0104dc6	obj/kern/kernel.asm	/^f0104dc6:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0104dc9	obj/kern/kernel.asm	/^f0104dc9:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104dcc	obj/kern/kernel.asm	/^f0104dcc:	eb 22                	jmp    f0104df0 <vprintfmt+0xe1>$/;"	l
f0104dce	obj/kern/kernel.asm	/^f0104dce:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104dd1	obj/kern/kernel.asm	/^f0104dd1:	85 c0                	test   %eax,%eax$/;"	l
f0104dd3	obj/kern/kernel.asm	/^f0104dd3:	0f 48 c1             	cmovs  %ecx,%eax$/;"	l
f0104dd6	obj/kern/kernel.asm	/^f0104dd6:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104dd9	obj/kern/kernel.asm	/^f0104dd9:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104ddc	obj/kern/kernel.asm	/^f0104ddc:	eb 91                	jmp    f0104d6f <vprintfmt+0x60>$/;"	l
f0104dde	obj/kern/kernel.asm	/^f0104dde:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104de1	obj/kern/kernel.asm	/^f0104de1:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)$/;"	l
f0104de8	obj/kern/kernel.asm	/^f0104de8:	eb 85                	jmp    f0104d6f <vprintfmt+0x60>$/;"	l
f0104dea	obj/kern/kernel.asm	/^f0104dea:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0104ded	obj/kern/kernel.asm	/^f0104ded:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104df0	obj/kern/kernel.asm	/^f0104df0:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0104df4	obj/kern/kernel.asm	/^f0104df4:	0f 89 75 ff ff ff    	jns    f0104d6f <vprintfmt+0x60>$/;"	l
f0104dfa	obj/kern/kernel.asm	/^f0104dfa:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0104dfd	obj/kern/kernel.asm	/^f0104dfd:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104e00	obj/kern/kernel.asm	/^f0104e00:	c7 45 cc ff ff ff ff 	movl   $0xffffffff,-0x34(%ebp)$/;"	l
f0104e07	obj/kern/kernel.asm	/^f0104e07:	e9 63 ff ff ff       	jmp    f0104d6f <vprintfmt+0x60>$/;"	l
f0104e0c	obj/kern/kernel.asm	/^f0104e0c:	83 45 d0 01          	addl   $0x1,-0x30(%ebp)$/;"	l
f0104e10	obj/kern/kernel.asm	/^f0104e10:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104e13	obj/kern/kernel.asm	/^f0104e13:	e9 57 ff ff ff       	jmp    f0104d6f <vprintfmt+0x60>$/;"	l
f0104e18	obj/kern/kernel.asm	/^f0104e18:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104e1b	obj/kern/kernel.asm	/^f0104e1b:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104e1e	obj/kern/kernel.asm	/^f0104e1e:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104e21	obj/kern/kernel.asm	/^f0104e21:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104e24	obj/kern/kernel.asm	/^f0104e24:	53                   	push   %ebx$/;"	l
f0104e25	obj/kern/kernel.asm	/^f0104e25:	ff 30                	pushl  (%eax)$/;"	l
f0104e27	obj/kern/kernel.asm	/^f0104e27:	ff d6                	call   *%esi$/;"	l
f0104e29	obj/kern/kernel.asm	/^f0104e29:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104e2c	obj/kern/kernel.asm	/^f0104e2c:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104e2f	obj/kern/kernel.asm	/^f0104e2f:	e9 01 ff ff ff       	jmp    f0104d35 <vprintfmt+0x26>$/;"	l
f0104e34	obj/kern/kernel.asm	/^f0104e34:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104e37	obj/kern/kernel.asm	/^f0104e37:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104e3a	obj/kern/kernel.asm	/^f0104e3a:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104e3d	obj/kern/kernel.asm	/^f0104e3d:	8b 00                	mov    (%eax),%eax$/;"	l
f0104e3f	obj/kern/kernel.asm	/^f0104e3f:	99                   	cltd   $/;"	l
f0104e40	obj/kern/kernel.asm	/^f0104e40:	31 d0                	xor    %edx,%eax$/;"	l
f0104e42	obj/kern/kernel.asm	/^f0104e42:	29 d0                	sub    %edx,%eax$/;"	l
f0104e44	obj/kern/kernel.asm	/^f0104e44:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
f0104e47	obj/kern/kernel.asm	/^f0104e47:	7f 0b                	jg     f0104e54 <vprintfmt+0x145>$/;"	l
f0104e49	obj/kern/kernel.asm	/^f0104e49:	8b 14 85 00 7b 10 f0 	mov    -0xfef8500(,%eax,4),%edx$/;"	l
f0104e50	obj/kern/kernel.asm	/^f0104e50:	85 d2                	test   %edx,%edx$/;"	l
f0104e52	obj/kern/kernel.asm	/^f0104e52:	75 18                	jne    f0104e6c <vprintfmt+0x15d>$/;"	l
f0104e54	obj/kern/kernel.asm	/^f0104e54:	50                   	push   %eax$/;"	l
f0104e55	obj/kern/kernel.asm	/^f0104e55:	68 66 78 10 f0       	push   $0xf0107866$/;"	l
f0104e5a	obj/kern/kernel.asm	/^f0104e5a:	53                   	push   %ebx$/;"	l
f0104e5b	obj/kern/kernel.asm	/^f0104e5b:	56                   	push   %esi$/;"	l
f0104e5c	obj/kern/kernel.asm	/^f0104e5c:	e8 91 fe ff ff       	call   f0104cf2 <printfmt>$/;"	l
f0104e61	obj/kern/kernel.asm	/^f0104e61:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104e64	obj/kern/kernel.asm	/^f0104e64:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104e67	obj/kern/kernel.asm	/^f0104e67:	e9 c9 fe ff ff       	jmp    f0104d35 <vprintfmt+0x26>$/;"	l
f0104e6c	obj/kern/kernel.asm	/^f0104e6c:	52                   	push   %edx$/;"	l
f0104e6d	obj/kern/kernel.asm	/^f0104e6d:	68 f5 6f 10 f0       	push   $0xf0106ff5$/;"	l
f0104e72	obj/kern/kernel.asm	/^f0104e72:	53                   	push   %ebx$/;"	l
f0104e73	obj/kern/kernel.asm	/^f0104e73:	56                   	push   %esi$/;"	l
f0104e74	obj/kern/kernel.asm	/^f0104e74:	e8 79 fe ff ff       	call   f0104cf2 <printfmt>$/;"	l
f0104e79	obj/kern/kernel.asm	/^f0104e79:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104e7c	obj/kern/kernel.asm	/^f0104e7c:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104e7f	obj/kern/kernel.asm	/^f0104e7f:	e9 b1 fe ff ff       	jmp    f0104d35 <vprintfmt+0x26>$/;"	l
f0104e84	obj/kern/kernel.asm	/^f0104e84:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104e87	obj/kern/kernel.asm	/^f0104e87:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104e8a	obj/kern/kernel.asm	/^f0104e8a:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104e8d	obj/kern/kernel.asm	/^f0104e8d:	8b 38                	mov    (%eax),%edi$/;"	l
f0104e8f	obj/kern/kernel.asm	/^f0104e8f:	85 ff                	test   %edi,%edi$/;"	l
f0104e91	obj/kern/kernel.asm	/^f0104e91:	b8 5f 78 10 f0       	mov    $0xf010785f,%eax$/;"	l
f0104e96	obj/kern/kernel.asm	/^f0104e96:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f0104e99	obj/kern/kernel.asm	/^f0104e99:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0104e9d	obj/kern/kernel.asm	/^f0104e9d:	0f 8e 94 00 00 00    	jle    f0104f37 <vprintfmt+0x228>$/;"	l
f0104ea3	obj/kern/kernel.asm	/^f0104ea3:	80 7d d4 2d          	cmpb   $0x2d,-0x2c(%ebp)$/;"	l
f0104ea7	obj/kern/kernel.asm	/^f0104ea7:	0f 84 98 00 00 00    	je     f0104f45 <vprintfmt+0x236>$/;"	l
f0104ead	obj/kern/kernel.asm	/^f0104ead:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104eb0	obj/kern/kernel.asm	/^f0104eb0:	ff 75 cc             	pushl  -0x34(%ebp)$/;"	l
f0104eb3	obj/kern/kernel.asm	/^f0104eb3:	57                   	push   %edi$/;"	l
f0104eb4	obj/kern/kernel.asm	/^f0104eb4:	e8 92 03 00 00       	call   f010524b <strnlen>$/;"	l
f0104eb9	obj/kern/kernel.asm	/^f0104eb9:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0104ebc	obj/kern/kernel.asm	/^f0104ebc:	29 c1                	sub    %eax,%ecx$/;"	l
f0104ebe	obj/kern/kernel.asm	/^f0104ebe:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0104ec1	obj/kern/kernel.asm	/^f0104ec1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ec4	obj/kern/kernel.asm	/^f0104ec4:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax$/;"	l
f0104ec8	obj/kern/kernel.asm	/^f0104ec8:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104ecb	obj/kern/kernel.asm	/^f0104ecb:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0104ece	obj/kern/kernel.asm	/^f0104ece:	89 cf                	mov    %ecx,%edi$/;"	l
f0104ed0	obj/kern/kernel.asm	/^f0104ed0:	eb 0f                	jmp    f0104ee1 <vprintfmt+0x1d2>$/;"	l
f0104ed2	obj/kern/kernel.asm	/^f0104ed2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104ed5	obj/kern/kernel.asm	/^f0104ed5:	53                   	push   %ebx$/;"	l
f0104ed6	obj/kern/kernel.asm	/^f0104ed6:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0104ed9	obj/kern/kernel.asm	/^f0104ed9:	ff d6                	call   *%esi$/;"	l
f0104edb	obj/kern/kernel.asm	/^f0104edb:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0104ede	obj/kern/kernel.asm	/^f0104ede:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ee1	obj/kern/kernel.asm	/^f0104ee1:	85 ff                	test   %edi,%edi$/;"	l
f0104ee3	obj/kern/kernel.asm	/^f0104ee3:	7f ed                	jg     f0104ed2 <vprintfmt+0x1c3>$/;"	l
f0104ee5	obj/kern/kernel.asm	/^f0104ee5:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0104ee8	obj/kern/kernel.asm	/^f0104ee8:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0104eeb	obj/kern/kernel.asm	/^f0104eeb:	85 c9                	test   %ecx,%ecx$/;"	l
f0104eed	obj/kern/kernel.asm	/^f0104eed:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104ef2	obj/kern/kernel.asm	/^f0104ef2:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f0104ef5	obj/kern/kernel.asm	/^f0104ef5:	29 c1                	sub    %eax,%ecx$/;"	l
f0104ef7	obj/kern/kernel.asm	/^f0104ef7:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0104efa	obj/kern/kernel.asm	/^f0104efa:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f0104efd	obj/kern/kernel.asm	/^f0104efd:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f0104f00	obj/kern/kernel.asm	/^f0104f00:	89 cb                	mov    %ecx,%ebx$/;"	l
f0104f02	obj/kern/kernel.asm	/^f0104f02:	eb 4d                	jmp    f0104f51 <vprintfmt+0x242>$/;"	l
f0104f04	obj/kern/kernel.asm	/^f0104f04:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f0104f08	obj/kern/kernel.asm	/^f0104f08:	74 1b                	je     f0104f25 <vprintfmt+0x216>$/;"	l
f0104f0a	obj/kern/kernel.asm	/^f0104f0a:	0f be c0             	movsbl %al,%eax$/;"	l
f0104f0d	obj/kern/kernel.asm	/^f0104f0d:	83 e8 20             	sub    $0x20,%eax$/;"	l
f0104f10	obj/kern/kernel.asm	/^f0104f10:	83 f8 5e             	cmp    $0x5e,%eax$/;"	l
f0104f13	obj/kern/kernel.asm	/^f0104f13:	76 10                	jbe    f0104f25 <vprintfmt+0x216>$/;"	l
f0104f15	obj/kern/kernel.asm	/^f0104f15:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104f18	obj/kern/kernel.asm	/^f0104f18:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104f1b	obj/kern/kernel.asm	/^f0104f1b:	6a 3f                	push   $0x3f$/;"	l
f0104f1d	obj/kern/kernel.asm	/^f0104f1d:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104f20	obj/kern/kernel.asm	/^f0104f20:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104f23	obj/kern/kernel.asm	/^f0104f23:	eb 0d                	jmp    f0104f32 <vprintfmt+0x223>$/;"	l
f0104f25	obj/kern/kernel.asm	/^f0104f25:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104f28	obj/kern/kernel.asm	/^f0104f28:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104f2b	obj/kern/kernel.asm	/^f0104f2b:	52                   	push   %edx$/;"	l
f0104f2c	obj/kern/kernel.asm	/^f0104f2c:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104f2f	obj/kern/kernel.asm	/^f0104f2f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104f32	obj/kern/kernel.asm	/^f0104f32:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104f35	obj/kern/kernel.asm	/^f0104f35:	eb 1a                	jmp    f0104f51 <vprintfmt+0x242>$/;"	l
f0104f37	obj/kern/kernel.asm	/^f0104f37:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0104f3a	obj/kern/kernel.asm	/^f0104f3a:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f0104f3d	obj/kern/kernel.asm	/^f0104f3d:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f0104f40	obj/kern/kernel.asm	/^f0104f40:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0104f43	obj/kern/kernel.asm	/^f0104f43:	eb 0c                	jmp    f0104f51 <vprintfmt+0x242>$/;"	l
f0104f45	obj/kern/kernel.asm	/^f0104f45:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0104f48	obj/kern/kernel.asm	/^f0104f48:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f0104f4b	obj/kern/kernel.asm	/^f0104f4b:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f0104f4e	obj/kern/kernel.asm	/^f0104f4e:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0104f51	obj/kern/kernel.asm	/^f0104f51:	83 c7 01             	add    $0x1,%edi$/;"	l
f0104f54	obj/kern/kernel.asm	/^f0104f54:	0f b6 47 ff          	movzbl -0x1(%edi),%eax$/;"	l
f0104f58	obj/kern/kernel.asm	/^f0104f58:	0f be d0             	movsbl %al,%edx$/;"	l
f0104f5b	obj/kern/kernel.asm	/^f0104f5b:	85 d2                	test   %edx,%edx$/;"	l
f0104f5d	obj/kern/kernel.asm	/^f0104f5d:	74 23                	je     f0104f82 <vprintfmt+0x273>$/;"	l
f0104f5f	obj/kern/kernel.asm	/^f0104f5f:	85 f6                	test   %esi,%esi$/;"	l
f0104f61	obj/kern/kernel.asm	/^f0104f61:	78 a1                	js     f0104f04 <vprintfmt+0x1f5>$/;"	l
f0104f63	obj/kern/kernel.asm	/^f0104f63:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0104f66	obj/kern/kernel.asm	/^f0104f66:	79 9c                	jns    f0104f04 <vprintfmt+0x1f5>$/;"	l
f0104f68	obj/kern/kernel.asm	/^f0104f68:	89 df                	mov    %ebx,%edi$/;"	l
f0104f6a	obj/kern/kernel.asm	/^f0104f6a:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104f6d	obj/kern/kernel.asm	/^f0104f6d:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104f70	obj/kern/kernel.asm	/^f0104f70:	eb 18                	jmp    f0104f8a <vprintfmt+0x27b>$/;"	l
f0104f72	obj/kern/kernel.asm	/^f0104f72:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104f75	obj/kern/kernel.asm	/^f0104f75:	53                   	push   %ebx$/;"	l
f0104f76	obj/kern/kernel.asm	/^f0104f76:	6a 20                	push   $0x20$/;"	l
f0104f78	obj/kern/kernel.asm	/^f0104f78:	ff d6                	call   *%esi$/;"	l
f0104f7a	obj/kern/kernel.asm	/^f0104f7a:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0104f7d	obj/kern/kernel.asm	/^f0104f7d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104f80	obj/kern/kernel.asm	/^f0104f80:	eb 08                	jmp    f0104f8a <vprintfmt+0x27b>$/;"	l
f0104f82	obj/kern/kernel.asm	/^f0104f82:	89 df                	mov    %ebx,%edi$/;"	l
f0104f84	obj/kern/kernel.asm	/^f0104f84:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104f87	obj/kern/kernel.asm	/^f0104f87:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104f8a	obj/kern/kernel.asm	/^f0104f8a:	85 ff                	test   %edi,%edi$/;"	l
f0104f8c	obj/kern/kernel.asm	/^f0104f8c:	7f e4                	jg     f0104f72 <vprintfmt+0x263>$/;"	l
f0104f8e	obj/kern/kernel.asm	/^f0104f8e:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104f91	obj/kern/kernel.asm	/^f0104f91:	e9 9f fd ff ff       	jmp    f0104d35 <vprintfmt+0x26>$/;"	l
f0104f96	obj/kern/kernel.asm	/^f0104f96:	83 7d d0 01          	cmpl   $0x1,-0x30(%ebp)$/;"	l
f0104f9a	obj/kern/kernel.asm	/^f0104f9a:	7e 16                	jle    f0104fb2 <vprintfmt+0x2a3>$/;"	l
f0104f9c	obj/kern/kernel.asm	/^f0104f9c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104f9f	obj/kern/kernel.asm	/^f0104f9f:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f0104fa2	obj/kern/kernel.asm	/^f0104fa2:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104fa5	obj/kern/kernel.asm	/^f0104fa5:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0104fa8	obj/kern/kernel.asm	/^f0104fa8:	8b 00                	mov    (%eax),%eax$/;"	l
f0104faa	obj/kern/kernel.asm	/^f0104faa:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104fad	obj/kern/kernel.asm	/^f0104fad:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0104fb0	obj/kern/kernel.asm	/^f0104fb0:	eb 34                	jmp    f0104fe6 <vprintfmt+0x2d7>$/;"	l
f0104fb2	obj/kern/kernel.asm	/^f0104fb2:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
f0104fb6	obj/kern/kernel.asm	/^f0104fb6:	74 18                	je     f0104fd0 <vprintfmt+0x2c1>$/;"	l
f0104fb8	obj/kern/kernel.asm	/^f0104fb8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104fbb	obj/kern/kernel.asm	/^f0104fbb:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104fbe	obj/kern/kernel.asm	/^f0104fbe:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104fc1	obj/kern/kernel.asm	/^f0104fc1:	8b 00                	mov    (%eax),%eax$/;"	l
f0104fc3	obj/kern/kernel.asm	/^f0104fc3:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104fc6	obj/kern/kernel.asm	/^f0104fc6:	89 c1                	mov    %eax,%ecx$/;"	l
f0104fc8	obj/kern/kernel.asm	/^f0104fc8:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f0104fcb	obj/kern/kernel.asm	/^f0104fcb:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0104fce	obj/kern/kernel.asm	/^f0104fce:	eb 16                	jmp    f0104fe6 <vprintfmt+0x2d7>$/;"	l
f0104fd0	obj/kern/kernel.asm	/^f0104fd0:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104fd3	obj/kern/kernel.asm	/^f0104fd3:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104fd6	obj/kern/kernel.asm	/^f0104fd6:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104fd9	obj/kern/kernel.asm	/^f0104fd9:	8b 00                	mov    (%eax),%eax$/;"	l
f0104fdb	obj/kern/kernel.asm	/^f0104fdb:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104fde	obj/kern/kernel.asm	/^f0104fde:	89 c1                	mov    %eax,%ecx$/;"	l
f0104fe0	obj/kern/kernel.asm	/^f0104fe0:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f0104fe3	obj/kern/kernel.asm	/^f0104fe3:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0104fe6	obj/kern/kernel.asm	/^f0104fe6:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0104fe9	obj/kern/kernel.asm	/^f0104fe9:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0104fec	obj/kern/kernel.asm	/^f0104fec:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0104ff1	obj/kern/kernel.asm	/^f0104ff1:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0104ff5	obj/kern/kernel.asm	/^f0104ff5:	0f 89 88 00 00 00    	jns    f0105083 <vprintfmt+0x374>$/;"	l
f0104ffb	obj/kern/kernel.asm	/^f0104ffb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104ffe	obj/kern/kernel.asm	/^f0104ffe:	53                   	push   %ebx$/;"	l
f0104fff	obj/kern/kernel.asm	/^f0104fff:	6a 2d                	push   $0x2d$/;"	l
f0105001	obj/kern/kernel.asm	/^f0105001:	ff d6                	call   *%esi$/;"	l
f0105003	obj/kern/kernel.asm	/^f0105003:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0105006	obj/kern/kernel.asm	/^f0105006:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105009	obj/kern/kernel.asm	/^f0105009:	f7 d8                	neg    %eax$/;"	l
f010500b	obj/kern/kernel.asm	/^f010500b:	83 d2 00             	adc    $0x0,%edx$/;"	l
f010500e	obj/kern/kernel.asm	/^f010500e:	f7 da                	neg    %edx$/;"	l
f0105010	obj/kern/kernel.asm	/^f0105010:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105013	obj/kern/kernel.asm	/^f0105013:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0105018	obj/kern/kernel.asm	/^f0105018:	eb 69                	jmp    f0105083 <vprintfmt+0x374>$/;"	l
f010501a	obj/kern/kernel.asm	/^f010501a:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f010501d	obj/kern/kernel.asm	/^f010501d:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105020	obj/kern/kernel.asm	/^f0105020:	e8 76 fc ff ff       	call   f0104c9b <getuint>$/;"	l
f0105025	obj/kern/kernel.asm	/^f0105025:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f010502a	obj/kern/kernel.asm	/^f010502a:	eb 57                	jmp    f0105083 <vprintfmt+0x374>$/;"	l
f010502c	obj/kern/kernel.asm	/^f010502c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010502f	obj/kern/kernel.asm	/^f010502f:	53                   	push   %ebx$/;"	l
f0105030	obj/kern/kernel.asm	/^f0105030:	6a 30                	push   $0x30$/;"	l
f0105032	obj/kern/kernel.asm	/^f0105032:	ff d6                	call   *%esi$/;"	l
f0105034	obj/kern/kernel.asm	/^f0105034:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0105037	obj/kern/kernel.asm	/^f0105037:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010503a	obj/kern/kernel.asm	/^f010503a:	e8 5c fc ff ff       	call   f0104c9b <getuint>$/;"	l
f010503f	obj/kern/kernel.asm	/^f010503f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105042	obj/kern/kernel.asm	/^f0105042:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f0105047	obj/kern/kernel.asm	/^f0105047:	eb 3a                	jmp    f0105083 <vprintfmt+0x374>$/;"	l
f0105049	obj/kern/kernel.asm	/^f0105049:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010504c	obj/kern/kernel.asm	/^f010504c:	53                   	push   %ebx$/;"	l
f010504d	obj/kern/kernel.asm	/^f010504d:	6a 30                	push   $0x30$/;"	l
f010504f	obj/kern/kernel.asm	/^f010504f:	ff d6                	call   *%esi$/;"	l
f0105051	obj/kern/kernel.asm	/^f0105051:	83 c4 08             	add    $0x8,%esp$/;"	l
f0105054	obj/kern/kernel.asm	/^f0105054:	53                   	push   %ebx$/;"	l
f0105055	obj/kern/kernel.asm	/^f0105055:	6a 78                	push   $0x78$/;"	l
f0105057	obj/kern/kernel.asm	/^f0105057:	ff d6                	call   *%esi$/;"	l
f0105059	obj/kern/kernel.asm	/^f0105059:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010505c	obj/kern/kernel.asm	/^f010505c:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010505f	obj/kern/kernel.asm	/^f010505f:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105062	obj/kern/kernel.asm	/^f0105062:	8b 00                	mov    (%eax),%eax$/;"	l
f0105064	obj/kern/kernel.asm	/^f0105064:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105069	obj/kern/kernel.asm	/^f0105069:	83 c4 10             	add    $0x10,%esp$/;"	l
f010506c	obj/kern/kernel.asm	/^f010506c:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f0105071	obj/kern/kernel.asm	/^f0105071:	eb 10                	jmp    f0105083 <vprintfmt+0x374>$/;"	l
f0105073	obj/kern/kernel.asm	/^f0105073:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0105076	obj/kern/kernel.asm	/^f0105076:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105079	obj/kern/kernel.asm	/^f0105079:	e8 1d fc ff ff       	call   f0104c9b <getuint>$/;"	l
f010507e	obj/kern/kernel.asm	/^f010507e:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f0105083	obj/kern/kernel.asm	/^f0105083:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105086	obj/kern/kernel.asm	/^f0105086:	0f be 7d d4          	movsbl -0x2c(%ebp),%edi$/;"	l
f010508a	obj/kern/kernel.asm	/^f010508a:	57                   	push   %edi$/;"	l
f010508b	obj/kern/kernel.asm	/^f010508b:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f010508e	obj/kern/kernel.asm	/^f010508e:	51                   	push   %ecx$/;"	l
f010508f	obj/kern/kernel.asm	/^f010508f:	52                   	push   %edx$/;"	l
f0105090	obj/kern/kernel.asm	/^f0105090:	50                   	push   %eax$/;"	l
f0105091	obj/kern/kernel.asm	/^f0105091:	89 da                	mov    %ebx,%edx$/;"	l
f0105093	obj/kern/kernel.asm	/^f0105093:	89 f0                	mov    %esi,%eax$/;"	l
f0105095	obj/kern/kernel.asm	/^f0105095:	e8 52 fb ff ff       	call   f0104bec <printnum>$/;"	l
f010509a	obj/kern/kernel.asm	/^f010509a:	83 c4 20             	add    $0x20,%esp$/;"	l
f010509d	obj/kern/kernel.asm	/^f010509d:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01050a0	obj/kern/kernel.asm	/^f01050a0:	e9 90 fc ff ff       	jmp    f0104d35 <vprintfmt+0x26>$/;"	l
f01050a5	obj/kern/kernel.asm	/^f01050a5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01050a8	obj/kern/kernel.asm	/^f01050a8:	53                   	push   %ebx$/;"	l
f01050a9	obj/kern/kernel.asm	/^f01050a9:	52                   	push   %edx$/;"	l
f01050aa	obj/kern/kernel.asm	/^f01050aa:	ff d6                	call   *%esi$/;"	l
f01050ac	obj/kern/kernel.asm	/^f01050ac:	83 c4 10             	add    $0x10,%esp$/;"	l
f01050af	obj/kern/kernel.asm	/^f01050af:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01050b2	obj/kern/kernel.asm	/^f01050b2:	e9 7e fc ff ff       	jmp    f0104d35 <vprintfmt+0x26>$/;"	l
f01050b7	obj/kern/kernel.asm	/^f01050b7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01050ba	obj/kern/kernel.asm	/^f01050ba:	53                   	push   %ebx$/;"	l
f01050bb	obj/kern/kernel.asm	/^f01050bb:	6a 25                	push   $0x25$/;"	l
f01050bd	obj/kern/kernel.asm	/^f01050bd:	ff d6                	call   *%esi$/;"	l
f01050bf	obj/kern/kernel.asm	/^f01050bf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01050c2	obj/kern/kernel.asm	/^f01050c2:	eb 03                	jmp    f01050c7 <vprintfmt+0x3b8>$/;"	l
f01050c4	obj/kern/kernel.asm	/^f01050c4:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01050c7	obj/kern/kernel.asm	/^f01050c7:	80 7f ff 25          	cmpb   $0x25,-0x1(%edi)$/;"	l
f01050cb	obj/kern/kernel.asm	/^f01050cb:	75 f7                	jne    f01050c4 <vprintfmt+0x3b5>$/;"	l
f01050cd	obj/kern/kernel.asm	/^f01050cd:	e9 63 fc ff ff       	jmp    f0104d35 <vprintfmt+0x26>$/;"	l
f01050d2	obj/kern/kernel.asm	/^f01050d2:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01050d5	obj/kern/kernel.asm	/^f01050d5:	5b                   	pop    %ebx$/;"	l
f01050d6	obj/kern/kernel.asm	/^f01050d6:	5e                   	pop    %esi$/;"	l
f01050d7	obj/kern/kernel.asm	/^f01050d7:	5f                   	pop    %edi$/;"	l
f01050d8	obj/kern/kernel.asm	/^f01050d8:	5d                   	pop    %ebp$/;"	l
f01050d9	obj/kern/kernel.asm	/^f01050d9:	c3                   	ret    $/;"	l
f01050da	obj/kern/kernel.asm	/^f01050da <vsnprintf>:$/;"	l
f01050da	obj/kern/kernel.asm	/^f01050da:	55                   	push   %ebp$/;"	l
f01050db	obj/kern/kernel.asm	/^f01050db:	89 e5                	mov    %esp,%ebp$/;"	l
f01050dd	obj/kern/kernel.asm	/^f01050dd:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01050e0	obj/kern/kernel.asm	/^f01050e0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01050e3	obj/kern/kernel.asm	/^f01050e3:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01050e6	obj/kern/kernel.asm	/^f01050e6:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01050e9	obj/kern/kernel.asm	/^f01050e9:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f01050ed	obj/kern/kernel.asm	/^f01050ed:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f01050f0	obj/kern/kernel.asm	/^f01050f0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01050f7	obj/kern/kernel.asm	/^f01050f7:	85 c0                	test   %eax,%eax$/;"	l
f01050f9	obj/kern/kernel.asm	/^f01050f9:	74 26                	je     f0105121 <vsnprintf+0x47>$/;"	l
f01050fb	obj/kern/kernel.asm	/^f01050fb:	85 d2                	test   %edx,%edx$/;"	l
f01050fd	obj/kern/kernel.asm	/^f01050fd:	7e 22                	jle    f0105121 <vsnprintf+0x47>$/;"	l
f01050ff	obj/kern/kernel.asm	/^f01050ff:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0105102	obj/kern/kernel.asm	/^f0105102:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105105	obj/kern/kernel.asm	/^f0105105:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0105108	obj/kern/kernel.asm	/^f0105108:	50                   	push   %eax$/;"	l
f0105109	obj/kern/kernel.asm	/^f0105109:	68 d5 4c 10 f0       	push   $0xf0104cd5$/;"	l
f010510e	obj/kern/kernel.asm	/^f010510e:	e8 fc fb ff ff       	call   f0104d0f <vprintfmt>$/;"	l
f0105113	obj/kern/kernel.asm	/^f0105113:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0105116	obj/kern/kernel.asm	/^f0105116:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0105119	obj/kern/kernel.asm	/^f0105119:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010511c	obj/kern/kernel.asm	/^f010511c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010511f	obj/kern/kernel.asm	/^f010511f:	eb 05                	jmp    f0105126 <vsnprintf+0x4c>$/;"	l
f0105121	obj/kern/kernel.asm	/^f0105121:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105126	obj/kern/kernel.asm	/^f0105126:	c9                   	leave  $/;"	l
f0105127	obj/kern/kernel.asm	/^f0105127:	c3                   	ret    $/;"	l
f0105128	obj/kern/kernel.asm	/^f0105128 <snprintf>:$/;"	l
f0105128	obj/kern/kernel.asm	/^f0105128:	55                   	push   %ebp$/;"	l
f0105129	obj/kern/kernel.asm	/^f0105129:	89 e5                	mov    %esp,%ebp$/;"	l
f010512b	obj/kern/kernel.asm	/^f010512b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010512e	obj/kern/kernel.asm	/^f010512e:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105131	obj/kern/kernel.asm	/^f0105131:	50                   	push   %eax$/;"	l
f0105132	obj/kern/kernel.asm	/^f0105132:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105135	obj/kern/kernel.asm	/^f0105135:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105138	obj/kern/kernel.asm	/^f0105138:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010513b	obj/kern/kernel.asm	/^f010513b:	e8 9a ff ff ff       	call   f01050da <vsnprintf>$/;"	l
f0105140	obj/kern/kernel.asm	/^f0105140:	c9                   	leave  $/;"	l
f0105141	obj/kern/kernel.asm	/^f0105141:	c3                   	ret    $/;"	l
f0105142	obj/kern/kernel.asm	/^f0105142 <readline>:$/;"	l
f0105142	obj/kern/kernel.asm	/^f0105142:	55                   	push   %ebp$/;"	l
f0105143	obj/kern/kernel.asm	/^f0105143:	89 e5                	mov    %esp,%ebp$/;"	l
f0105145	obj/kern/kernel.asm	/^f0105145:	57                   	push   %edi$/;"	l
f0105146	obj/kern/kernel.asm	/^f0105146:	56                   	push   %esi$/;"	l
f0105147	obj/kern/kernel.asm	/^f0105147:	53                   	push   %ebx$/;"	l
f0105148	obj/kern/kernel.asm	/^f0105148:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010514b	obj/kern/kernel.asm	/^f010514b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010514e	obj/kern/kernel.asm	/^f010514e:	85 c0                	test   %eax,%eax$/;"	l
f0105150	obj/kern/kernel.asm	/^f0105150:	74 11                	je     f0105163 <readline+0x21>$/;"	l
f0105152	obj/kern/kernel.asm	/^f0105152:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105155	obj/kern/kernel.asm	/^f0105155:	50                   	push   %eax$/;"	l
f0105156	obj/kern/kernel.asm	/^f0105156:	68 f5 6f 10 f0       	push   $0xf0106ff5$/;"	l
f010515b	obj/kern/kernel.asm	/^f010515b:	e8 4a e5 ff ff       	call   f01036aa <cprintf>$/;"	l
f0105160	obj/kern/kernel.asm	/^f0105160:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105163	obj/kern/kernel.asm	/^f0105163:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105166	obj/kern/kernel.asm	/^f0105166:	6a 00                	push   $0x0$/;"	l
f0105168	obj/kern/kernel.asm	/^f0105168:	e8 27 b6 ff ff       	call   f0100794 <iscons>$/;"	l
f010516d	obj/kern/kernel.asm	/^f010516d:	89 c7                	mov    %eax,%edi$/;"	l
f010516f	obj/kern/kernel.asm	/^f010516f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105172	obj/kern/kernel.asm	/^f0105172:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105177	obj/kern/kernel.asm	/^f0105177:	e8 07 b6 ff ff       	call   f0100783 <getchar>$/;"	l
f010517c	obj/kern/kernel.asm	/^f010517c:	89 c3                	mov    %eax,%ebx$/;"	l
f010517e	obj/kern/kernel.asm	/^f010517e:	85 c0                	test   %eax,%eax$/;"	l
f0105180	obj/kern/kernel.asm	/^f0105180:	79 29                	jns    f01051ab <readline+0x69>$/;"	l
f0105182	obj/kern/kernel.asm	/^f0105182:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105187	obj/kern/kernel.asm	/^f0105187:	83 fb f8             	cmp    $0xfffffff8,%ebx$/;"	l
f010518a	obj/kern/kernel.asm	/^f010518a:	0f 84 9b 00 00 00    	je     f010522b <readline+0xe9>$/;"	l
f0105190	obj/kern/kernel.asm	/^f0105190:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105193	obj/kern/kernel.asm	/^f0105193:	53                   	push   %ebx$/;"	l
f0105194	obj/kern/kernel.asm	/^f0105194:	68 5f 7b 10 f0       	push   $0xf0107b5f$/;"	l
f0105199	obj/kern/kernel.asm	/^f0105199:	e8 0c e5 ff ff       	call   f01036aa <cprintf>$/;"	l
f010519e	obj/kern/kernel.asm	/^f010519e:	83 c4 10             	add    $0x10,%esp$/;"	l
f01051a1	obj/kern/kernel.asm	/^f01051a1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01051a6	obj/kern/kernel.asm	/^f01051a6:	e9 80 00 00 00       	jmp    f010522b <readline+0xe9>$/;"	l
f01051ab	obj/kern/kernel.asm	/^f01051ab:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01051ae	obj/kern/kernel.asm	/^f01051ae:	0f 94 c2             	sete   %dl$/;"	l
f01051b1	obj/kern/kernel.asm	/^f01051b1:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f01051b4	obj/kern/kernel.asm	/^f01051b4:	0f 94 c0             	sete   %al$/;"	l
f01051b7	obj/kern/kernel.asm	/^f01051b7:	08 c2                	or     %al,%dl$/;"	l
f01051b9	obj/kern/kernel.asm	/^f01051b9:	74 1a                	je     f01051d5 <readline+0x93>$/;"	l
f01051bb	obj/kern/kernel.asm	/^f01051bb:	85 f6                	test   %esi,%esi$/;"	l
f01051bd	obj/kern/kernel.asm	/^f01051bd:	7e 16                	jle    f01051d5 <readline+0x93>$/;"	l
f01051bf	obj/kern/kernel.asm	/^f01051bf:	85 ff                	test   %edi,%edi$/;"	l
f01051c1	obj/kern/kernel.asm	/^f01051c1:	74 0d                	je     f01051d0 <readline+0x8e>$/;"	l
f01051c3	obj/kern/kernel.asm	/^f01051c3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01051c6	obj/kern/kernel.asm	/^f01051c6:	6a 08                	push   $0x8$/;"	l
f01051c8	obj/kern/kernel.asm	/^f01051c8:	e8 a6 b5 ff ff       	call   f0100773 <cputchar>$/;"	l
f01051cd	obj/kern/kernel.asm	/^f01051cd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01051d0	obj/kern/kernel.asm	/^f01051d0:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01051d3	obj/kern/kernel.asm	/^f01051d3:	eb a2                	jmp    f0105177 <readline+0x35>$/;"	l
f01051d5	obj/kern/kernel.asm	/^f01051d5:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f01051d8	obj/kern/kernel.asm	/^f01051d8:	7e 26                	jle    f0105200 <readline+0xbe>$/;"	l
f01051da	obj/kern/kernel.asm	/^f01051da:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f01051e0	obj/kern/kernel.asm	/^f01051e0:	7f 1e                	jg     f0105200 <readline+0xbe>$/;"	l
f01051e2	obj/kern/kernel.asm	/^f01051e2:	85 ff                	test   %edi,%edi$/;"	l
f01051e4	obj/kern/kernel.asm	/^f01051e4:	74 0c                	je     f01051f2 <readline+0xb0>$/;"	l
f01051e6	obj/kern/kernel.asm	/^f01051e6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01051e9	obj/kern/kernel.asm	/^f01051e9:	53                   	push   %ebx$/;"	l
f01051ea	obj/kern/kernel.asm	/^f01051ea:	e8 84 b5 ff ff       	call   f0100773 <cputchar>$/;"	l
f01051ef	obj/kern/kernel.asm	/^f01051ef:	83 c4 10             	add    $0x10,%esp$/;"	l
f01051f2	obj/kern/kernel.asm	/^f01051f2:	88 9e 80 5a 1e f0    	mov    %bl,-0xfe1a580(%esi)$/;"	l
f01051f8	obj/kern/kernel.asm	/^f01051f8:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f01051fb	obj/kern/kernel.asm	/^f01051fb:	e9 77 ff ff ff       	jmp    f0105177 <readline+0x35>$/;"	l
f0105200	obj/kern/kernel.asm	/^f0105200:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0105203	obj/kern/kernel.asm	/^f0105203:	74 09                	je     f010520e <readline+0xcc>$/;"	l
f0105205	obj/kern/kernel.asm	/^f0105205:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f0105208	obj/kern/kernel.asm	/^f0105208:	0f 85 69 ff ff ff    	jne    f0105177 <readline+0x35>$/;"	l
f010520e	obj/kern/kernel.asm	/^f010520e:	85 ff                	test   %edi,%edi$/;"	l
f0105210	obj/kern/kernel.asm	/^f0105210:	74 0d                	je     f010521f <readline+0xdd>$/;"	l
f0105212	obj/kern/kernel.asm	/^f0105212:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105215	obj/kern/kernel.asm	/^f0105215:	6a 0a                	push   $0xa$/;"	l
f0105217	obj/kern/kernel.asm	/^f0105217:	e8 57 b5 ff ff       	call   f0100773 <cputchar>$/;"	l
f010521c	obj/kern/kernel.asm	/^f010521c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010521f	obj/kern/kernel.asm	/^f010521f:	c6 86 80 5a 1e f0 00 	movb   $0x0,-0xfe1a580(%esi)$/;"	l
f0105226	obj/kern/kernel.asm	/^f0105226:	b8 80 5a 1e f0       	mov    $0xf01e5a80,%eax$/;"	l
f010522b	obj/kern/kernel.asm	/^f010522b:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010522e	obj/kern/kernel.asm	/^f010522e:	5b                   	pop    %ebx$/;"	l
f010522f	obj/kern/kernel.asm	/^f010522f:	5e                   	pop    %esi$/;"	l
f0105230	obj/kern/kernel.asm	/^f0105230:	5f                   	pop    %edi$/;"	l
f0105231	obj/kern/kernel.asm	/^f0105231:	5d                   	pop    %ebp$/;"	l
f0105232	obj/kern/kernel.asm	/^f0105232:	c3                   	ret    $/;"	l
f0105233	obj/kern/kernel.asm	/^f0105233 <strlen>:$/;"	l
f0105233	obj/kern/kernel.asm	/^f0105233:	55                   	push   %ebp$/;"	l
f0105234	obj/kern/kernel.asm	/^f0105234:	89 e5                	mov    %esp,%ebp$/;"	l
f0105236	obj/kern/kernel.asm	/^f0105236:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105239	obj/kern/kernel.asm	/^f0105239:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010523e	obj/kern/kernel.asm	/^f010523e:	eb 03                	jmp    f0105243 <strlen+0x10>$/;"	l
f0105240	obj/kern/kernel.asm	/^f0105240:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105243	obj/kern/kernel.asm	/^f0105243:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0105247	obj/kern/kernel.asm	/^f0105247:	75 f7                	jne    f0105240 <strlen+0xd>$/;"	l
f0105249	obj/kern/kernel.asm	/^f0105249:	5d                   	pop    %ebp$/;"	l
f010524a	obj/kern/kernel.asm	/^f010524a:	c3                   	ret    $/;"	l
f010524b	obj/kern/kernel.asm	/^f010524b <strnlen>:$/;"	l
f010524b	obj/kern/kernel.asm	/^f010524b:	55                   	push   %ebp$/;"	l
f010524c	obj/kern/kernel.asm	/^f010524c:	89 e5                	mov    %esp,%ebp$/;"	l
f010524e	obj/kern/kernel.asm	/^f010524e:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105251	obj/kern/kernel.asm	/^f0105251:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105254	obj/kern/kernel.asm	/^f0105254:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105259	obj/kern/kernel.asm	/^f0105259:	eb 03                	jmp    f010525e <strnlen+0x13>$/;"	l
f010525b	obj/kern/kernel.asm	/^f010525b:	83 c2 01             	add    $0x1,%edx$/;"	l
f010525e	obj/kern/kernel.asm	/^f010525e:	39 c2                	cmp    %eax,%edx$/;"	l
f0105260	obj/kern/kernel.asm	/^f0105260:	74 08                	je     f010526a <strnlen+0x1f>$/;"	l
f0105262	obj/kern/kernel.asm	/^f0105262:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)$/;"	l
f0105266	obj/kern/kernel.asm	/^f0105266:	75 f3                	jne    f010525b <strnlen+0x10>$/;"	l
f0105268	obj/kern/kernel.asm	/^f0105268:	89 d0                	mov    %edx,%eax$/;"	l
f010526a	obj/kern/kernel.asm	/^f010526a:	5d                   	pop    %ebp$/;"	l
f010526b	obj/kern/kernel.asm	/^f010526b:	c3                   	ret    $/;"	l
f010526c	obj/kern/kernel.asm	/^f010526c <strcpy>:$/;"	l
f010526c	obj/kern/kernel.asm	/^f010526c:	55                   	push   %ebp$/;"	l
f010526d	obj/kern/kernel.asm	/^f010526d:	89 e5                	mov    %esp,%ebp$/;"	l
f010526f	obj/kern/kernel.asm	/^f010526f:	53                   	push   %ebx$/;"	l
f0105270	obj/kern/kernel.asm	/^f0105270:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105273	obj/kern/kernel.asm	/^f0105273:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105276	obj/kern/kernel.asm	/^f0105276:	89 c2                	mov    %eax,%edx$/;"	l
f0105278	obj/kern/kernel.asm	/^f0105278:	83 c2 01             	add    $0x1,%edx$/;"	l
f010527b	obj/kern/kernel.asm	/^f010527b:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010527e	obj/kern/kernel.asm	/^f010527e:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f0105282	obj/kern/kernel.asm	/^f0105282:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0105285	obj/kern/kernel.asm	/^f0105285:	84 db                	test   %bl,%bl$/;"	l
f0105287	obj/kern/kernel.asm	/^f0105287:	75 ef                	jne    f0105278 <strcpy+0xc>$/;"	l
f0105289	obj/kern/kernel.asm	/^f0105289:	5b                   	pop    %ebx$/;"	l
f010528a	obj/kern/kernel.asm	/^f010528a:	5d                   	pop    %ebp$/;"	l
f010528b	obj/kern/kernel.asm	/^f010528b:	c3                   	ret    $/;"	l
f010528c	obj/kern/kernel.asm	/^f010528c <strcat>:$/;"	l
f010528c	obj/kern/kernel.asm	/^f010528c:	55                   	push   %ebp$/;"	l
f010528d	obj/kern/kernel.asm	/^f010528d:	89 e5                	mov    %esp,%ebp$/;"	l
f010528f	obj/kern/kernel.asm	/^f010528f:	53                   	push   %ebx$/;"	l
f0105290	obj/kern/kernel.asm	/^f0105290:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105293	obj/kern/kernel.asm	/^f0105293:	53                   	push   %ebx$/;"	l
f0105294	obj/kern/kernel.asm	/^f0105294:	e8 9a ff ff ff       	call   f0105233 <strlen>$/;"	l
f0105299	obj/kern/kernel.asm	/^f0105299:	83 c4 04             	add    $0x4,%esp$/;"	l
f010529c	obj/kern/kernel.asm	/^f010529c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010529f	obj/kern/kernel.asm	/^f010529f:	01 d8                	add    %ebx,%eax$/;"	l
f01052a1	obj/kern/kernel.asm	/^f01052a1:	50                   	push   %eax$/;"	l
f01052a2	obj/kern/kernel.asm	/^f01052a2:	e8 c5 ff ff ff       	call   f010526c <strcpy>$/;"	l
f01052a7	obj/kern/kernel.asm	/^f01052a7:	89 d8                	mov    %ebx,%eax$/;"	l
f01052a9	obj/kern/kernel.asm	/^f01052a9:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01052ac	obj/kern/kernel.asm	/^f01052ac:	c9                   	leave  $/;"	l
f01052ad	obj/kern/kernel.asm	/^f01052ad:	c3                   	ret    $/;"	l
f01052ae	obj/kern/kernel.asm	/^f01052ae <strncpy>:$/;"	l
f01052ae	obj/kern/kernel.asm	/^f01052ae:	55                   	push   %ebp$/;"	l
f01052af	obj/kern/kernel.asm	/^f01052af:	89 e5                	mov    %esp,%ebp$/;"	l
f01052b1	obj/kern/kernel.asm	/^f01052b1:	56                   	push   %esi$/;"	l
f01052b2	obj/kern/kernel.asm	/^f01052b2:	53                   	push   %ebx$/;"	l
f01052b3	obj/kern/kernel.asm	/^f01052b3:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01052b6	obj/kern/kernel.asm	/^f01052b6:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01052b9	obj/kern/kernel.asm	/^f01052b9:	89 f3                	mov    %esi,%ebx$/;"	l
f01052bb	obj/kern/kernel.asm	/^f01052bb:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f01052be	obj/kern/kernel.asm	/^f01052be:	89 f2                	mov    %esi,%edx$/;"	l
f01052c0	obj/kern/kernel.asm	/^f01052c0:	eb 0f                	jmp    f01052d1 <strncpy+0x23>$/;"	l
f01052c2	obj/kern/kernel.asm	/^f01052c2:	83 c2 01             	add    $0x1,%edx$/;"	l
f01052c5	obj/kern/kernel.asm	/^f01052c5:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01052c8	obj/kern/kernel.asm	/^f01052c8:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f01052cb	obj/kern/kernel.asm	/^f01052cb:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f01052ce	obj/kern/kernel.asm	/^f01052ce:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f01052d1	obj/kern/kernel.asm	/^f01052d1:	39 da                	cmp    %ebx,%edx$/;"	l
f01052d3	obj/kern/kernel.asm	/^f01052d3:	75 ed                	jne    f01052c2 <strncpy+0x14>$/;"	l
f01052d5	obj/kern/kernel.asm	/^f01052d5:	89 f0                	mov    %esi,%eax$/;"	l
f01052d7	obj/kern/kernel.asm	/^f01052d7:	5b                   	pop    %ebx$/;"	l
f01052d8	obj/kern/kernel.asm	/^f01052d8:	5e                   	pop    %esi$/;"	l
f01052d9	obj/kern/kernel.asm	/^f01052d9:	5d                   	pop    %ebp$/;"	l
f01052da	obj/kern/kernel.asm	/^f01052da:	c3                   	ret    $/;"	l
f01052db	obj/kern/kernel.asm	/^f01052db <strlcpy>:$/;"	l
f01052db	obj/kern/kernel.asm	/^f01052db:	55                   	push   %ebp$/;"	l
f01052dc	obj/kern/kernel.asm	/^f01052dc:	89 e5                	mov    %esp,%ebp$/;"	l
f01052de	obj/kern/kernel.asm	/^f01052de:	56                   	push   %esi$/;"	l
f01052df	obj/kern/kernel.asm	/^f01052df:	53                   	push   %ebx$/;"	l
f01052e0	obj/kern/kernel.asm	/^f01052e0:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01052e3	obj/kern/kernel.asm	/^f01052e3:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01052e6	obj/kern/kernel.asm	/^f01052e6:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01052e9	obj/kern/kernel.asm	/^f01052e9:	89 f0                	mov    %esi,%eax$/;"	l
f01052eb	obj/kern/kernel.asm	/^f01052eb:	85 d2                	test   %edx,%edx$/;"	l
f01052ed	obj/kern/kernel.asm	/^f01052ed:	74 21                	je     f0105310 <strlcpy+0x35>$/;"	l
f01052ef	obj/kern/kernel.asm	/^f01052ef:	8d 44 16 ff          	lea    -0x1(%esi,%edx,1),%eax$/;"	l
f01052f3	obj/kern/kernel.asm	/^f01052f3:	89 f2                	mov    %esi,%edx$/;"	l
f01052f5	obj/kern/kernel.asm	/^f01052f5:	eb 09                	jmp    f0105300 <strlcpy+0x25>$/;"	l
f01052f7	obj/kern/kernel.asm	/^f01052f7:	83 c2 01             	add    $0x1,%edx$/;"	l
f01052fa	obj/kern/kernel.asm	/^f01052fa:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01052fd	obj/kern/kernel.asm	/^f01052fd:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0105300	obj/kern/kernel.asm	/^f0105300:	39 c2                	cmp    %eax,%edx$/;"	l
f0105302	obj/kern/kernel.asm	/^f0105302:	74 09                	je     f010530d <strlcpy+0x32>$/;"	l
f0105304	obj/kern/kernel.asm	/^f0105304:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f0105307	obj/kern/kernel.asm	/^f0105307:	84 db                	test   %bl,%bl$/;"	l
f0105309	obj/kern/kernel.asm	/^f0105309:	75 ec                	jne    f01052f7 <strlcpy+0x1c>$/;"	l
f010530b	obj/kern/kernel.asm	/^f010530b:	89 d0                	mov    %edx,%eax$/;"	l
f010530d	obj/kern/kernel.asm	/^f010530d:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0105310	obj/kern/kernel.asm	/^f0105310:	29 f0                	sub    %esi,%eax$/;"	l
f0105312	obj/kern/kernel.asm	/^f0105312:	5b                   	pop    %ebx$/;"	l
f0105313	obj/kern/kernel.asm	/^f0105313:	5e                   	pop    %esi$/;"	l
f0105314	obj/kern/kernel.asm	/^f0105314:	5d                   	pop    %ebp$/;"	l
f0105315	obj/kern/kernel.asm	/^f0105315:	c3                   	ret    $/;"	l
f0105316	obj/kern/kernel.asm	/^f0105316 <strcmp>:$/;"	l
f0105316	obj/kern/kernel.asm	/^f0105316:	55                   	push   %ebp$/;"	l
f0105317	obj/kern/kernel.asm	/^f0105317:	89 e5                	mov    %esp,%ebp$/;"	l
f0105319	obj/kern/kernel.asm	/^f0105319:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010531c	obj/kern/kernel.asm	/^f010531c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010531f	obj/kern/kernel.asm	/^f010531f:	eb 06                	jmp    f0105327 <strcmp+0x11>$/;"	l
f0105321	obj/kern/kernel.asm	/^f0105321:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105324	obj/kern/kernel.asm	/^f0105324:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105327	obj/kern/kernel.asm	/^f0105327:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f010532a	obj/kern/kernel.asm	/^f010532a:	84 c0                	test   %al,%al$/;"	l
f010532c	obj/kern/kernel.asm	/^f010532c:	74 04                	je     f0105332 <strcmp+0x1c>$/;"	l
f010532e	obj/kern/kernel.asm	/^f010532e:	3a 02                	cmp    (%edx),%al$/;"	l
f0105330	obj/kern/kernel.asm	/^f0105330:	74 ef                	je     f0105321 <strcmp+0xb>$/;"	l
f0105332	obj/kern/kernel.asm	/^f0105332:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105335	obj/kern/kernel.asm	/^f0105335:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0105338	obj/kern/kernel.asm	/^f0105338:	29 d0                	sub    %edx,%eax$/;"	l
f010533a	obj/kern/kernel.asm	/^f010533a:	5d                   	pop    %ebp$/;"	l
f010533b	obj/kern/kernel.asm	/^f010533b:	c3                   	ret    $/;"	l
f010533c	obj/kern/kernel.asm	/^f010533c <strncmp>:$/;"	l
f010533c	obj/kern/kernel.asm	/^f010533c:	55                   	push   %ebp$/;"	l
f010533d	obj/kern/kernel.asm	/^f010533d:	89 e5                	mov    %esp,%ebp$/;"	l
f010533f	obj/kern/kernel.asm	/^f010533f:	53                   	push   %ebx$/;"	l
f0105340	obj/kern/kernel.asm	/^f0105340:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105343	obj/kern/kernel.asm	/^f0105343:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105346	obj/kern/kernel.asm	/^f0105346:	89 c3                	mov    %eax,%ebx$/;"	l
f0105348	obj/kern/kernel.asm	/^f0105348:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f010534b	obj/kern/kernel.asm	/^f010534b:	eb 06                	jmp    f0105353 <strncmp+0x17>$/;"	l
f010534d	obj/kern/kernel.asm	/^f010534d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105350	obj/kern/kernel.asm	/^f0105350:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105353	obj/kern/kernel.asm	/^f0105353:	39 d8                	cmp    %ebx,%eax$/;"	l
f0105355	obj/kern/kernel.asm	/^f0105355:	74 15                	je     f010536c <strncmp+0x30>$/;"	l
f0105357	obj/kern/kernel.asm	/^f0105357:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f010535a	obj/kern/kernel.asm	/^f010535a:	84 c9                	test   %cl,%cl$/;"	l
f010535c	obj/kern/kernel.asm	/^f010535c:	74 04                	je     f0105362 <strncmp+0x26>$/;"	l
f010535e	obj/kern/kernel.asm	/^f010535e:	3a 0a                	cmp    (%edx),%cl$/;"	l
f0105360	obj/kern/kernel.asm	/^f0105360:	74 eb                	je     f010534d <strncmp+0x11>$/;"	l
f0105362	obj/kern/kernel.asm	/^f0105362:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0105365	obj/kern/kernel.asm	/^f0105365:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0105368	obj/kern/kernel.asm	/^f0105368:	29 d0                	sub    %edx,%eax$/;"	l
f010536a	obj/kern/kernel.asm	/^f010536a:	eb 05                	jmp    f0105371 <strncmp+0x35>$/;"	l
f010536c	obj/kern/kernel.asm	/^f010536c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105371	obj/kern/kernel.asm	/^f0105371:	5b                   	pop    %ebx$/;"	l
f0105372	obj/kern/kernel.asm	/^f0105372:	5d                   	pop    %ebp$/;"	l
f0105373	obj/kern/kernel.asm	/^f0105373:	c3                   	ret    $/;"	l
f0105374	obj/kern/kernel.asm	/^f0105374 <strchr>:$/;"	l
f0105374	obj/kern/kernel.asm	/^f0105374:	55                   	push   %ebp$/;"	l
f0105375	obj/kern/kernel.asm	/^f0105375:	89 e5                	mov    %esp,%ebp$/;"	l
f0105377	obj/kern/kernel.asm	/^f0105377:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010537a	obj/kern/kernel.asm	/^f010537a:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f010537e	obj/kern/kernel.asm	/^f010537e:	eb 07                	jmp    f0105387 <strchr+0x13>$/;"	l
f0105380	obj/kern/kernel.asm	/^f0105380:	38 ca                	cmp    %cl,%dl$/;"	l
f0105382	obj/kern/kernel.asm	/^f0105382:	74 0f                	je     f0105393 <strchr+0x1f>$/;"	l
f0105384	obj/kern/kernel.asm	/^f0105384:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105387	obj/kern/kernel.asm	/^f0105387:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f010538a	obj/kern/kernel.asm	/^f010538a:	84 d2                	test   %dl,%dl$/;"	l
f010538c	obj/kern/kernel.asm	/^f010538c:	75 f2                	jne    f0105380 <strchr+0xc>$/;"	l
f010538e	obj/kern/kernel.asm	/^f010538e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105393	obj/kern/kernel.asm	/^f0105393:	5d                   	pop    %ebp$/;"	l
f0105394	obj/kern/kernel.asm	/^f0105394:	c3                   	ret    $/;"	l
f0105395	obj/kern/kernel.asm	/^f0105395 <strfind>:$/;"	l
f0105395	obj/kern/kernel.asm	/^f0105395:	55                   	push   %ebp$/;"	l
f0105396	obj/kern/kernel.asm	/^f0105396:	89 e5                	mov    %esp,%ebp$/;"	l
f0105398	obj/kern/kernel.asm	/^f0105398:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010539b	obj/kern/kernel.asm	/^f010539b:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f010539f	obj/kern/kernel.asm	/^f010539f:	eb 03                	jmp    f01053a4 <strfind+0xf>$/;"	l
f01053a1	obj/kern/kernel.asm	/^f01053a1:	83 c0 01             	add    $0x1,%eax$/;"	l
f01053a4	obj/kern/kernel.asm	/^f01053a4:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01053a7	obj/kern/kernel.asm	/^f01053a7:	38 ca                	cmp    %cl,%dl$/;"	l
f01053a9	obj/kern/kernel.asm	/^f01053a9:	74 04                	je     f01053af <strfind+0x1a>$/;"	l
f01053ab	obj/kern/kernel.asm	/^f01053ab:	84 d2                	test   %dl,%dl$/;"	l
f01053ad	obj/kern/kernel.asm	/^f01053ad:	75 f2                	jne    f01053a1 <strfind+0xc>$/;"	l
f01053af	obj/kern/kernel.asm	/^f01053af:	5d                   	pop    %ebp$/;"	l
f01053b0	obj/kern/kernel.asm	/^f01053b0:	c3                   	ret    $/;"	l
f01053b1	obj/kern/kernel.asm	/^f01053b1 <memset>:$/;"	l
f01053b1	obj/kern/kernel.asm	/^f01053b1:	55                   	push   %ebp$/;"	l
f01053b2	obj/kern/kernel.asm	/^f01053b2:	89 e5                	mov    %esp,%ebp$/;"	l
f01053b4	obj/kern/kernel.asm	/^f01053b4:	57                   	push   %edi$/;"	l
f01053b5	obj/kern/kernel.asm	/^f01053b5:	56                   	push   %esi$/;"	l
f01053b6	obj/kern/kernel.asm	/^f01053b6:	53                   	push   %ebx$/;"	l
f01053b7	obj/kern/kernel.asm	/^f01053b7:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01053ba	obj/kern/kernel.asm	/^f01053ba:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01053bd	obj/kern/kernel.asm	/^f01053bd:	85 c9                	test   %ecx,%ecx$/;"	l
f01053bf	obj/kern/kernel.asm	/^f01053bf:	74 36                	je     f01053f7 <memset+0x46>$/;"	l
f01053c1	obj/kern/kernel.asm	/^f01053c1:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01053c7	obj/kern/kernel.asm	/^f01053c7:	75 28                	jne    f01053f1 <memset+0x40>$/;"	l
f01053c9	obj/kern/kernel.asm	/^f01053c9:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01053cc	obj/kern/kernel.asm	/^f01053cc:	75 23                	jne    f01053f1 <memset+0x40>$/;"	l
f01053ce	obj/kern/kernel.asm	/^f01053ce:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f01053d2	obj/kern/kernel.asm	/^f01053d2:	89 d3                	mov    %edx,%ebx$/;"	l
f01053d4	obj/kern/kernel.asm	/^f01053d4:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01053d7	obj/kern/kernel.asm	/^f01053d7:	89 d6                	mov    %edx,%esi$/;"	l
f01053d9	obj/kern/kernel.asm	/^f01053d9:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f01053dc	obj/kern/kernel.asm	/^f01053dc:	89 d0                	mov    %edx,%eax$/;"	l
f01053de	obj/kern/kernel.asm	/^f01053de:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01053e1	obj/kern/kernel.asm	/^f01053e1:	09 f0                	or     %esi,%eax$/;"	l
f01053e3	obj/kern/kernel.asm	/^f01053e3:	09 c2                	or     %eax,%edx$/;"	l
f01053e5	obj/kern/kernel.asm	/^f01053e5:	89 d8                	mov    %ebx,%eax$/;"	l
f01053e7	obj/kern/kernel.asm	/^f01053e7:	09 d0                	or     %edx,%eax$/;"	l
f01053e9	obj/kern/kernel.asm	/^f01053e9:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01053ec	obj/kern/kernel.asm	/^f01053ec:	fc                   	cld    $/;"	l
f01053ed	obj/kern/kernel.asm	/^f01053ed:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f01053ef	obj/kern/kernel.asm	/^f01053ef:	eb 06                	jmp    f01053f7 <memset+0x46>$/;"	l
f01053f1	obj/kern/kernel.asm	/^f01053f1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01053f4	obj/kern/kernel.asm	/^f01053f4:	fc                   	cld    $/;"	l
f01053f5	obj/kern/kernel.asm	/^f01053f5:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f01053f7	obj/kern/kernel.asm	/^f01053f7:	89 f8                	mov    %edi,%eax$/;"	l
f01053f9	obj/kern/kernel.asm	/^f01053f9:	5b                   	pop    %ebx$/;"	l
f01053fa	obj/kern/kernel.asm	/^f01053fa:	5e                   	pop    %esi$/;"	l
f01053fb	obj/kern/kernel.asm	/^f01053fb:	5f                   	pop    %edi$/;"	l
f01053fc	obj/kern/kernel.asm	/^f01053fc:	5d                   	pop    %ebp$/;"	l
f01053fd	obj/kern/kernel.asm	/^f01053fd:	c3                   	ret    $/;"	l
f01053fe	obj/kern/kernel.asm	/^f01053fe <memmove>:$/;"	l
f01053fe	obj/kern/kernel.asm	/^f01053fe:	55                   	push   %ebp$/;"	l
f01053ff	obj/kern/kernel.asm	/^f01053ff:	89 e5                	mov    %esp,%ebp$/;"	l
f0105401	obj/kern/kernel.asm	/^f0105401:	57                   	push   %edi$/;"	l
f0105402	obj/kern/kernel.asm	/^f0105402:	56                   	push   %esi$/;"	l
f0105403	obj/kern/kernel.asm	/^f0105403:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105406	obj/kern/kernel.asm	/^f0105406:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105409	obj/kern/kernel.asm	/^f0105409:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f010540c	obj/kern/kernel.asm	/^f010540c:	39 c6                	cmp    %eax,%esi$/;"	l
f010540e	obj/kern/kernel.asm	/^f010540e:	73 35                	jae    f0105445 <memmove+0x47>$/;"	l
f0105410	obj/kern/kernel.asm	/^f0105410:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0105413	obj/kern/kernel.asm	/^f0105413:	39 d0                	cmp    %edx,%eax$/;"	l
f0105415	obj/kern/kernel.asm	/^f0105415:	73 2e                	jae    f0105445 <memmove+0x47>$/;"	l
f0105417	obj/kern/kernel.asm	/^f0105417:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f010541a	obj/kern/kernel.asm	/^f010541a:	89 d6                	mov    %edx,%esi$/;"	l
f010541c	obj/kern/kernel.asm	/^f010541c:	09 fe                	or     %edi,%esi$/;"	l
f010541e	obj/kern/kernel.asm	/^f010541e:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0105424	obj/kern/kernel.asm	/^f0105424:	75 13                	jne    f0105439 <memmove+0x3b>$/;"	l
f0105426	obj/kern/kernel.asm	/^f0105426:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105429	obj/kern/kernel.asm	/^f0105429:	75 0e                	jne    f0105439 <memmove+0x3b>$/;"	l
f010542b	obj/kern/kernel.asm	/^f010542b:	83 ef 04             	sub    $0x4,%edi$/;"	l
f010542e	obj/kern/kernel.asm	/^f010542e:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0105431	obj/kern/kernel.asm	/^f0105431:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105434	obj/kern/kernel.asm	/^f0105434:	fd                   	std    $/;"	l
f0105435	obj/kern/kernel.asm	/^f0105435:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105437	obj/kern/kernel.asm	/^f0105437:	eb 09                	jmp    f0105442 <memmove+0x44>$/;"	l
f0105439	obj/kern/kernel.asm	/^f0105439:	83 ef 01             	sub    $0x1,%edi$/;"	l
f010543c	obj/kern/kernel.asm	/^f010543c:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f010543f	obj/kern/kernel.asm	/^f010543f:	fd                   	std    $/;"	l
f0105440	obj/kern/kernel.asm	/^f0105440:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0105442	obj/kern/kernel.asm	/^f0105442:	fc                   	cld    $/;"	l
f0105443	obj/kern/kernel.asm	/^f0105443:	eb 1d                	jmp    f0105462 <memmove+0x64>$/;"	l
f0105445	obj/kern/kernel.asm	/^f0105445:	89 f2                	mov    %esi,%edx$/;"	l
f0105447	obj/kern/kernel.asm	/^f0105447:	09 c2                	or     %eax,%edx$/;"	l
f0105449	obj/kern/kernel.asm	/^f0105449:	f6 c2 03             	test   $0x3,%dl$/;"	l
f010544c	obj/kern/kernel.asm	/^f010544c:	75 0f                	jne    f010545d <memmove+0x5f>$/;"	l
f010544e	obj/kern/kernel.asm	/^f010544e:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105451	obj/kern/kernel.asm	/^f0105451:	75 0a                	jne    f010545d <memmove+0x5f>$/;"	l
f0105453	obj/kern/kernel.asm	/^f0105453:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105456	obj/kern/kernel.asm	/^f0105456:	89 c7                	mov    %eax,%edi$/;"	l
f0105458	obj/kern/kernel.asm	/^f0105458:	fc                   	cld    $/;"	l
f0105459	obj/kern/kernel.asm	/^f0105459:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010545b	obj/kern/kernel.asm	/^f010545b:	eb 05                	jmp    f0105462 <memmove+0x64>$/;"	l
f010545d	obj/kern/kernel.asm	/^f010545d:	89 c7                	mov    %eax,%edi$/;"	l
f010545f	obj/kern/kernel.asm	/^f010545f:	fc                   	cld    $/;"	l
f0105460	obj/kern/kernel.asm	/^f0105460:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0105462	obj/kern/kernel.asm	/^f0105462:	5e                   	pop    %esi$/;"	l
f0105463	obj/kern/kernel.asm	/^f0105463:	5f                   	pop    %edi$/;"	l
f0105464	obj/kern/kernel.asm	/^f0105464:	5d                   	pop    %ebp$/;"	l
f0105465	obj/kern/kernel.asm	/^f0105465:	c3                   	ret    $/;"	l
f0105466	obj/kern/kernel.asm	/^f0105466 <memcpy>:$/;"	l
f0105466	obj/kern/kernel.asm	/^f0105466:	55                   	push   %ebp$/;"	l
f0105467	obj/kern/kernel.asm	/^f0105467:	89 e5                	mov    %esp,%ebp$/;"	l
f0105469	obj/kern/kernel.asm	/^f0105469:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010546c	obj/kern/kernel.asm	/^f010546c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010546f	obj/kern/kernel.asm	/^f010546f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105472	obj/kern/kernel.asm	/^f0105472:	e8 87 ff ff ff       	call   f01053fe <memmove>$/;"	l
f0105477	obj/kern/kernel.asm	/^f0105477:	c9                   	leave  $/;"	l
f0105478	obj/kern/kernel.asm	/^f0105478:	c3                   	ret    $/;"	l
f0105479	obj/kern/kernel.asm	/^f0105479 <memcmp>:$/;"	l
f0105479	obj/kern/kernel.asm	/^f0105479:	55                   	push   %ebp$/;"	l
f010547a	obj/kern/kernel.asm	/^f010547a:	89 e5                	mov    %esp,%ebp$/;"	l
f010547c	obj/kern/kernel.asm	/^f010547c:	56                   	push   %esi$/;"	l
f010547d	obj/kern/kernel.asm	/^f010547d:	53                   	push   %ebx$/;"	l
f010547e	obj/kern/kernel.asm	/^f010547e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105481	obj/kern/kernel.asm	/^f0105481:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105484	obj/kern/kernel.asm	/^f0105484:	89 c6                	mov    %eax,%esi$/;"	l
f0105486	obj/kern/kernel.asm	/^f0105486:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f0105489	obj/kern/kernel.asm	/^f0105489:	eb 1a                	jmp    f01054a5 <memcmp+0x2c>$/;"	l
f010548b	obj/kern/kernel.asm	/^f010548b:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f010548e	obj/kern/kernel.asm	/^f010548e:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0105491	obj/kern/kernel.asm	/^f0105491:	38 d9                	cmp    %bl,%cl$/;"	l
f0105493	obj/kern/kernel.asm	/^f0105493:	74 0a                	je     f010549f <memcmp+0x26>$/;"	l
f0105495	obj/kern/kernel.asm	/^f0105495:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f0105498	obj/kern/kernel.asm	/^f0105498:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f010549b	obj/kern/kernel.asm	/^f010549b:	29 d8                	sub    %ebx,%eax$/;"	l
f010549d	obj/kern/kernel.asm	/^f010549d:	eb 0f                	jmp    f01054ae <memcmp+0x35>$/;"	l
f010549f	obj/kern/kernel.asm	/^f010549f:	83 c0 01             	add    $0x1,%eax$/;"	l
f01054a2	obj/kern/kernel.asm	/^f01054a2:	83 c2 01             	add    $0x1,%edx$/;"	l
f01054a5	obj/kern/kernel.asm	/^f01054a5:	39 f0                	cmp    %esi,%eax$/;"	l
f01054a7	obj/kern/kernel.asm	/^f01054a7:	75 e2                	jne    f010548b <memcmp+0x12>$/;"	l
f01054a9	obj/kern/kernel.asm	/^f01054a9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01054ae	obj/kern/kernel.asm	/^f01054ae:	5b                   	pop    %ebx$/;"	l
f01054af	obj/kern/kernel.asm	/^f01054af:	5e                   	pop    %esi$/;"	l
f01054b0	obj/kern/kernel.asm	/^f01054b0:	5d                   	pop    %ebp$/;"	l
f01054b1	obj/kern/kernel.asm	/^f01054b1:	c3                   	ret    $/;"	l
f01054b2	obj/kern/kernel.asm	/^f01054b2 <memfind>:$/;"	l
f01054b2	obj/kern/kernel.asm	/^f01054b2:	55                   	push   %ebp$/;"	l
f01054b3	obj/kern/kernel.asm	/^f01054b3:	89 e5                	mov    %esp,%ebp$/;"	l
f01054b5	obj/kern/kernel.asm	/^f01054b5:	53                   	push   %ebx$/;"	l
f01054b6	obj/kern/kernel.asm	/^f01054b6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01054b9	obj/kern/kernel.asm	/^f01054b9:	89 c1                	mov    %eax,%ecx$/;"	l
f01054bb	obj/kern/kernel.asm	/^f01054bb:	03 4d 10             	add    0x10(%ebp),%ecx$/;"	l
f01054be	obj/kern/kernel.asm	/^f01054be:	0f b6 5d 0c          	movzbl 0xc(%ebp),%ebx$/;"	l
f01054c2	obj/kern/kernel.asm	/^f01054c2:	eb 0a                	jmp    f01054ce <memfind+0x1c>$/;"	l
f01054c4	obj/kern/kernel.asm	/^f01054c4:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01054c7	obj/kern/kernel.asm	/^f01054c7:	39 da                	cmp    %ebx,%edx$/;"	l
f01054c9	obj/kern/kernel.asm	/^f01054c9:	74 07                	je     f01054d2 <memfind+0x20>$/;"	l
f01054cb	obj/kern/kernel.asm	/^f01054cb:	83 c0 01             	add    $0x1,%eax$/;"	l
f01054ce	obj/kern/kernel.asm	/^f01054ce:	39 c8                	cmp    %ecx,%eax$/;"	l
f01054d0	obj/kern/kernel.asm	/^f01054d0:	72 f2                	jb     f01054c4 <memfind+0x12>$/;"	l
f01054d2	obj/kern/kernel.asm	/^f01054d2:	5b                   	pop    %ebx$/;"	l
f01054d3	obj/kern/kernel.asm	/^f01054d3:	5d                   	pop    %ebp$/;"	l
f01054d4	obj/kern/kernel.asm	/^f01054d4:	c3                   	ret    $/;"	l
f01054d5	obj/kern/kernel.asm	/^f01054d5 <strtol>:$/;"	l
f01054d5	obj/kern/kernel.asm	/^f01054d5:	55                   	push   %ebp$/;"	l
f01054d6	obj/kern/kernel.asm	/^f01054d6:	89 e5                	mov    %esp,%ebp$/;"	l
f01054d8	obj/kern/kernel.asm	/^f01054d8:	57                   	push   %edi$/;"	l
f01054d9	obj/kern/kernel.asm	/^f01054d9:	56                   	push   %esi$/;"	l
f01054da	obj/kern/kernel.asm	/^f01054da:	53                   	push   %ebx$/;"	l
f01054db	obj/kern/kernel.asm	/^f01054db:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01054de	obj/kern/kernel.asm	/^f01054de:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01054e1	obj/kern/kernel.asm	/^f01054e1:	eb 03                	jmp    f01054e6 <strtol+0x11>$/;"	l
f01054e3	obj/kern/kernel.asm	/^f01054e3:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01054e6	obj/kern/kernel.asm	/^f01054e6:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01054e9	obj/kern/kernel.asm	/^f01054e9:	3c 20                	cmp    $0x20,%al$/;"	l
f01054eb	obj/kern/kernel.asm	/^f01054eb:	74 f6                	je     f01054e3 <strtol+0xe>$/;"	l
f01054ed	obj/kern/kernel.asm	/^f01054ed:	3c 09                	cmp    $0x9,%al$/;"	l
f01054ef	obj/kern/kernel.asm	/^f01054ef:	74 f2                	je     f01054e3 <strtol+0xe>$/;"	l
f01054f1	obj/kern/kernel.asm	/^f01054f1:	3c 2b                	cmp    $0x2b,%al$/;"	l
f01054f3	obj/kern/kernel.asm	/^f01054f3:	75 0a                	jne    f01054ff <strtol+0x2a>$/;"	l
f01054f5	obj/kern/kernel.asm	/^f01054f5:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01054f8	obj/kern/kernel.asm	/^f01054f8:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01054fd	obj/kern/kernel.asm	/^f01054fd:	eb 11                	jmp    f0105510 <strtol+0x3b>$/;"	l
f01054ff	obj/kern/kernel.asm	/^f01054ff:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105504	obj/kern/kernel.asm	/^f0105504:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0105506	obj/kern/kernel.asm	/^f0105506:	75 08                	jne    f0105510 <strtol+0x3b>$/;"	l
f0105508	obj/kern/kernel.asm	/^f0105508:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010550b	obj/kern/kernel.asm	/^f010550b:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0105510	obj/kern/kernel.asm	/^f0105510:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebx$/;"	l
f0105516	obj/kern/kernel.asm	/^f0105516:	75 15                	jne    f010552d <strtol+0x58>$/;"	l
f0105518	obj/kern/kernel.asm	/^f0105518:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f010551b	obj/kern/kernel.asm	/^f010551b:	75 10                	jne    f010552d <strtol+0x58>$/;"	l
f010551d	obj/kern/kernel.asm	/^f010551d:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f0105521	obj/kern/kernel.asm	/^f0105521:	75 7c                	jne    f010559f <strtol+0xca>$/;"	l
f0105523	obj/kern/kernel.asm	/^f0105523:	83 c1 02             	add    $0x2,%ecx$/;"	l
f0105526	obj/kern/kernel.asm	/^f0105526:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f010552b	obj/kern/kernel.asm	/^f010552b:	eb 16                	jmp    f0105543 <strtol+0x6e>$/;"	l
f010552d	obj/kern/kernel.asm	/^f010552d:	85 db                	test   %ebx,%ebx$/;"	l
f010552f	obj/kern/kernel.asm	/^f010552f:	75 12                	jne    f0105543 <strtol+0x6e>$/;"	l
f0105531	obj/kern/kernel.asm	/^f0105531:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0105536	obj/kern/kernel.asm	/^f0105536:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0105539	obj/kern/kernel.asm	/^f0105539:	75 08                	jne    f0105543 <strtol+0x6e>$/;"	l
f010553b	obj/kern/kernel.asm	/^f010553b:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010553e	obj/kern/kernel.asm	/^f010553e:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f0105543	obj/kern/kernel.asm	/^f0105543:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105548	obj/kern/kernel.asm	/^f0105548:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f010554b	obj/kern/kernel.asm	/^f010554b:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f010554e	obj/kern/kernel.asm	/^f010554e:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f0105551	obj/kern/kernel.asm	/^f0105551:	89 f3                	mov    %esi,%ebx$/;"	l
f0105553	obj/kern/kernel.asm	/^f0105553:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0105556	obj/kern/kernel.asm	/^f0105556:	77 08                	ja     f0105560 <strtol+0x8b>$/;"	l
f0105558	obj/kern/kernel.asm	/^f0105558:	0f be d2             	movsbl %dl,%edx$/;"	l
f010555b	obj/kern/kernel.asm	/^f010555b:	83 ea 30             	sub    $0x30,%edx$/;"	l
f010555e	obj/kern/kernel.asm	/^f010555e:	eb 22                	jmp    f0105582 <strtol+0xad>$/;"	l
f0105560	obj/kern/kernel.asm	/^f0105560:	8d 72 9f             	lea    -0x61(%edx),%esi$/;"	l
f0105563	obj/kern/kernel.asm	/^f0105563:	89 f3                	mov    %esi,%ebx$/;"	l
f0105565	obj/kern/kernel.asm	/^f0105565:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0105568	obj/kern/kernel.asm	/^f0105568:	77 08                	ja     f0105572 <strtol+0x9d>$/;"	l
f010556a	obj/kern/kernel.asm	/^f010556a:	0f be d2             	movsbl %dl,%edx$/;"	l
f010556d	obj/kern/kernel.asm	/^f010556d:	83 ea 57             	sub    $0x57,%edx$/;"	l
f0105570	obj/kern/kernel.asm	/^f0105570:	eb 10                	jmp    f0105582 <strtol+0xad>$/;"	l
f0105572	obj/kern/kernel.asm	/^f0105572:	8d 72 bf             	lea    -0x41(%edx),%esi$/;"	l
f0105575	obj/kern/kernel.asm	/^f0105575:	89 f3                	mov    %esi,%ebx$/;"	l
f0105577	obj/kern/kernel.asm	/^f0105577:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f010557a	obj/kern/kernel.asm	/^f010557a:	77 16                	ja     f0105592 <strtol+0xbd>$/;"	l
f010557c	obj/kern/kernel.asm	/^f010557c:	0f be d2             	movsbl %dl,%edx$/;"	l
f010557f	obj/kern/kernel.asm	/^f010557f:	83 ea 37             	sub    $0x37,%edx$/;"	l
f0105582	obj/kern/kernel.asm	/^f0105582:	3b 55 10             	cmp    0x10(%ebp),%edx$/;"	l
f0105585	obj/kern/kernel.asm	/^f0105585:	7d 0b                	jge    f0105592 <strtol+0xbd>$/;"	l
f0105587	obj/kern/kernel.asm	/^f0105587:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010558a	obj/kern/kernel.asm	/^f010558a:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f010558e	obj/kern/kernel.asm	/^f010558e:	01 d0                	add    %edx,%eax$/;"	l
f0105590	obj/kern/kernel.asm	/^f0105590:	eb b9                	jmp    f010554b <strtol+0x76>$/;"	l
f0105592	obj/kern/kernel.asm	/^f0105592:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0105596	obj/kern/kernel.asm	/^f0105596:	74 0d                	je     f01055a5 <strtol+0xd0>$/;"	l
f0105598	obj/kern/kernel.asm	/^f0105598:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010559b	obj/kern/kernel.asm	/^f010559b:	89 0e                	mov    %ecx,(%esi)$/;"	l
f010559d	obj/kern/kernel.asm	/^f010559d:	eb 06                	jmp    f01055a5 <strtol+0xd0>$/;"	l
f010559f	obj/kern/kernel.asm	/^f010559f:	85 db                	test   %ebx,%ebx$/;"	l
f01055a1	obj/kern/kernel.asm	/^f01055a1:	74 98                	je     f010553b <strtol+0x66>$/;"	l
f01055a3	obj/kern/kernel.asm	/^f01055a3:	eb 9e                	jmp    f0105543 <strtol+0x6e>$/;"	l
f01055a5	obj/kern/kernel.asm	/^f01055a5:	89 c2                	mov    %eax,%edx$/;"	l
f01055a7	obj/kern/kernel.asm	/^f01055a7:	f7 da                	neg    %edx$/;"	l
f01055a9	obj/kern/kernel.asm	/^f01055a9:	85 ff                	test   %edi,%edi$/;"	l
f01055ab	obj/kern/kernel.asm	/^f01055ab:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f01055ae	obj/kern/kernel.asm	/^f01055ae:	5b                   	pop    %ebx$/;"	l
f01055af	obj/kern/kernel.asm	/^f01055af:	5e                   	pop    %esi$/;"	l
f01055b0	obj/kern/kernel.asm	/^f01055b0:	5f                   	pop    %edi$/;"	l
f01055b1	obj/kern/kernel.asm	/^f01055b1:	5d                   	pop    %ebp$/;"	l
f01055b2	obj/kern/kernel.asm	/^f01055b2:	c3                   	ret    $/;"	l
f01055b3	obj/kern/kernel.asm	/^f01055b3:	90                   	nop$/;"	l
f01055b4	obj/kern/kernel.asm	/^f01055b4 <mpentry_start>:$/;"	l
f01055b4	obj/kern/kernel.asm	/^f01055b4:	fa                   	cli    $/;"	l
f01055b5	obj/kern/kernel.asm	/^f01055b5:	31 c0                	xor    %eax,%eax$/;"	l
f01055b7	obj/kern/kernel.asm	/^f01055b7:	8e d8                	mov    %eax,%ds$/;"	l
f01055b9	obj/kern/kernel.asm	/^f01055b9:	8e c0                	mov    %eax,%es$/;"	l
f01055bb	obj/kern/kernel.asm	/^f01055bb:	8e d0                	mov    %eax,%ss$/;"	l
f01055bd	obj/kern/kernel.asm	/^f01055bd:	0f 01 16             	lgdtl  (%esi)$/;"	l
f01055c0	obj/kern/kernel.asm	/^f01055c0:	74 70                	je     f0105632 <mpsearch1+0x3>$/;"	l
f01055c2	obj/kern/kernel.asm	/^f01055c2:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01055c5	obj/kern/kernel.asm	/^f01055c5:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f01055c9	obj/kern/kernel.asm	/^f01055c9:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01055cc	obj/kern/kernel.asm	/^f01055cc:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f01055d2	obj/kern/kernel.asm	/^f01055d2:	08 00                	or     %al,(%eax)$/;"	l
f01055d4	obj/kern/kernel.asm	/^f01055d4 <start32>:$/;"	l
f01055d4	obj/kern/kernel.asm	/^f01055d4:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f01055d8	obj/kern/kernel.asm	/^f01055d8:	8e d8                	mov    %eax,%ds$/;"	l
f01055da	obj/kern/kernel.asm	/^f01055da:	8e c0                	mov    %eax,%es$/;"	l
f01055dc	obj/kern/kernel.asm	/^f01055dc:	8e d0                	mov    %eax,%ss$/;"	l
f01055de	obj/kern/kernel.asm	/^f01055de:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f01055e2	obj/kern/kernel.asm	/^f01055e2:	8e e0                	mov    %eax,%fs$/;"	l
f01055e4	obj/kern/kernel.asm	/^f01055e4:	8e e8                	mov    %eax,%gs$/;"	l
f01055e6	obj/kern/kernel.asm	/^f01055e6:	b8 00 e0 11 00       	mov    $0x11e000,%eax$/;"	l
f01055eb	obj/kern/kernel.asm	/^f01055eb:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01055ee	obj/kern/kernel.asm	/^f01055ee:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01055f1	obj/kern/kernel.asm	/^f01055f1:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f01055f6	obj/kern/kernel.asm	/^f01055f6:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01055f9	obj/kern/kernel.asm	/^f01055f9:	8b 25 84 5e 1e f0    	mov    0xf01e5e84,%esp$/;"	l
f01055ff	obj/kern/kernel.asm	/^f01055ff:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0105604	obj/kern/kernel.asm	/^f0105604:	b8 a1 01 10 f0       	mov    $0xf01001a1,%eax$/;"	l
f0105609	obj/kern/kernel.asm	/^f0105609:	ff d0                	call   *%eax$/;"	l
f010560b	obj/kern/kernel.asm	/^f010560b <spin>:$/;"	l
f010560b	obj/kern/kernel.asm	/^f010560b:	eb fe                	jmp    f010560b <spin>$/;"	l
f010560d	obj/kern/kernel.asm	/^f010560d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0105610	obj/kern/kernel.asm	/^f0105610 <gdt>:$/;"	l
f0105618	obj/kern/kernel.asm	/^f0105618:	ff                   	(bad)  $/;"	l
f0105619	obj/kern/kernel.asm	/^f0105619:	ff 00                	incl   (%eax)$/;"	l
f010561b	obj/kern/kernel.asm	/^f010561b:	00 00                	add    %al,(%eax)$/;"	l
f010561d	obj/kern/kernel.asm	/^f010561d:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f0105624	obj/kern/kernel.asm	/^f0105624:	00                   	.byte 0x0$/;"	l
f0105625	obj/kern/kernel.asm	/^f0105625:	92                   	xchg   %eax,%edx$/;"	l
f0105626	obj/kern/kernel.asm	/^f0105626:	cf                   	iret   $/;"	l
f0105628	obj/kern/kernel.asm	/^f0105628 <gdtdesc>:$/;"	l
f0105628	obj/kern/kernel.asm	/^f0105628:	17                   	pop    %ss$/;"	l
f0105629	obj/kern/kernel.asm	/^f0105629:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f010562e	obj/kern/kernel.asm	/^f010562e <mpentry_end>:$/;"	l
f010562e	obj/kern/kernel.asm	/^f010562e:	90                   	nop$/;"	l
f010562f	obj/kern/kernel.asm	/^f010562f <mpsearch1>:$/;"	l
f010562f	obj/kern/kernel.asm	/^f010562f:	55                   	push   %ebp$/;"	l
f0105630	obj/kern/kernel.asm	/^f0105630:	89 e5                	mov    %esp,%ebp$/;"	l
f0105632	obj/kern/kernel.asm	/^f0105632:	57                   	push   %edi$/;"	l
f0105633	obj/kern/kernel.asm	/^f0105633:	56                   	push   %esi$/;"	l
f0105634	obj/kern/kernel.asm	/^f0105634:	53                   	push   %ebx$/;"	l
f0105635	obj/kern/kernel.asm	/^f0105635:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105638	obj/kern/kernel.asm	/^f0105638:	8b 0d 88 5e 1e f0    	mov    0xf01e5e88,%ecx$/;"	l
f010563e	obj/kern/kernel.asm	/^f010563e:	89 c3                	mov    %eax,%ebx$/;"	l
f0105640	obj/kern/kernel.asm	/^f0105640:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0105643	obj/kern/kernel.asm	/^f0105643:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0105645	obj/kern/kernel.asm	/^f0105645:	72 12                	jb     f0105659 <mpsearch1+0x2a>$/;"	l
f0105647	obj/kern/kernel.asm	/^f0105647:	50                   	push   %eax$/;"	l
f0105648	obj/kern/kernel.asm	/^f0105648:	68 84 60 10 f0       	push   $0xf0106084$/;"	l
f010564d	obj/kern/kernel.asm	/^f010564d:	6a 57                	push   $0x57$/;"	l
f010564f	obj/kern/kernel.asm	/^f010564f:	68 fd 7c 10 f0       	push   $0xf0107cfd$/;"	l
f0105654	obj/kern/kernel.asm	/^f0105654:	e8 e7 a9 ff ff       	call   f0100040 <_panic>$/;"	l
f0105659	obj/kern/kernel.asm	/^f0105659:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f010565f	obj/kern/kernel.asm	/^f010565f:	01 d0                	add    %edx,%eax$/;"	l
f0105661	obj/kern/kernel.asm	/^f0105661:	89 c2                	mov    %eax,%edx$/;"	l
f0105663	obj/kern/kernel.asm	/^f0105663:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0105666	obj/kern/kernel.asm	/^f0105666:	39 ca                	cmp    %ecx,%edx$/;"	l
f0105668	obj/kern/kernel.asm	/^f0105668:	72 12                	jb     f010567c <mpsearch1+0x4d>$/;"	l
f010566a	obj/kern/kernel.asm	/^f010566a:	50                   	push   %eax$/;"	l
f010566b	obj/kern/kernel.asm	/^f010566b:	68 84 60 10 f0       	push   $0xf0106084$/;"	l
f0105670	obj/kern/kernel.asm	/^f0105670:	6a 57                	push   $0x57$/;"	l
f0105672	obj/kern/kernel.asm	/^f0105672:	68 fd 7c 10 f0       	push   $0xf0107cfd$/;"	l
f0105677	obj/kern/kernel.asm	/^f0105677:	e8 c4 a9 ff ff       	call   f0100040 <_panic>$/;"	l
f010567c	obj/kern/kernel.asm	/^f010567c:	8d b0 00 00 00 f0    	lea    -0x10000000(%eax),%esi$/;"	l
f0105682	obj/kern/kernel.asm	/^f0105682:	eb 2f                	jmp    f01056b3 <mpsearch1+0x84>$/;"	l
f0105684	obj/kern/kernel.asm	/^f0105684:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105687	obj/kern/kernel.asm	/^f0105687:	6a 04                	push   $0x4$/;"	l
f0105689	obj/kern/kernel.asm	/^f0105689:	68 0d 7d 10 f0       	push   $0xf0107d0d$/;"	l
f010568e	obj/kern/kernel.asm	/^f010568e:	53                   	push   %ebx$/;"	l
f010568f	obj/kern/kernel.asm	/^f010568f:	e8 e5 fd ff ff       	call   f0105479 <memcmp>$/;"	l
f0105694	obj/kern/kernel.asm	/^f0105694:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105697	obj/kern/kernel.asm	/^f0105697:	85 c0                	test   %eax,%eax$/;"	l
f0105699	obj/kern/kernel.asm	/^f0105699:	75 15                	jne    f01056b0 <mpsearch1+0x81>$/;"	l
f010569b	obj/kern/kernel.asm	/^f010569b:	89 da                	mov    %ebx,%edx$/;"	l
f010569d	obj/kern/kernel.asm	/^f010569d:	8d 7b 10             	lea    0x10(%ebx),%edi$/;"	l
f01056a0	obj/kern/kernel.asm	/^f01056a0:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f01056a3	obj/kern/kernel.asm	/^f01056a3:	01 c8                	add    %ecx,%eax$/;"	l
f01056a5	obj/kern/kernel.asm	/^f01056a5:	83 c2 01             	add    $0x1,%edx$/;"	l
f01056a8	obj/kern/kernel.asm	/^f01056a8:	39 d7                	cmp    %edx,%edi$/;"	l
f01056aa	obj/kern/kernel.asm	/^f01056aa:	75 f4                	jne    f01056a0 <mpsearch1+0x71>$/;"	l
f01056ac	obj/kern/kernel.asm	/^f01056ac:	84 c0                	test   %al,%al$/;"	l
f01056ae	obj/kern/kernel.asm	/^f01056ae:	74 0e                	je     f01056be <mpsearch1+0x8f>$/;"	l
f01056b0	obj/kern/kernel.asm	/^f01056b0:	83 c3 10             	add    $0x10,%ebx$/;"	l
f01056b3	obj/kern/kernel.asm	/^f01056b3:	39 f3                	cmp    %esi,%ebx$/;"	l
f01056b5	obj/kern/kernel.asm	/^f01056b5:	72 cd                	jb     f0105684 <mpsearch1+0x55>$/;"	l
f01056b7	obj/kern/kernel.asm	/^f01056b7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01056bc	obj/kern/kernel.asm	/^f01056bc:	eb 02                	jmp    f01056c0 <mpsearch1+0x91>$/;"	l
f01056be	obj/kern/kernel.asm	/^f01056be:	89 d8                	mov    %ebx,%eax$/;"	l
f01056c0	obj/kern/kernel.asm	/^f01056c0:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01056c3	obj/kern/kernel.asm	/^f01056c3:	5b                   	pop    %ebx$/;"	l
f01056c4	obj/kern/kernel.asm	/^f01056c4:	5e                   	pop    %esi$/;"	l
f01056c5	obj/kern/kernel.asm	/^f01056c5:	5f                   	pop    %edi$/;"	l
f01056c6	obj/kern/kernel.asm	/^f01056c6:	5d                   	pop    %ebp$/;"	l
f01056c7	obj/kern/kernel.asm	/^f01056c7:	c3                   	ret    $/;"	l
f01056c8	obj/kern/kernel.asm	/^f01056c8 <mp_init>:$/;"	l
f01056c8	obj/kern/kernel.asm	/^f01056c8:	55                   	push   %ebp$/;"	l
f01056c9	obj/kern/kernel.asm	/^f01056c9:	89 e5                	mov    %esp,%ebp$/;"	l
f01056cb	obj/kern/kernel.asm	/^f01056cb:	57                   	push   %edi$/;"	l
f01056cc	obj/kern/kernel.asm	/^f01056cc:	56                   	push   %esi$/;"	l
f01056cd	obj/kern/kernel.asm	/^f01056cd:	53                   	push   %ebx$/;"	l
f01056ce	obj/kern/kernel.asm	/^f01056ce:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01056d1	obj/kern/kernel.asm	/^f01056d1:	c7 05 c0 63 1e f0 20 	movl   $0xf01e6020,0xf01e63c0$/;"	l
f01056d8	obj/kern/kernel.asm	/^f01056d8:	60 1e f0 $/;"	l
f01056db	obj/kern/kernel.asm	/^f01056db:	83 3d 88 5e 1e f0 00 	cmpl   $0x0,0xf01e5e88$/;"	l
f01056e2	obj/kern/kernel.asm	/^f01056e2:	75 16                	jne    f01056fa <mp_init+0x32>$/;"	l
f01056e4	obj/kern/kernel.asm	/^f01056e4:	68 00 04 00 00       	push   $0x400$/;"	l
f01056e9	obj/kern/kernel.asm	/^f01056e9:	68 84 60 10 f0       	push   $0xf0106084$/;"	l
f01056ee	obj/kern/kernel.asm	/^f01056ee:	6a 6f                	push   $0x6f$/;"	l
f01056f0	obj/kern/kernel.asm	/^f01056f0:	68 fd 7c 10 f0       	push   $0xf0107cfd$/;"	l
f01056f5	obj/kern/kernel.asm	/^f01056f5:	e8 46 a9 ff ff       	call   f0100040 <_panic>$/;"	l
f01056fa	obj/kern/kernel.asm	/^f01056fa:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0105701	obj/kern/kernel.asm	/^f0105701:	85 c0                	test   %eax,%eax$/;"	l
f0105703	obj/kern/kernel.asm	/^f0105703:	74 16                	je     f010571b <mp_init+0x53>$/;"	l
f0105705	obj/kern/kernel.asm	/^f0105705:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0105708	obj/kern/kernel.asm	/^f0105708:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f010570d	obj/kern/kernel.asm	/^f010570d:	e8 1d ff ff ff       	call   f010562f <mpsearch1>$/;"	l
f0105712	obj/kern/kernel.asm	/^f0105712:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105715	obj/kern/kernel.asm	/^f0105715:	85 c0                	test   %eax,%eax$/;"	l
f0105717	obj/kern/kernel.asm	/^f0105717:	75 3c                	jne    f0105755 <mp_init+0x8d>$/;"	l
f0105719	obj/kern/kernel.asm	/^f0105719:	eb 20                	jmp    f010573b <mp_init+0x73>$/;"	l
f010571b	obj/kern/kernel.asm	/^f010571b:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f0105722	obj/kern/kernel.asm	/^f0105722:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0105725	obj/kern/kernel.asm	/^f0105725:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f010572a	obj/kern/kernel.asm	/^f010572a:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f010572f	obj/kern/kernel.asm	/^f010572f:	e8 fb fe ff ff       	call   f010562f <mpsearch1>$/;"	l
f0105734	obj/kern/kernel.asm	/^f0105734:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105737	obj/kern/kernel.asm	/^f0105737:	85 c0                	test   %eax,%eax$/;"	l
f0105739	obj/kern/kernel.asm	/^f0105739:	75 1a                	jne    f0105755 <mp_init+0x8d>$/;"	l
f010573b	obj/kern/kernel.asm	/^f010573b:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105740	obj/kern/kernel.asm	/^f0105740:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f0105745	obj/kern/kernel.asm	/^f0105745:	e8 e5 fe ff ff       	call   f010562f <mpsearch1>$/;"	l
f010574a	obj/kern/kernel.asm	/^f010574a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010574d	obj/kern/kernel.asm	/^f010574d:	85 c0                	test   %eax,%eax$/;"	l
f010574f	obj/kern/kernel.asm	/^f010574f:	0f 84 5d 02 00 00    	je     f01059b2 <mp_init+0x2ea>$/;"	l
f0105755	obj/kern/kernel.asm	/^f0105755:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105758	obj/kern/kernel.asm	/^f0105758:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f010575b	obj/kern/kernel.asm	/^f010575b:	85 f6                	test   %esi,%esi$/;"	l
f010575d	obj/kern/kernel.asm	/^f010575d:	74 06                	je     f0105765 <mp_init+0x9d>$/;"	l
f010575f	obj/kern/kernel.asm	/^f010575f:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f0105763	obj/kern/kernel.asm	/^f0105763:	74 15                	je     f010577a <mp_init+0xb2>$/;"	l
f0105765	obj/kern/kernel.asm	/^f0105765:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105768	obj/kern/kernel.asm	/^f0105768:	68 70 7b 10 f0       	push   $0xf0107b70$/;"	l
f010576d	obj/kern/kernel.asm	/^f010576d:	e8 38 df ff ff       	call   f01036aa <cprintf>$/;"	l
f0105772	obj/kern/kernel.asm	/^f0105772:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105775	obj/kern/kernel.asm	/^f0105775:	e9 38 02 00 00       	jmp    f01059b2 <mp_init+0x2ea>$/;"	l
f010577a	obj/kern/kernel.asm	/^f010577a:	89 f0                	mov    %esi,%eax$/;"	l
f010577c	obj/kern/kernel.asm	/^f010577c:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010577f	obj/kern/kernel.asm	/^f010577f:	3b 05 88 5e 1e f0    	cmp    0xf01e5e88,%eax$/;"	l
f0105785	obj/kern/kernel.asm	/^f0105785:	72 15                	jb     f010579c <mp_init+0xd4>$/;"	l
f0105787	obj/kern/kernel.asm	/^f0105787:	56                   	push   %esi$/;"	l
f0105788	obj/kern/kernel.asm	/^f0105788:	68 84 60 10 f0       	push   $0xf0106084$/;"	l
f010578d	obj/kern/kernel.asm	/^f010578d:	68 90 00 00 00       	push   $0x90$/;"	l
f0105792	obj/kern/kernel.asm	/^f0105792:	68 fd 7c 10 f0       	push   $0xf0107cfd$/;"	l
f0105797	obj/kern/kernel.asm	/^f0105797:	e8 a4 a8 ff ff       	call   f0100040 <_panic>$/;"	l
f010579c	obj/kern/kernel.asm	/^f010579c:	8d 9e 00 00 00 f0    	lea    -0x10000000(%esi),%ebx$/;"	l
f01057a2	obj/kern/kernel.asm	/^f01057a2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01057a5	obj/kern/kernel.asm	/^f01057a5:	6a 04                	push   $0x4$/;"	l
f01057a7	obj/kern/kernel.asm	/^f01057a7:	68 12 7d 10 f0       	push   $0xf0107d12$/;"	l
f01057ac	obj/kern/kernel.asm	/^f01057ac:	53                   	push   %ebx$/;"	l
f01057ad	obj/kern/kernel.asm	/^f01057ad:	e8 c7 fc ff ff       	call   f0105479 <memcmp>$/;"	l
f01057b2	obj/kern/kernel.asm	/^f01057b2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01057b5	obj/kern/kernel.asm	/^f01057b5:	85 c0                	test   %eax,%eax$/;"	l
f01057b7	obj/kern/kernel.asm	/^f01057b7:	74 15                	je     f01057ce <mp_init+0x106>$/;"	l
f01057b9	obj/kern/kernel.asm	/^f01057b9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01057bc	obj/kern/kernel.asm	/^f01057bc:	68 a0 7b 10 f0       	push   $0xf0107ba0$/;"	l
f01057c1	obj/kern/kernel.asm	/^f01057c1:	e8 e4 de ff ff       	call   f01036aa <cprintf>$/;"	l
f01057c6	obj/kern/kernel.asm	/^f01057c6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01057c9	obj/kern/kernel.asm	/^f01057c9:	e9 e4 01 00 00       	jmp    f01059b2 <mp_init+0x2ea>$/;"	l
f01057ce	obj/kern/kernel.asm	/^f01057ce:	0f b7 43 04          	movzwl 0x4(%ebx),%eax$/;"	l
f01057d2	obj/kern/kernel.asm	/^f01057d2:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)$/;"	l
f01057d6	obj/kern/kernel.asm	/^f01057d6:	0f b7 f8             	movzwl %ax,%edi$/;"	l
f01057d9	obj/kern/kernel.asm	/^f01057d9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01057de	obj/kern/kernel.asm	/^f01057de:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01057e3	obj/kern/kernel.asm	/^f01057e3:	eb 0d                	jmp    f01057f2 <mp_init+0x12a>$/;"	l
f01057e5	obj/kern/kernel.asm	/^f01057e5:	0f b6 8c 30 00 00 00 	movzbl -0x10000000(%eax,%esi,1),%ecx$/;"	l
f01057ec	obj/kern/kernel.asm	/^f01057ec:	f0 $/;"	l
f01057ed	obj/kern/kernel.asm	/^f01057ed:	01 ca                	add    %ecx,%edx$/;"	l
f01057ef	obj/kern/kernel.asm	/^f01057ef:	83 c0 01             	add    $0x1,%eax$/;"	l
f01057f2	obj/kern/kernel.asm	/^f01057f2:	39 c7                	cmp    %eax,%edi$/;"	l
f01057f4	obj/kern/kernel.asm	/^f01057f4:	75 ef                	jne    f01057e5 <mp_init+0x11d>$/;"	l
f01057f6	obj/kern/kernel.asm	/^f01057f6:	84 d2                	test   %dl,%dl$/;"	l
f01057f8	obj/kern/kernel.asm	/^f01057f8:	74 15                	je     f010580f <mp_init+0x147>$/;"	l
f01057fa	obj/kern/kernel.asm	/^f01057fa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01057fd	obj/kern/kernel.asm	/^f01057fd:	68 d4 7b 10 f0       	push   $0xf0107bd4$/;"	l
f0105802	obj/kern/kernel.asm	/^f0105802:	e8 a3 de ff ff       	call   f01036aa <cprintf>$/;"	l
f0105807	obj/kern/kernel.asm	/^f0105807:	83 c4 10             	add    $0x10,%esp$/;"	l
f010580a	obj/kern/kernel.asm	/^f010580a:	e9 a3 01 00 00       	jmp    f01059b2 <mp_init+0x2ea>$/;"	l
f010580f	obj/kern/kernel.asm	/^f010580f:	0f b6 43 06          	movzbl 0x6(%ebx),%eax$/;"	l
f0105813	obj/kern/kernel.asm	/^f0105813:	3c 01                	cmp    $0x1,%al$/;"	l
f0105815	obj/kern/kernel.asm	/^f0105815:	74 1d                	je     f0105834 <mp_init+0x16c>$/;"	l
f0105817	obj/kern/kernel.asm	/^f0105817:	3c 04                	cmp    $0x4,%al$/;"	l
f0105819	obj/kern/kernel.asm	/^f0105819:	74 19                	je     f0105834 <mp_init+0x16c>$/;"	l
f010581b	obj/kern/kernel.asm	/^f010581b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010581e	obj/kern/kernel.asm	/^f010581e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105821	obj/kern/kernel.asm	/^f0105821:	50                   	push   %eax$/;"	l
f0105822	obj/kern/kernel.asm	/^f0105822:	68 f8 7b 10 f0       	push   $0xf0107bf8$/;"	l
f0105827	obj/kern/kernel.asm	/^f0105827:	e8 7e de ff ff       	call   f01036aa <cprintf>$/;"	l
f010582c	obj/kern/kernel.asm	/^f010582c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010582f	obj/kern/kernel.asm	/^f010582f:	e9 7e 01 00 00       	jmp    f01059b2 <mp_init+0x2ea>$/;"	l
f0105834	obj/kern/kernel.asm	/^f0105834:	0f b7 7b 28          	movzwl 0x28(%ebx),%edi$/;"	l
f0105838	obj/kern/kernel.asm	/^f0105838:	0f b7 4d e2          	movzwl -0x1e(%ebp),%ecx$/;"	l
f010583c	obj/kern/kernel.asm	/^f010583c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105841	obj/kern/kernel.asm	/^f0105841:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105846	obj/kern/kernel.asm	/^f0105846:	01 ce                	add    %ecx,%esi$/;"	l
f0105848	obj/kern/kernel.asm	/^f0105848:	eb 0d                	jmp    f0105857 <mp_init+0x18f>$/;"	l
f010584a	obj/kern/kernel.asm	/^f010584a:	0f b6 8c 06 00 00 00 	movzbl -0x10000000(%esi,%eax,1),%ecx$/;"	l
f0105851	obj/kern/kernel.asm	/^f0105851:	f0 $/;"	l
f0105852	obj/kern/kernel.asm	/^f0105852:	01 ca                	add    %ecx,%edx$/;"	l
f0105854	obj/kern/kernel.asm	/^f0105854:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105857	obj/kern/kernel.asm	/^f0105857:	39 c7                	cmp    %eax,%edi$/;"	l
f0105859	obj/kern/kernel.asm	/^f0105859:	75 ef                	jne    f010584a <mp_init+0x182>$/;"	l
f010585b	obj/kern/kernel.asm	/^f010585b:	89 d0                	mov    %edx,%eax$/;"	l
f010585d	obj/kern/kernel.asm	/^f010585d:	02 43 2a             	add    0x2a(%ebx),%al$/;"	l
f0105860	obj/kern/kernel.asm	/^f0105860:	74 15                	je     f0105877 <mp_init+0x1af>$/;"	l
f0105862	obj/kern/kernel.asm	/^f0105862:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105865	obj/kern/kernel.asm	/^f0105865:	68 18 7c 10 f0       	push   $0xf0107c18$/;"	l
f010586a	obj/kern/kernel.asm	/^f010586a:	e8 3b de ff ff       	call   f01036aa <cprintf>$/;"	l
f010586f	obj/kern/kernel.asm	/^f010586f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105872	obj/kern/kernel.asm	/^f0105872:	e9 3b 01 00 00       	jmp    f01059b2 <mp_init+0x2ea>$/;"	l
f0105877	obj/kern/kernel.asm	/^f0105877:	85 db                	test   %ebx,%ebx$/;"	l
f0105879	obj/kern/kernel.asm	/^f0105879:	0f 84 33 01 00 00    	je     f01059b2 <mp_init+0x2ea>$/;"	l
f010587f	obj/kern/kernel.asm	/^f010587f:	c7 05 00 60 1e f0 01 	movl   $0x1,0xf01e6000$/;"	l
f0105886	obj/kern/kernel.asm	/^f0105886:	00 00 00 $/;"	l
f0105889	obj/kern/kernel.asm	/^f0105889:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f010588c	obj/kern/kernel.asm	/^f010588c:	a3 00 70 22 f0       	mov    %eax,0xf0227000$/;"	l
f0105891	obj/kern/kernel.asm	/^f0105891:	8d 7b 2c             	lea    0x2c(%ebx),%edi$/;"	l
f0105894	obj/kern/kernel.asm	/^f0105894:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105899	obj/kern/kernel.asm	/^f0105899:	e9 85 00 00 00       	jmp    f0105923 <mp_init+0x25b>$/;"	l
f010589e	obj/kern/kernel.asm	/^f010589e:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f01058a1	obj/kern/kernel.asm	/^f01058a1:	84 c0                	test   %al,%al$/;"	l
f01058a3	obj/kern/kernel.asm	/^f01058a3:	74 06                	je     f01058ab <mp_init+0x1e3>$/;"	l
f01058a5	obj/kern/kernel.asm	/^f01058a5:	3c 04                	cmp    $0x4,%al$/;"	l
f01058a7	obj/kern/kernel.asm	/^f01058a7:	77 55                	ja     f01058fe <mp_init+0x236>$/;"	l
f01058a9	obj/kern/kernel.asm	/^f01058a9:	eb 4e                	jmp    f01058f9 <mp_init+0x231>$/;"	l
f01058ab	obj/kern/kernel.asm	/^f01058ab:	f6 47 03 02          	testb  $0x2,0x3(%edi)$/;"	l
f01058af	obj/kern/kernel.asm	/^f01058af:	74 11                	je     f01058c2 <mp_init+0x1fa>$/;"	l
f01058b1	obj/kern/kernel.asm	/^f01058b1:	6b 05 c4 63 1e f0 74 	imul   $0x74,0xf01e63c4,%eax$/;"	l
f01058b8	obj/kern/kernel.asm	/^f01058b8:	05 20 60 1e f0       	add    $0xf01e6020,%eax$/;"	l
f01058bd	obj/kern/kernel.asm	/^f01058bd:	a3 c0 63 1e f0       	mov    %eax,0xf01e63c0$/;"	l
f01058c2	obj/kern/kernel.asm	/^f01058c2:	a1 c4 63 1e f0       	mov    0xf01e63c4,%eax$/;"	l
f01058c7	obj/kern/kernel.asm	/^f01058c7:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f01058ca	obj/kern/kernel.asm	/^f01058ca:	7f 13                	jg     f01058df <mp_init+0x217>$/;"	l
f01058cc	obj/kern/kernel.asm	/^f01058cc:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f01058cf	obj/kern/kernel.asm	/^f01058cf:	88 82 20 60 1e f0    	mov    %al,-0xfe19fe0(%edx)$/;"	l
f01058d5	obj/kern/kernel.asm	/^f01058d5:	83 c0 01             	add    $0x1,%eax$/;"	l
f01058d8	obj/kern/kernel.asm	/^f01058d8:	a3 c4 63 1e f0       	mov    %eax,0xf01e63c4$/;"	l
f01058dd	obj/kern/kernel.asm	/^f01058dd:	eb 15                	jmp    f01058f4 <mp_init+0x22c>$/;"	l
f01058df	obj/kern/kernel.asm	/^f01058df:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01058e2	obj/kern/kernel.asm	/^f01058e2:	0f b6 47 01          	movzbl 0x1(%edi),%eax$/;"	l
f01058e6	obj/kern/kernel.asm	/^f01058e6:	50                   	push   %eax$/;"	l
f01058e7	obj/kern/kernel.asm	/^f01058e7:	68 48 7c 10 f0       	push   $0xf0107c48$/;"	l
f01058ec	obj/kern/kernel.asm	/^f01058ec:	e8 b9 dd ff ff       	call   f01036aa <cprintf>$/;"	l
f01058f1	obj/kern/kernel.asm	/^f01058f1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01058f4	obj/kern/kernel.asm	/^f01058f4:	83 c7 14             	add    $0x14,%edi$/;"	l
f01058f7	obj/kern/kernel.asm	/^f01058f7:	eb 27                	jmp    f0105920 <mp_init+0x258>$/;"	l
f01058f9	obj/kern/kernel.asm	/^f01058f9:	83 c7 08             	add    $0x8,%edi$/;"	l
f01058fc	obj/kern/kernel.asm	/^f01058fc:	eb 22                	jmp    f0105920 <mp_init+0x258>$/;"	l
f01058fe	obj/kern/kernel.asm	/^f01058fe:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105901	obj/kern/kernel.asm	/^f0105901:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105904	obj/kern/kernel.asm	/^f0105904:	50                   	push   %eax$/;"	l
f0105905	obj/kern/kernel.asm	/^f0105905:	68 70 7c 10 f0       	push   $0xf0107c70$/;"	l
f010590a	obj/kern/kernel.asm	/^f010590a:	e8 9b dd ff ff       	call   f01036aa <cprintf>$/;"	l
f010590f	obj/kern/kernel.asm	/^f010590f:	c7 05 00 60 1e f0 00 	movl   $0x0,0xf01e6000$/;"	l
f0105916	obj/kern/kernel.asm	/^f0105916:	00 00 00 $/;"	l
f0105919	obj/kern/kernel.asm	/^f0105919:	0f b7 73 22          	movzwl 0x22(%ebx),%esi$/;"	l
f010591d	obj/kern/kernel.asm	/^f010591d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105920	obj/kern/kernel.asm	/^f0105920:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105923	obj/kern/kernel.asm	/^f0105923:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f0105927	obj/kern/kernel.asm	/^f0105927:	39 c6                	cmp    %eax,%esi$/;"	l
f0105929	obj/kern/kernel.asm	/^f0105929:	0f 82 6f ff ff ff    	jb     f010589e <mp_init+0x1d6>$/;"	l
f010592f	obj/kern/kernel.asm	/^f010592f:	a1 c0 63 1e f0       	mov    0xf01e63c0,%eax$/;"	l
f0105934	obj/kern/kernel.asm	/^f0105934:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f010593b	obj/kern/kernel.asm	/^f010593b:	83 3d 00 60 1e f0 00 	cmpl   $0x0,0xf01e6000$/;"	l
f0105942	obj/kern/kernel.asm	/^f0105942:	75 26                	jne    f010596a <mp_init+0x2a2>$/;"	l
f0105944	obj/kern/kernel.asm	/^f0105944:	c7 05 c4 63 1e f0 01 	movl   $0x1,0xf01e63c4$/;"	l
f010594b	obj/kern/kernel.asm	/^f010594b:	00 00 00 $/;"	l
f010594e	obj/kern/kernel.asm	/^f010594e:	c7 05 00 70 22 f0 00 	movl   $0x0,0xf0227000$/;"	l
f0105955	obj/kern/kernel.asm	/^f0105955:	00 00 00 $/;"	l
f0105958	obj/kern/kernel.asm	/^f0105958:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010595b	obj/kern/kernel.asm	/^f010595b:	68 90 7c 10 f0       	push   $0xf0107c90$/;"	l
f0105960	obj/kern/kernel.asm	/^f0105960:	e8 45 dd ff ff       	call   f01036aa <cprintf>$/;"	l
f0105965	obj/kern/kernel.asm	/^f0105965:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105968	obj/kern/kernel.asm	/^f0105968:	eb 48                	jmp    f01059b2 <mp_init+0x2ea>$/;"	l
f010596a	obj/kern/kernel.asm	/^f010596a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010596d	obj/kern/kernel.asm	/^f010596d:	ff 35 c4 63 1e f0    	pushl  0xf01e63c4$/;"	l
f0105973	obj/kern/kernel.asm	/^f0105973:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0105976	obj/kern/kernel.asm	/^f0105976:	50                   	push   %eax$/;"	l
f0105977	obj/kern/kernel.asm	/^f0105977:	68 17 7d 10 f0       	push   $0xf0107d17$/;"	l
f010597c	obj/kern/kernel.asm	/^f010597c:	e8 29 dd ff ff       	call   f01036aa <cprintf>$/;"	l
f0105981	obj/kern/kernel.asm	/^f0105981:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105984	obj/kern/kernel.asm	/^f0105984:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105987	obj/kern/kernel.asm	/^f0105987:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f010598b	obj/kern/kernel.asm	/^f010598b:	74 25                	je     f01059b2 <mp_init+0x2ea>$/;"	l
f010598d	obj/kern/kernel.asm	/^f010598d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105990	obj/kern/kernel.asm	/^f0105990:	68 bc 7c 10 f0       	push   $0xf0107cbc$/;"	l
f0105995	obj/kern/kernel.asm	/^f0105995:	e8 10 dd ff ff       	call   f01036aa <cprintf>$/;"	l
f010599a	obj/kern/kernel.asm	/^f010599a:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f010599f	obj/kern/kernel.asm	/^f010599f:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f01059a4	obj/kern/kernel.asm	/^f01059a4:	ee                   	out    %al,(%dx)$/;"	l
f01059a5	obj/kern/kernel.asm	/^f01059a5:	ba 23 00 00 00       	mov    $0x23,%edx$/;"	l
f01059aa	obj/kern/kernel.asm	/^f01059aa:	ec                   	in     (%dx),%al$/;"	l
f01059ab	obj/kern/kernel.asm	/^f01059ab:	83 c8 01             	or     $0x1,%eax$/;"	l
f01059ae	obj/kern/kernel.asm	/^f01059ae:	ee                   	out    %al,(%dx)$/;"	l
f01059af	obj/kern/kernel.asm	/^f01059af:	83 c4 10             	add    $0x10,%esp$/;"	l
f01059b2	obj/kern/kernel.asm	/^f01059b2:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01059b5	obj/kern/kernel.asm	/^f01059b5:	5b                   	pop    %ebx$/;"	l
f01059b6	obj/kern/kernel.asm	/^f01059b6:	5e                   	pop    %esi$/;"	l
f01059b7	obj/kern/kernel.asm	/^f01059b7:	5f                   	pop    %edi$/;"	l
f01059b8	obj/kern/kernel.asm	/^f01059b8:	5d                   	pop    %ebp$/;"	l
f01059b9	obj/kern/kernel.asm	/^f01059b9:	c3                   	ret    $/;"	l
f01059ba	obj/kern/kernel.asm	/^f01059ba <lapicw>:$/;"	l
f01059ba	obj/kern/kernel.asm	/^f01059ba:	55                   	push   %ebp$/;"	l
f01059bb	obj/kern/kernel.asm	/^f01059bb:	89 e5                	mov    %esp,%ebp$/;"	l
f01059bd	obj/kern/kernel.asm	/^f01059bd:	8b 0d 04 70 22 f0    	mov    0xf0227004,%ecx$/;"	l
f01059c3	obj/kern/kernel.asm	/^f01059c3:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f01059c6	obj/kern/kernel.asm	/^f01059c6:	89 10                	mov    %edx,(%eax)$/;"	l
f01059c8	obj/kern/kernel.asm	/^f01059c8:	a1 04 70 22 f0       	mov    0xf0227004,%eax$/;"	l
f01059cd	obj/kern/kernel.asm	/^f01059cd:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f01059d0	obj/kern/kernel.asm	/^f01059d0:	5d                   	pop    %ebp$/;"	l
f01059d1	obj/kern/kernel.asm	/^f01059d1:	c3                   	ret    $/;"	l
f01059d2	obj/kern/kernel.asm	/^f01059d2 <cpunum>:$/;"	l
f01059d2	obj/kern/kernel.asm	/^f01059d2:	55                   	push   %ebp$/;"	l
f01059d3	obj/kern/kernel.asm	/^f01059d3:	89 e5                	mov    %esp,%ebp$/;"	l
f01059d5	obj/kern/kernel.asm	/^f01059d5:	a1 04 70 22 f0       	mov    0xf0227004,%eax$/;"	l
f01059da	obj/kern/kernel.asm	/^f01059da:	85 c0                	test   %eax,%eax$/;"	l
f01059dc	obj/kern/kernel.asm	/^f01059dc:	74 08                	je     f01059e6 <cpunum+0x14>$/;"	l
f01059de	obj/kern/kernel.asm	/^f01059de:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f01059e1	obj/kern/kernel.asm	/^f01059e1:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f01059e4	obj/kern/kernel.asm	/^f01059e4:	eb 05                	jmp    f01059eb <cpunum+0x19>$/;"	l
f01059e6	obj/kern/kernel.asm	/^f01059e6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01059eb	obj/kern/kernel.asm	/^f01059eb:	5d                   	pop    %ebp$/;"	l
f01059ec	obj/kern/kernel.asm	/^f01059ec:	c3                   	ret    $/;"	l
f01059ed	obj/kern/kernel.asm	/^f01059ed <lapic_init>:$/;"	l
f01059ed	obj/kern/kernel.asm	/^f01059ed:	a1 00 70 22 f0       	mov    0xf0227000,%eax$/;"	l
f01059f2	obj/kern/kernel.asm	/^f01059f2:	85 c0                	test   %eax,%eax$/;"	l
f01059f4	obj/kern/kernel.asm	/^f01059f4:	0f 84 21 01 00 00    	je     f0105b1b <lapic_init+0x12e>$/;"	l
f01059fa	obj/kern/kernel.asm	/^f01059fa:	55                   	push   %ebp$/;"	l
f01059fb	obj/kern/kernel.asm	/^f01059fb:	89 e5                	mov    %esp,%ebp$/;"	l
f01059fd	obj/kern/kernel.asm	/^f01059fd:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0105a00	obj/kern/kernel.asm	/^f0105a00:	68 00 10 00 00       	push   $0x1000$/;"	l
f0105a05	obj/kern/kernel.asm	/^f0105a05:	50                   	push   %eax$/;"	l
f0105a06	obj/kern/kernel.asm	/^f0105a06:	e8 36 b8 ff ff       	call   f0101241 <mmio_map_region>$/;"	l
f0105a0b	obj/kern/kernel.asm	/^f0105a0b:	a3 04 70 22 f0       	mov    %eax,0xf0227004$/;"	l
f0105a10	obj/kern/kernel.asm	/^f0105a10:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f0105a15	obj/kern/kernel.asm	/^f0105a15:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f0105a1a	obj/kern/kernel.asm	/^f0105a1a:	e8 9b ff ff ff       	call   f01059ba <lapicw>$/;"	l
f0105a1f	obj/kern/kernel.asm	/^f0105a1f:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f0105a24	obj/kern/kernel.asm	/^f0105a24:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0105a29	obj/kern/kernel.asm	/^f0105a29:	e8 8c ff ff ff       	call   f01059ba <lapicw>$/;"	l
f0105a2e	obj/kern/kernel.asm	/^f0105a2e:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f0105a33	obj/kern/kernel.asm	/^f0105a33:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0105a38	obj/kern/kernel.asm	/^f0105a38:	e8 7d ff ff ff       	call   f01059ba <lapicw>$/;"	l
f0105a3d	obj/kern/kernel.asm	/^f0105a3d:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f0105a42	obj/kern/kernel.asm	/^f0105a42:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f0105a47	obj/kern/kernel.asm	/^f0105a47:	e8 6e ff ff ff       	call   f01059ba <lapicw>$/;"	l
f0105a4c	obj/kern/kernel.asm	/^f0105a4c:	e8 81 ff ff ff       	call   f01059d2 <cpunum>$/;"	l
f0105a51	obj/kern/kernel.asm	/^f0105a51:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105a54	obj/kern/kernel.asm	/^f0105a54:	05 20 60 1e f0       	add    $0xf01e6020,%eax$/;"	l
f0105a59	obj/kern/kernel.asm	/^f0105a59:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105a5c	obj/kern/kernel.asm	/^f0105a5c:	39 05 c0 63 1e f0    	cmp    %eax,0xf01e63c0$/;"	l
f0105a62	obj/kern/kernel.asm	/^f0105a62:	74 0f                	je     f0105a73 <lapic_init+0x86>$/;"	l
f0105a64	obj/kern/kernel.asm	/^f0105a64:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105a69	obj/kern/kernel.asm	/^f0105a69:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0105a6e	obj/kern/kernel.asm	/^f0105a6e:	e8 47 ff ff ff       	call   f01059ba <lapicw>$/;"	l
f0105a73	obj/kern/kernel.asm	/^f0105a73:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105a78	obj/kern/kernel.asm	/^f0105a78:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0105a7d	obj/kern/kernel.asm	/^f0105a7d:	e8 38 ff ff ff       	call   f01059ba <lapicw>$/;"	l
f0105a82	obj/kern/kernel.asm	/^f0105a82:	a1 04 70 22 f0       	mov    0xf0227004,%eax$/;"	l
f0105a87	obj/kern/kernel.asm	/^f0105a87:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f0105a8a	obj/kern/kernel.asm	/^f0105a8a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105a8d	obj/kern/kernel.asm	/^f0105a8d:	3c 03                	cmp    $0x3,%al$/;"	l
f0105a8f	obj/kern/kernel.asm	/^f0105a8f:	76 0f                	jbe    f0105aa0 <lapic_init+0xb3>$/;"	l
f0105a91	obj/kern/kernel.asm	/^f0105a91:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105a96	obj/kern/kernel.asm	/^f0105a96:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f0105a9b	obj/kern/kernel.asm	/^f0105a9b:	e8 1a ff ff ff       	call   f01059ba <lapicw>$/;"	l
f0105aa0	obj/kern/kernel.asm	/^f0105aa0:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f0105aa5	obj/kern/kernel.asm	/^f0105aa5:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f0105aaa	obj/kern/kernel.asm	/^f0105aaa:	e8 0b ff ff ff       	call   f01059ba <lapicw>$/;"	l
f0105aaf	obj/kern/kernel.asm	/^f0105aaf:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105ab4	obj/kern/kernel.asm	/^f0105ab4:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0105ab9	obj/kern/kernel.asm	/^f0105ab9:	e8 fc fe ff ff       	call   f01059ba <lapicw>$/;"	l
f0105abe	obj/kern/kernel.asm	/^f0105abe:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105ac3	obj/kern/kernel.asm	/^f0105ac3:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0105ac8	obj/kern/kernel.asm	/^f0105ac8:	e8 ed fe ff ff       	call   f01059ba <lapicw>$/;"	l
f0105acd	obj/kern/kernel.asm	/^f0105acd:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105ad2	obj/kern/kernel.asm	/^f0105ad2:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0105ad7	obj/kern/kernel.asm	/^f0105ad7:	e8 de fe ff ff       	call   f01059ba <lapicw>$/;"	l
f0105adc	obj/kern/kernel.asm	/^f0105adc:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105ae1	obj/kern/kernel.asm	/^f0105ae1:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105ae6	obj/kern/kernel.asm	/^f0105ae6:	e8 cf fe ff ff       	call   f01059ba <lapicw>$/;"	l
f0105aeb	obj/kern/kernel.asm	/^f0105aeb:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f0105af0	obj/kern/kernel.asm	/^f0105af0:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105af5	obj/kern/kernel.asm	/^f0105af5:	e8 c0 fe ff ff       	call   f01059ba <lapicw>$/;"	l
f0105afa	obj/kern/kernel.asm	/^f0105afa:	8b 15 04 70 22 f0    	mov    0xf0227004,%edx$/;"	l
f0105b00	obj/kern/kernel.asm	/^f0105b00:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0105b06	obj/kern/kernel.asm	/^f0105b06:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0105b09	obj/kern/kernel.asm	/^f0105b09:	75 f5                	jne    f0105b00 <lapic_init+0x113>$/;"	l
f0105b0b	obj/kern/kernel.asm	/^f0105b0b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105b10	obj/kern/kernel.asm	/^f0105b10:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0105b15	obj/kern/kernel.asm	/^f0105b15:	e8 a0 fe ff ff       	call   f01059ba <lapicw>$/;"	l
f0105b1a	obj/kern/kernel.asm	/^f0105b1a:	c9                   	leave  $/;"	l
f0105b1b	obj/kern/kernel.asm	/^f0105b1b:	f3 c3                	repz ret $/;"	l
f0105b1d	obj/kern/kernel.asm	/^f0105b1d <lapic_eoi>:$/;"	l
f0105b1d	obj/kern/kernel.asm	/^f0105b1d:	83 3d 04 70 22 f0 00 	cmpl   $0x0,0xf0227004$/;"	l
f0105b24	obj/kern/kernel.asm	/^f0105b24:	74 13                	je     f0105b39 <lapic_eoi+0x1c>$/;"	l
f0105b26	obj/kern/kernel.asm	/^f0105b26:	55                   	push   %ebp$/;"	l
f0105b27	obj/kern/kernel.asm	/^f0105b27:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b29	obj/kern/kernel.asm	/^f0105b29:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105b2e	obj/kern/kernel.asm	/^f0105b2e:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0105b33	obj/kern/kernel.asm	/^f0105b33:	e8 82 fe ff ff       	call   f01059ba <lapicw>$/;"	l
f0105b38	obj/kern/kernel.asm	/^f0105b38:	5d                   	pop    %ebp$/;"	l
f0105b39	obj/kern/kernel.asm	/^f0105b39:	f3 c3                	repz ret $/;"	l
f0105b3b	obj/kern/kernel.asm	/^f0105b3b <lapic_startap>:$/;"	l
f0105b3b	obj/kern/kernel.asm	/^f0105b3b:	55                   	push   %ebp$/;"	l
f0105b3c	obj/kern/kernel.asm	/^f0105b3c:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b3e	obj/kern/kernel.asm	/^f0105b3e:	56                   	push   %esi$/;"	l
f0105b3f	obj/kern/kernel.asm	/^f0105b3f:	53                   	push   %ebx$/;"	l
f0105b40	obj/kern/kernel.asm	/^f0105b40:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105b43	obj/kern/kernel.asm	/^f0105b43:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105b46	obj/kern/kernel.asm	/^f0105b46:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0105b4b	obj/kern/kernel.asm	/^f0105b4b:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0105b50	obj/kern/kernel.asm	/^f0105b50:	ee                   	out    %al,(%dx)$/;"	l
f0105b51	obj/kern/kernel.asm	/^f0105b51:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0105b56	obj/kern/kernel.asm	/^f0105b56:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0105b5b	obj/kern/kernel.asm	/^f0105b5b:	ee                   	out    %al,(%dx)$/;"	l
f0105b5c	obj/kern/kernel.asm	/^f0105b5c:	83 3d 88 5e 1e f0 00 	cmpl   $0x0,0xf01e5e88$/;"	l
f0105b63	obj/kern/kernel.asm	/^f0105b63:	75 19                	jne    f0105b7e <lapic_startap+0x43>$/;"	l
f0105b65	obj/kern/kernel.asm	/^f0105b65:	68 67 04 00 00       	push   $0x467$/;"	l
f0105b6a	obj/kern/kernel.asm	/^f0105b6a:	68 84 60 10 f0       	push   $0xf0106084$/;"	l
f0105b6f	obj/kern/kernel.asm	/^f0105b6f:	68 98 00 00 00       	push   $0x98$/;"	l
f0105b74	obj/kern/kernel.asm	/^f0105b74:	68 34 7d 10 f0       	push   $0xf0107d34$/;"	l
f0105b79	obj/kern/kernel.asm	/^f0105b79:	e8 c2 a4 ff ff       	call   f0100040 <_panic>$/;"	l
f0105b7e	obj/kern/kernel.asm	/^f0105b7e:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f0105b85	obj/kern/kernel.asm	/^f0105b85:	00 00 $/;"	l
f0105b87	obj/kern/kernel.asm	/^f0105b87:	89 d8                	mov    %ebx,%eax$/;"	l
f0105b89	obj/kern/kernel.asm	/^f0105b89:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0105b8c	obj/kern/kernel.asm	/^f0105b8c:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f0105b92	obj/kern/kernel.asm	/^f0105b92:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0105b95	obj/kern/kernel.asm	/^f0105b95:	89 f2                	mov    %esi,%edx$/;"	l
f0105b97	obj/kern/kernel.asm	/^f0105b97:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105b9c	obj/kern/kernel.asm	/^f0105b9c:	e8 19 fe ff ff       	call   f01059ba <lapicw>$/;"	l
f0105ba1	obj/kern/kernel.asm	/^f0105ba1:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f0105ba6	obj/kern/kernel.asm	/^f0105ba6:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105bab	obj/kern/kernel.asm	/^f0105bab:	e8 0a fe ff ff       	call   f01059ba <lapicw>$/;"	l
f0105bb0	obj/kern/kernel.asm	/^f0105bb0:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f0105bb5	obj/kern/kernel.asm	/^f0105bb5:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105bba	obj/kern/kernel.asm	/^f0105bba:	e8 fb fd ff ff       	call   f01059ba <lapicw>$/;"	l
f0105bbf	obj/kern/kernel.asm	/^f0105bbf:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0105bc2	obj/kern/kernel.asm	/^f0105bc2:	80 cf 06             	or     $0x6,%bh$/;"	l
f0105bc5	obj/kern/kernel.asm	/^f0105bc5:	89 f2                	mov    %esi,%edx$/;"	l
f0105bc7	obj/kern/kernel.asm	/^f0105bc7:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105bcc	obj/kern/kernel.asm	/^f0105bcc:	e8 e9 fd ff ff       	call   f01059ba <lapicw>$/;"	l
f0105bd1	obj/kern/kernel.asm	/^f0105bd1:	89 da                	mov    %ebx,%edx$/;"	l
f0105bd3	obj/kern/kernel.asm	/^f0105bd3:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105bd8	obj/kern/kernel.asm	/^f0105bd8:	e8 dd fd ff ff       	call   f01059ba <lapicw>$/;"	l
f0105bdd	obj/kern/kernel.asm	/^f0105bdd:	89 f2                	mov    %esi,%edx$/;"	l
f0105bdf	obj/kern/kernel.asm	/^f0105bdf:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105be4	obj/kern/kernel.asm	/^f0105be4:	e8 d1 fd ff ff       	call   f01059ba <lapicw>$/;"	l
f0105be9	obj/kern/kernel.asm	/^f0105be9:	89 da                	mov    %ebx,%edx$/;"	l
f0105beb	obj/kern/kernel.asm	/^f0105beb:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105bf0	obj/kern/kernel.asm	/^f0105bf0:	e8 c5 fd ff ff       	call   f01059ba <lapicw>$/;"	l
f0105bf5	obj/kern/kernel.asm	/^f0105bf5:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0105bf8	obj/kern/kernel.asm	/^f0105bf8:	5b                   	pop    %ebx$/;"	l
f0105bf9	obj/kern/kernel.asm	/^f0105bf9:	5e                   	pop    %esi$/;"	l
f0105bfa	obj/kern/kernel.asm	/^f0105bfa:	5d                   	pop    %ebp$/;"	l
f0105bfb	obj/kern/kernel.asm	/^f0105bfb:	c3                   	ret    $/;"	l
f0105bfc	obj/kern/kernel.asm	/^f0105bfc <lapic_ipi>:$/;"	l
f0105bfc	obj/kern/kernel.asm	/^f0105bfc:	55                   	push   %ebp$/;"	l
f0105bfd	obj/kern/kernel.asm	/^f0105bfd:	89 e5                	mov    %esp,%ebp$/;"	l
f0105bff	obj/kern/kernel.asm	/^f0105bff:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105c02	obj/kern/kernel.asm	/^f0105c02:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0105c08	obj/kern/kernel.asm	/^f0105c08:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105c0d	obj/kern/kernel.asm	/^f0105c0d:	e8 a8 fd ff ff       	call   f01059ba <lapicw>$/;"	l
f0105c12	obj/kern/kernel.asm	/^f0105c12:	8b 15 04 70 22 f0    	mov    0xf0227004,%edx$/;"	l
f0105c18	obj/kern/kernel.asm	/^f0105c18:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0105c1e	obj/kern/kernel.asm	/^f0105c1e:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0105c21	obj/kern/kernel.asm	/^f0105c21:	75 f5                	jne    f0105c18 <lapic_ipi+0x1c>$/;"	l
f0105c23	obj/kern/kernel.asm	/^f0105c23:	5d                   	pop    %ebp$/;"	l
f0105c24	obj/kern/kernel.asm	/^f0105c24:	c3                   	ret    $/;"	l
f0105c25	obj/kern/kernel.asm	/^f0105c25 <__spin_initlock>:$/;"	l
f0105c25	obj/kern/kernel.asm	/^f0105c25:	55                   	push   %ebp$/;"	l
f0105c26	obj/kern/kernel.asm	/^f0105c26:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c28	obj/kern/kernel.asm	/^f0105c28:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105c2b	obj/kern/kernel.asm	/^f0105c2b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0105c31	obj/kern/kernel.asm	/^f0105c31:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105c34	obj/kern/kernel.asm	/^f0105c34:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0105c37	obj/kern/kernel.asm	/^f0105c37:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0105c3e	obj/kern/kernel.asm	/^f0105c3e:	5d                   	pop    %ebp$/;"	l
f0105c3f	obj/kern/kernel.asm	/^f0105c3f:	c3                   	ret    $/;"	l
f0105c40	obj/kern/kernel.asm	/^f0105c40 <spin_lock>:$/;"	l
f0105c40	obj/kern/kernel.asm	/^f0105c40:	55                   	push   %ebp$/;"	l
f0105c41	obj/kern/kernel.asm	/^f0105c41:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c43	obj/kern/kernel.asm	/^f0105c43:	56                   	push   %esi$/;"	l
f0105c44	obj/kern/kernel.asm	/^f0105c44:	53                   	push   %ebx$/;"	l
f0105c45	obj/kern/kernel.asm	/^f0105c45:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105c48	obj/kern/kernel.asm	/^f0105c48:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0105c4b	obj/kern/kernel.asm	/^f0105c4b:	74 14                	je     f0105c61 <spin_lock+0x21>$/;"	l
f0105c4d	obj/kern/kernel.asm	/^f0105c4d:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
f0105c50	obj/kern/kernel.asm	/^f0105c50:	e8 7d fd ff ff       	call   f01059d2 <cpunum>$/;"	l
f0105c55	obj/kern/kernel.asm	/^f0105c55:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105c58	obj/kern/kernel.asm	/^f0105c58:	05 20 60 1e f0       	add    $0xf01e6020,%eax$/;"	l
f0105c5d	obj/kern/kernel.asm	/^f0105c5d:	39 c6                	cmp    %eax,%esi$/;"	l
f0105c5f	obj/kern/kernel.asm	/^f0105c5f:	74 07                	je     f0105c68 <spin_lock+0x28>$/;"	l
f0105c61	obj/kern/kernel.asm	/^f0105c61:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0105c66	obj/kern/kernel.asm	/^f0105c66:	eb 20                	jmp    f0105c88 <spin_lock+0x48>$/;"	l
f0105c68	obj/kern/kernel.asm	/^f0105c68:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0105c6b	obj/kern/kernel.asm	/^f0105c6b:	e8 62 fd ff ff       	call   f01059d2 <cpunum>$/;"	l
f0105c70	obj/kern/kernel.asm	/^f0105c70:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105c73	obj/kern/kernel.asm	/^f0105c73:	53                   	push   %ebx$/;"	l
f0105c74	obj/kern/kernel.asm	/^f0105c74:	50                   	push   %eax$/;"	l
f0105c75	obj/kern/kernel.asm	/^f0105c75:	68 44 7d 10 f0       	push   $0xf0107d44$/;"	l
f0105c7a	obj/kern/kernel.asm	/^f0105c7a:	6a 41                	push   $0x41$/;"	l
f0105c7c	obj/kern/kernel.asm	/^f0105c7c:	68 a8 7d 10 f0       	push   $0xf0107da8$/;"	l
f0105c81	obj/kern/kernel.asm	/^f0105c81:	e8 ba a3 ff ff       	call   f0100040 <_panic>$/;"	l
f0105c86	obj/kern/kernel.asm	/^f0105c86:	f3 90                	pause  $/;"	l
f0105c88	obj/kern/kernel.asm	/^f0105c88:	89 d0                	mov    %edx,%eax$/;"	l
f0105c8a	obj/kern/kernel.asm	/^f0105c8a:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0105c8d	obj/kern/kernel.asm	/^f0105c8d:	85 c0                	test   %eax,%eax$/;"	l
f0105c8f	obj/kern/kernel.asm	/^f0105c8f:	75 f5                	jne    f0105c86 <spin_lock+0x46>$/;"	l
f0105c91	obj/kern/kernel.asm	/^f0105c91:	e8 3c fd ff ff       	call   f01059d2 <cpunum>$/;"	l
f0105c96	obj/kern/kernel.asm	/^f0105c96:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105c99	obj/kern/kernel.asm	/^f0105c99:	05 20 60 1e f0       	add    $0xf01e6020,%eax$/;"	l
f0105c9e	obj/kern/kernel.asm	/^f0105c9e:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0105ca1	obj/kern/kernel.asm	/^f0105ca1:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0105ca4	obj/kern/kernel.asm	/^f0105ca4:	89 ea                	mov    %ebp,%edx$/;"	l
f0105ca6	obj/kern/kernel.asm	/^f0105ca6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105cab	obj/kern/kernel.asm	/^f0105cab:	eb 0b                	jmp    f0105cb8 <spin_lock+0x78>$/;"	l
f0105cad	obj/kern/kernel.asm	/^f0105cad:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f0105cb0	obj/kern/kernel.asm	/^f0105cb0:	89 0c 83             	mov    %ecx,(%ebx,%eax,4)$/;"	l
f0105cb3	obj/kern/kernel.asm	/^f0105cb3:	8b 12                	mov    (%edx),%edx$/;"	l
f0105cb5	obj/kern/kernel.asm	/^f0105cb5:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105cb8	obj/kern/kernel.asm	/^f0105cb8:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f0105cbe	obj/kern/kernel.asm	/^f0105cbe:	76 11                	jbe    f0105cd1 <spin_lock+0x91>$/;"	l
f0105cc0	obj/kern/kernel.asm	/^f0105cc0:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0105cc3	obj/kern/kernel.asm	/^f0105cc3:	7e e8                	jle    f0105cad <spin_lock+0x6d>$/;"	l
f0105cc5	obj/kern/kernel.asm	/^f0105cc5:	eb 0a                	jmp    f0105cd1 <spin_lock+0x91>$/;"	l
f0105cc7	obj/kern/kernel.asm	/^f0105cc7:	c7 04 83 00 00 00 00 	movl   $0x0,(%ebx,%eax,4)$/;"	l
f0105cce	obj/kern/kernel.asm	/^f0105cce:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105cd1	obj/kern/kernel.asm	/^f0105cd1:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0105cd4	obj/kern/kernel.asm	/^f0105cd4:	7e f1                	jle    f0105cc7 <spin_lock+0x87>$/;"	l
f0105cd6	obj/kern/kernel.asm	/^f0105cd6:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0105cd9	obj/kern/kernel.asm	/^f0105cd9:	5b                   	pop    %ebx$/;"	l
f0105cda	obj/kern/kernel.asm	/^f0105cda:	5e                   	pop    %esi$/;"	l
f0105cdb	obj/kern/kernel.asm	/^f0105cdb:	5d                   	pop    %ebp$/;"	l
f0105cdc	obj/kern/kernel.asm	/^f0105cdc:	c3                   	ret    $/;"	l
f0105cdd	obj/kern/kernel.asm	/^f0105cdd <spin_unlock>:$/;"	l
f0105cdd	obj/kern/kernel.asm	/^f0105cdd:	55                   	push   %ebp$/;"	l
f0105cde	obj/kern/kernel.asm	/^f0105cde:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ce0	obj/kern/kernel.asm	/^f0105ce0:	57                   	push   %edi$/;"	l
f0105ce1	obj/kern/kernel.asm	/^f0105ce1:	56                   	push   %esi$/;"	l
f0105ce2	obj/kern/kernel.asm	/^f0105ce2:	53                   	push   %ebx$/;"	l
f0105ce3	obj/kern/kernel.asm	/^f0105ce3:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0105ce6	obj/kern/kernel.asm	/^f0105ce6:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105ce9	obj/kern/kernel.asm	/^f0105ce9:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f0105cec	obj/kern/kernel.asm	/^f0105cec:	74 18                	je     f0105d06 <spin_unlock+0x29>$/;"	l
f0105cee	obj/kern/kernel.asm	/^f0105cee:	8b 5e 08             	mov    0x8(%esi),%ebx$/;"	l
f0105cf1	obj/kern/kernel.asm	/^f0105cf1:	e8 dc fc ff ff       	call   f01059d2 <cpunum>$/;"	l
f0105cf6	obj/kern/kernel.asm	/^f0105cf6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105cf9	obj/kern/kernel.asm	/^f0105cf9:	05 20 60 1e f0       	add    $0xf01e6020,%eax$/;"	l
f0105cfe	obj/kern/kernel.asm	/^f0105cfe:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105d00	obj/kern/kernel.asm	/^f0105d00:	0f 84 a5 00 00 00    	je     f0105dab <spin_unlock+0xce>$/;"	l
f0105d06	obj/kern/kernel.asm	/^f0105d06:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105d09	obj/kern/kernel.asm	/^f0105d09:	6a 28                	push   $0x28$/;"	l
f0105d0b	obj/kern/kernel.asm	/^f0105d0b:	8d 46 0c             	lea    0xc(%esi),%eax$/;"	l
f0105d0e	obj/kern/kernel.asm	/^f0105d0e:	50                   	push   %eax$/;"	l
f0105d0f	obj/kern/kernel.asm	/^f0105d0f:	8d 5d c0             	lea    -0x40(%ebp),%ebx$/;"	l
f0105d12	obj/kern/kernel.asm	/^f0105d12:	53                   	push   %ebx$/;"	l
f0105d13	obj/kern/kernel.asm	/^f0105d13:	e8 e6 f6 ff ff       	call   f01053fe <memmove>$/;"	l
f0105d18	obj/kern/kernel.asm	/^f0105d18:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0105d1b	obj/kern/kernel.asm	/^f0105d1b:	0f b6 38             	movzbl (%eax),%edi$/;"	l
f0105d1e	obj/kern/kernel.asm	/^f0105d1e:	8b 76 04             	mov    0x4(%esi),%esi$/;"	l
f0105d21	obj/kern/kernel.asm	/^f0105d21:	e8 ac fc ff ff       	call   f01059d2 <cpunum>$/;"	l
f0105d26	obj/kern/kernel.asm	/^f0105d26:	57                   	push   %edi$/;"	l
f0105d27	obj/kern/kernel.asm	/^f0105d27:	56                   	push   %esi$/;"	l
f0105d28	obj/kern/kernel.asm	/^f0105d28:	50                   	push   %eax$/;"	l
f0105d29	obj/kern/kernel.asm	/^f0105d29:	68 70 7d 10 f0       	push   $0xf0107d70$/;"	l
f0105d2e	obj/kern/kernel.asm	/^f0105d2e:	e8 77 d9 ff ff       	call   f01036aa <cprintf>$/;"	l
f0105d33	obj/kern/kernel.asm	/^f0105d33:	83 c4 20             	add    $0x20,%esp$/;"	l
f0105d36	obj/kern/kernel.asm	/^f0105d36:	8d 7d a8             	lea    -0x58(%ebp),%edi$/;"	l
f0105d39	obj/kern/kernel.asm	/^f0105d39:	eb 54                	jmp    f0105d8f <spin_unlock+0xb2>$/;"	l
f0105d3b	obj/kern/kernel.asm	/^f0105d3b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105d3e	obj/kern/kernel.asm	/^f0105d3e:	57                   	push   %edi$/;"	l
f0105d3f	obj/kern/kernel.asm	/^f0105d3f:	50                   	push   %eax$/;"	l
f0105d40	obj/kern/kernel.asm	/^f0105d40:	e8 bb eb ff ff       	call   f0104900 <debuginfo_eip>$/;"	l
f0105d45	obj/kern/kernel.asm	/^f0105d45:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105d48	obj/kern/kernel.asm	/^f0105d48:	85 c0                	test   %eax,%eax$/;"	l
f0105d4a	obj/kern/kernel.asm	/^f0105d4a:	78 27                	js     f0105d73 <spin_unlock+0x96>$/;"	l
f0105d4c	obj/kern/kernel.asm	/^f0105d4c:	8b 06                	mov    (%esi),%eax$/;"	l
f0105d4e	obj/kern/kernel.asm	/^f0105d4e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105d51	obj/kern/kernel.asm	/^f0105d51:	89 c2                	mov    %eax,%edx$/;"	l
f0105d53	obj/kern/kernel.asm	/^f0105d53:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f0105d56	obj/kern/kernel.asm	/^f0105d56:	52                   	push   %edx$/;"	l
f0105d57	obj/kern/kernel.asm	/^f0105d57:	ff 75 b0             	pushl  -0x50(%ebp)$/;"	l
f0105d5a	obj/kern/kernel.asm	/^f0105d5a:	ff 75 b4             	pushl  -0x4c(%ebp)$/;"	l
f0105d5d	obj/kern/kernel.asm	/^f0105d5d:	ff 75 ac             	pushl  -0x54(%ebp)$/;"	l
f0105d60	obj/kern/kernel.asm	/^f0105d60:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0105d63	obj/kern/kernel.asm	/^f0105d63:	50                   	push   %eax$/;"	l
f0105d64	obj/kern/kernel.asm	/^f0105d64:	68 b8 7d 10 f0       	push   $0xf0107db8$/;"	l
f0105d69	obj/kern/kernel.asm	/^f0105d69:	e8 3c d9 ff ff       	call   f01036aa <cprintf>$/;"	l
f0105d6e	obj/kern/kernel.asm	/^f0105d6e:	83 c4 20             	add    $0x20,%esp$/;"	l
f0105d71	obj/kern/kernel.asm	/^f0105d71:	eb 12                	jmp    f0105d85 <spin_unlock+0xa8>$/;"	l
f0105d73	obj/kern/kernel.asm	/^f0105d73:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105d76	obj/kern/kernel.asm	/^f0105d76:	ff 36                	pushl  (%esi)$/;"	l
f0105d78	obj/kern/kernel.asm	/^f0105d78:	68 cf 7d 10 f0       	push   $0xf0107dcf$/;"	l
f0105d7d	obj/kern/kernel.asm	/^f0105d7d:	e8 28 d9 ff ff       	call   f01036aa <cprintf>$/;"	l
f0105d82	obj/kern/kernel.asm	/^f0105d82:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105d85	obj/kern/kernel.asm	/^f0105d85:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0105d88	obj/kern/kernel.asm	/^f0105d88:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f0105d8b	obj/kern/kernel.asm	/^f0105d8b:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105d8d	obj/kern/kernel.asm	/^f0105d8d:	74 08                	je     f0105d97 <spin_unlock+0xba>$/;"	l
f0105d8f	obj/kern/kernel.asm	/^f0105d8f:	89 de                	mov    %ebx,%esi$/;"	l
f0105d91	obj/kern/kernel.asm	/^f0105d91:	8b 03                	mov    (%ebx),%eax$/;"	l
f0105d93	obj/kern/kernel.asm	/^f0105d93:	85 c0                	test   %eax,%eax$/;"	l
f0105d95	obj/kern/kernel.asm	/^f0105d95:	75 a4                	jne    f0105d3b <spin_unlock+0x5e>$/;"	l
f0105d97	obj/kern/kernel.asm	/^f0105d97:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105d9a	obj/kern/kernel.asm	/^f0105d9a:	68 d7 7d 10 f0       	push   $0xf0107dd7$/;"	l
f0105d9f	obj/kern/kernel.asm	/^f0105d9f:	6a 67                	push   $0x67$/;"	l
f0105da1	obj/kern/kernel.asm	/^f0105da1:	68 a8 7d 10 f0       	push   $0xf0107da8$/;"	l
f0105da6	obj/kern/kernel.asm	/^f0105da6:	e8 95 a2 ff ff       	call   f0100040 <_panic>$/;"	l
f0105dab	obj/kern/kernel.asm	/^f0105dab:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)$/;"	l
f0105db2	obj/kern/kernel.asm	/^f0105db2:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)$/;"	l
f0105db9	obj/kern/kernel.asm	/^f0105db9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105dbe	obj/kern/kernel.asm	/^f0105dbe:	f0 87 06             	lock xchg %eax,(%esi)$/;"	l
f0105dc1	obj/kern/kernel.asm	/^f0105dc1:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105dc4	obj/kern/kernel.asm	/^f0105dc4:	5b                   	pop    %ebx$/;"	l
f0105dc5	obj/kern/kernel.asm	/^f0105dc5:	5e                   	pop    %esi$/;"	l
f0105dc6	obj/kern/kernel.asm	/^f0105dc6:	5f                   	pop    %edi$/;"	l
f0105dc7	obj/kern/kernel.asm	/^f0105dc7:	5d                   	pop    %ebp$/;"	l
f0105dc8	obj/kern/kernel.asm	/^f0105dc8:	c3                   	ret    $/;"	l
f0105dc9	obj/kern/kernel.asm	/^f0105dc9:	66 90                	xchg   %ax,%ax$/;"	l
f0105dcb	obj/kern/kernel.asm	/^f0105dcb:	66 90                	xchg   %ax,%ax$/;"	l
f0105dcd	obj/kern/kernel.asm	/^f0105dcd:	66 90                	xchg   %ax,%ax$/;"	l
f0105dcf	obj/kern/kernel.asm	/^f0105dcf:	90                   	nop$/;"	l
f0105dd0	obj/kern/kernel.asm	/^f0105dd0 <__udivdi3>:$/;"	l
f0105dd0	obj/kern/kernel.asm	/^f0105dd0:	55                   	push   %ebp$/;"	l
f0105dd1	obj/kern/kernel.asm	/^f0105dd1:	57                   	push   %edi$/;"	l
f0105dd2	obj/kern/kernel.asm	/^f0105dd2:	56                   	push   %esi$/;"	l
f0105dd3	obj/kern/kernel.asm	/^f0105dd3:	53                   	push   %ebx$/;"	l
f0105dd4	obj/kern/kernel.asm	/^f0105dd4:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105dd7	obj/kern/kernel.asm	/^f0105dd7:	8b 74 24 3c          	mov    0x3c(%esp),%esi$/;"	l
f0105ddb	obj/kern/kernel.asm	/^f0105ddb:	8b 5c 24 30          	mov    0x30(%esp),%ebx$/;"	l
f0105ddf	obj/kern/kernel.asm	/^f0105ddf:	8b 4c 24 34          	mov    0x34(%esp),%ecx$/;"	l
f0105de3	obj/kern/kernel.asm	/^f0105de3:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0105de7	obj/kern/kernel.asm	/^f0105de7:	85 f6                	test   %esi,%esi$/;"	l
f0105de9	obj/kern/kernel.asm	/^f0105de9:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105ded	obj/kern/kernel.asm	/^f0105ded:	89 ca                	mov    %ecx,%edx$/;"	l
f0105def	obj/kern/kernel.asm	/^f0105def:	89 f8                	mov    %edi,%eax$/;"	l
f0105df1	obj/kern/kernel.asm	/^f0105df1:	75 3d                	jne    f0105e30 <__udivdi3+0x60>$/;"	l
f0105df3	obj/kern/kernel.asm	/^f0105df3:	39 cf                	cmp    %ecx,%edi$/;"	l
f0105df5	obj/kern/kernel.asm	/^f0105df5:	0f 87 c5 00 00 00    	ja     f0105ec0 <__udivdi3+0xf0>$/;"	l
f0105dfb	obj/kern/kernel.asm	/^f0105dfb:	85 ff                	test   %edi,%edi$/;"	l
f0105dfd	obj/kern/kernel.asm	/^f0105dfd:	89 fd                	mov    %edi,%ebp$/;"	l
f0105dff	obj/kern/kernel.asm	/^f0105dff:	75 0b                	jne    f0105e0c <__udivdi3+0x3c>$/;"	l
f0105e01	obj/kern/kernel.asm	/^f0105e01:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0105e06	obj/kern/kernel.asm	/^f0105e06:	31 d2                	xor    %edx,%edx$/;"	l
f0105e08	obj/kern/kernel.asm	/^f0105e08:	f7 f7                	div    %edi$/;"	l
f0105e0a	obj/kern/kernel.asm	/^f0105e0a:	89 c5                	mov    %eax,%ebp$/;"	l
f0105e0c	obj/kern/kernel.asm	/^f0105e0c:	89 c8                	mov    %ecx,%eax$/;"	l
f0105e0e	obj/kern/kernel.asm	/^f0105e0e:	31 d2                	xor    %edx,%edx$/;"	l
f0105e10	obj/kern/kernel.asm	/^f0105e10:	f7 f5                	div    %ebp$/;"	l
f0105e12	obj/kern/kernel.asm	/^f0105e12:	89 c1                	mov    %eax,%ecx$/;"	l
f0105e14	obj/kern/kernel.asm	/^f0105e14:	89 d8                	mov    %ebx,%eax$/;"	l
f0105e16	obj/kern/kernel.asm	/^f0105e16:	89 cf                	mov    %ecx,%edi$/;"	l
f0105e18	obj/kern/kernel.asm	/^f0105e18:	f7 f5                	div    %ebp$/;"	l
f0105e1a	obj/kern/kernel.asm	/^f0105e1a:	89 c3                	mov    %eax,%ebx$/;"	l
f0105e1c	obj/kern/kernel.asm	/^f0105e1c:	89 d8                	mov    %ebx,%eax$/;"	l
f0105e1e	obj/kern/kernel.asm	/^f0105e1e:	89 fa                	mov    %edi,%edx$/;"	l
f0105e20	obj/kern/kernel.asm	/^f0105e20:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105e23	obj/kern/kernel.asm	/^f0105e23:	5b                   	pop    %ebx$/;"	l
f0105e24	obj/kern/kernel.asm	/^f0105e24:	5e                   	pop    %esi$/;"	l
f0105e25	obj/kern/kernel.asm	/^f0105e25:	5f                   	pop    %edi$/;"	l
f0105e26	obj/kern/kernel.asm	/^f0105e26:	5d                   	pop    %ebp$/;"	l
f0105e27	obj/kern/kernel.asm	/^f0105e27:	c3                   	ret    $/;"	l
f0105e28	obj/kern/kernel.asm	/^f0105e28:	90                   	nop$/;"	l
f0105e29	obj/kern/kernel.asm	/^f0105e29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0105e30	obj/kern/kernel.asm	/^f0105e30:	39 ce                	cmp    %ecx,%esi$/;"	l
f0105e32	obj/kern/kernel.asm	/^f0105e32:	77 74                	ja     f0105ea8 <__udivdi3+0xd8>$/;"	l
f0105e34	obj/kern/kernel.asm	/^f0105e34:	0f bd fe             	bsr    %esi,%edi$/;"	l
f0105e37	obj/kern/kernel.asm	/^f0105e37:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f0105e3a	obj/kern/kernel.asm	/^f0105e3a:	0f 84 98 00 00 00    	je     f0105ed8 <__udivdi3+0x108>$/;"	l
f0105e40	obj/kern/kernel.asm	/^f0105e40:	bb 20 00 00 00       	mov    $0x20,%ebx$/;"	l
f0105e45	obj/kern/kernel.asm	/^f0105e45:	89 f9                	mov    %edi,%ecx$/;"	l
f0105e47	obj/kern/kernel.asm	/^f0105e47:	89 c5                	mov    %eax,%ebp$/;"	l
f0105e49	obj/kern/kernel.asm	/^f0105e49:	29 fb                	sub    %edi,%ebx$/;"	l
f0105e4b	obj/kern/kernel.asm	/^f0105e4b:	d3 e6                	shl    %cl,%esi$/;"	d
f0105e4d	obj/kern/kernel.asm	/^f0105e4d:	89 d9                	mov    %ebx,%ecx$/;"	l
f0105e4f	obj/kern/kernel.asm	/^f0105e4f:	d3 ed                	shr    %cl,%ebp$/;"	d
f0105e51	obj/kern/kernel.asm	/^f0105e51:	89 f9                	mov    %edi,%ecx$/;"	l
f0105e53	obj/kern/kernel.asm	/^f0105e53:	d3 e0                	shl    %cl,%eax$/;"	d
f0105e55	obj/kern/kernel.asm	/^f0105e55:	09 ee                	or     %ebp,%esi$/;"	l
f0105e57	obj/kern/kernel.asm	/^f0105e57:	89 d9                	mov    %ebx,%ecx$/;"	l
f0105e59	obj/kern/kernel.asm	/^f0105e59:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105e5d	obj/kern/kernel.asm	/^f0105e5d:	89 d5                	mov    %edx,%ebp$/;"	l
f0105e5f	obj/kern/kernel.asm	/^f0105e5f:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0105e63	obj/kern/kernel.asm	/^f0105e63:	d3 ed                	shr    %cl,%ebp$/;"	d
f0105e65	obj/kern/kernel.asm	/^f0105e65:	89 f9                	mov    %edi,%ecx$/;"	l
f0105e67	obj/kern/kernel.asm	/^f0105e67:	d3 e2                	shl    %cl,%edx$/;"	d
f0105e69	obj/kern/kernel.asm	/^f0105e69:	89 d9                	mov    %ebx,%ecx$/;"	l
f0105e6b	obj/kern/kernel.asm	/^f0105e6b:	d3 e8                	shr    %cl,%eax$/;"	d
f0105e6d	obj/kern/kernel.asm	/^f0105e6d:	09 c2                	or     %eax,%edx$/;"	l
f0105e6f	obj/kern/kernel.asm	/^f0105e6f:	89 d0                	mov    %edx,%eax$/;"	l
f0105e71	obj/kern/kernel.asm	/^f0105e71:	89 ea                	mov    %ebp,%edx$/;"	l
f0105e73	obj/kern/kernel.asm	/^f0105e73:	f7 f6                	div    %esi$/;"	l
f0105e75	obj/kern/kernel.asm	/^f0105e75:	89 d5                	mov    %edx,%ebp$/;"	l
f0105e77	obj/kern/kernel.asm	/^f0105e77:	89 c3                	mov    %eax,%ebx$/;"	l
f0105e79	obj/kern/kernel.asm	/^f0105e79:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f0105e7d	obj/kern/kernel.asm	/^f0105e7d:	39 d5                	cmp    %edx,%ebp$/;"	l
f0105e7f	obj/kern/kernel.asm	/^f0105e7f:	72 10                	jb     f0105e91 <__udivdi3+0xc1>$/;"	l
f0105e81	obj/kern/kernel.asm	/^f0105e81:	8b 74 24 08          	mov    0x8(%esp),%esi$/;"	l
f0105e85	obj/kern/kernel.asm	/^f0105e85:	89 f9                	mov    %edi,%ecx$/;"	l
f0105e87	obj/kern/kernel.asm	/^f0105e87:	d3 e6                	shl    %cl,%esi$/;"	d
f0105e89	obj/kern/kernel.asm	/^f0105e89:	39 c6                	cmp    %eax,%esi$/;"	l
f0105e8b	obj/kern/kernel.asm	/^f0105e8b:	73 07                	jae    f0105e94 <__udivdi3+0xc4>$/;"	l
f0105e8d	obj/kern/kernel.asm	/^f0105e8d:	39 d5                	cmp    %edx,%ebp$/;"	l
f0105e8f	obj/kern/kernel.asm	/^f0105e8f:	75 03                	jne    f0105e94 <__udivdi3+0xc4>$/;"	l
f0105e91	obj/kern/kernel.asm	/^f0105e91:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105e94	obj/kern/kernel.asm	/^f0105e94:	31 ff                	xor    %edi,%edi$/;"	l
f0105e96	obj/kern/kernel.asm	/^f0105e96:	89 d8                	mov    %ebx,%eax$/;"	l
f0105e98	obj/kern/kernel.asm	/^f0105e98:	89 fa                	mov    %edi,%edx$/;"	l
f0105e9a	obj/kern/kernel.asm	/^f0105e9a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105e9d	obj/kern/kernel.asm	/^f0105e9d:	5b                   	pop    %ebx$/;"	l
f0105e9e	obj/kern/kernel.asm	/^f0105e9e:	5e                   	pop    %esi$/;"	l
f0105e9f	obj/kern/kernel.asm	/^f0105e9f:	5f                   	pop    %edi$/;"	l
f0105ea0	obj/kern/kernel.asm	/^f0105ea0:	5d                   	pop    %ebp$/;"	l
f0105ea1	obj/kern/kernel.asm	/^f0105ea1:	c3                   	ret    $/;"	l
f0105ea2	obj/kern/kernel.asm	/^f0105ea2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0105ea8	obj/kern/kernel.asm	/^f0105ea8:	31 ff                	xor    %edi,%edi$/;"	l
f0105eaa	obj/kern/kernel.asm	/^f0105eaa:	31 db                	xor    %ebx,%ebx$/;"	l
f0105eac	obj/kern/kernel.asm	/^f0105eac:	89 d8                	mov    %ebx,%eax$/;"	l
f0105eae	obj/kern/kernel.asm	/^f0105eae:	89 fa                	mov    %edi,%edx$/;"	l
f0105eb0	obj/kern/kernel.asm	/^f0105eb0:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105eb3	obj/kern/kernel.asm	/^f0105eb3:	5b                   	pop    %ebx$/;"	l
f0105eb4	obj/kern/kernel.asm	/^f0105eb4:	5e                   	pop    %esi$/;"	l
f0105eb5	obj/kern/kernel.asm	/^f0105eb5:	5f                   	pop    %edi$/;"	l
f0105eb6	obj/kern/kernel.asm	/^f0105eb6:	5d                   	pop    %ebp$/;"	l
f0105eb7	obj/kern/kernel.asm	/^f0105eb7:	c3                   	ret    $/;"	l
f0105eb8	obj/kern/kernel.asm	/^f0105eb8:	90                   	nop$/;"	l
f0105eb9	obj/kern/kernel.asm	/^f0105eb9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0105ec0	obj/kern/kernel.asm	/^f0105ec0:	89 d8                	mov    %ebx,%eax$/;"	l
f0105ec2	obj/kern/kernel.asm	/^f0105ec2:	f7 f7                	div    %edi$/;"	l
f0105ec4	obj/kern/kernel.asm	/^f0105ec4:	31 ff                	xor    %edi,%edi$/;"	l
f0105ec6	obj/kern/kernel.asm	/^f0105ec6:	89 c3                	mov    %eax,%ebx$/;"	l
f0105ec8	obj/kern/kernel.asm	/^f0105ec8:	89 d8                	mov    %ebx,%eax$/;"	l
f0105eca	obj/kern/kernel.asm	/^f0105eca:	89 fa                	mov    %edi,%edx$/;"	l
f0105ecc	obj/kern/kernel.asm	/^f0105ecc:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105ecf	obj/kern/kernel.asm	/^f0105ecf:	5b                   	pop    %ebx$/;"	l
f0105ed0	obj/kern/kernel.asm	/^f0105ed0:	5e                   	pop    %esi$/;"	l
f0105ed1	obj/kern/kernel.asm	/^f0105ed1:	5f                   	pop    %edi$/;"	l
f0105ed2	obj/kern/kernel.asm	/^f0105ed2:	5d                   	pop    %ebp$/;"	l
f0105ed3	obj/kern/kernel.asm	/^f0105ed3:	c3                   	ret    $/;"	l
f0105ed4	obj/kern/kernel.asm	/^f0105ed4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0105ed8	obj/kern/kernel.asm	/^f0105ed8:	39 ce                	cmp    %ecx,%esi$/;"	l
f0105eda	obj/kern/kernel.asm	/^f0105eda:	72 0c                	jb     f0105ee8 <__udivdi3+0x118>$/;"	l
f0105edc	obj/kern/kernel.asm	/^f0105edc:	31 db                	xor    %ebx,%ebx$/;"	l
f0105ede	obj/kern/kernel.asm	/^f0105ede:	3b 44 24 08          	cmp    0x8(%esp),%eax$/;"	l
f0105ee2	obj/kern/kernel.asm	/^f0105ee2:	0f 87 34 ff ff ff    	ja     f0105e1c <__udivdi3+0x4c>$/;"	l
f0105ee8	obj/kern/kernel.asm	/^f0105ee8:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f0105eed	obj/kern/kernel.asm	/^f0105eed:	e9 2a ff ff ff       	jmp    f0105e1c <__udivdi3+0x4c>$/;"	l
f0105ef2	obj/kern/kernel.asm	/^f0105ef2:	66 90                	xchg   %ax,%ax$/;"	l
f0105ef4	obj/kern/kernel.asm	/^f0105ef4:	66 90                	xchg   %ax,%ax$/;"	l
f0105ef6	obj/kern/kernel.asm	/^f0105ef6:	66 90                	xchg   %ax,%ax$/;"	l
f0105ef8	obj/kern/kernel.asm	/^f0105ef8:	66 90                	xchg   %ax,%ax$/;"	l
f0105efa	obj/kern/kernel.asm	/^f0105efa:	66 90                	xchg   %ax,%ax$/;"	l
f0105efc	obj/kern/kernel.asm	/^f0105efc:	66 90                	xchg   %ax,%ax$/;"	l
f0105efe	obj/kern/kernel.asm	/^f0105efe:	66 90                	xchg   %ax,%ax$/;"	l
f0105f00	obj/kern/kernel.asm	/^f0105f00 <__umoddi3>:$/;"	l
f0105f00	obj/kern/kernel.asm	/^f0105f00:	55                   	push   %ebp$/;"	l
f0105f01	obj/kern/kernel.asm	/^f0105f01:	57                   	push   %edi$/;"	l
f0105f02	obj/kern/kernel.asm	/^f0105f02:	56                   	push   %esi$/;"	l
f0105f03	obj/kern/kernel.asm	/^f0105f03:	53                   	push   %ebx$/;"	l
f0105f04	obj/kern/kernel.asm	/^f0105f04:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105f07	obj/kern/kernel.asm	/^f0105f07:	8b 54 24 3c          	mov    0x3c(%esp),%edx$/;"	l
f0105f0b	obj/kern/kernel.asm	/^f0105f0b:	8b 4c 24 30          	mov    0x30(%esp),%ecx$/;"	l
f0105f0f	obj/kern/kernel.asm	/^f0105f0f:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f0105f13	obj/kern/kernel.asm	/^f0105f13:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0105f17	obj/kern/kernel.asm	/^f0105f17:	85 d2                	test   %edx,%edx$/;"	l
f0105f19	obj/kern/kernel.asm	/^f0105f19:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0105f1d	obj/kern/kernel.asm	/^f0105f1d:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0105f21	obj/kern/kernel.asm	/^f0105f21:	89 f3                	mov    %esi,%ebx$/;"	l
f0105f23	obj/kern/kernel.asm	/^f0105f23:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0105f26	obj/kern/kernel.asm	/^f0105f26:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105f2a	obj/kern/kernel.asm	/^f0105f2a:	75 1c                	jne    f0105f48 <__umoddi3+0x48>$/;"	l
f0105f2c	obj/kern/kernel.asm	/^f0105f2c:	39 f7                	cmp    %esi,%edi$/;"	l
f0105f2e	obj/kern/kernel.asm	/^f0105f2e:	76 50                	jbe    f0105f80 <__umoddi3+0x80>$/;"	l
f0105f30	obj/kern/kernel.asm	/^f0105f30:	89 c8                	mov    %ecx,%eax$/;"	l
f0105f32	obj/kern/kernel.asm	/^f0105f32:	89 f2                	mov    %esi,%edx$/;"	l
f0105f34	obj/kern/kernel.asm	/^f0105f34:	f7 f7                	div    %edi$/;"	l
f0105f36	obj/kern/kernel.asm	/^f0105f36:	89 d0                	mov    %edx,%eax$/;"	l
f0105f38	obj/kern/kernel.asm	/^f0105f38:	31 d2                	xor    %edx,%edx$/;"	l
f0105f3a	obj/kern/kernel.asm	/^f0105f3a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105f3d	obj/kern/kernel.asm	/^f0105f3d:	5b                   	pop    %ebx$/;"	l
f0105f3e	obj/kern/kernel.asm	/^f0105f3e:	5e                   	pop    %esi$/;"	l
f0105f3f	obj/kern/kernel.asm	/^f0105f3f:	5f                   	pop    %edi$/;"	l
f0105f40	obj/kern/kernel.asm	/^f0105f40:	5d                   	pop    %ebp$/;"	l
f0105f41	obj/kern/kernel.asm	/^f0105f41:	c3                   	ret    $/;"	l
f0105f42	obj/kern/kernel.asm	/^f0105f42:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0105f48	obj/kern/kernel.asm	/^f0105f48:	39 f2                	cmp    %esi,%edx$/;"	l
f0105f4a	obj/kern/kernel.asm	/^f0105f4a:	89 d0                	mov    %edx,%eax$/;"	l
f0105f4c	obj/kern/kernel.asm	/^f0105f4c:	77 52                	ja     f0105fa0 <__umoddi3+0xa0>$/;"	l
f0105f4e	obj/kern/kernel.asm	/^f0105f4e:	0f bd ea             	bsr    %edx,%ebp$/;"	l
f0105f51	obj/kern/kernel.asm	/^f0105f51:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0105f54	obj/kern/kernel.asm	/^f0105f54:	75 5a                	jne    f0105fb0 <__umoddi3+0xb0>$/;"	l
f0105f56	obj/kern/kernel.asm	/^f0105f56:	3b 54 24 04          	cmp    0x4(%esp),%edx$/;"	l
f0105f5a	obj/kern/kernel.asm	/^f0105f5a:	0f 82 e0 00 00 00    	jb     f0106040 <__umoddi3+0x140>$/;"	l
f0105f60	obj/kern/kernel.asm	/^f0105f60:	39 0c 24             	cmp    %ecx,(%esp)$/;"	l
f0105f63	obj/kern/kernel.asm	/^f0105f63:	0f 86 d7 00 00 00    	jbe    f0106040 <__umoddi3+0x140>$/;"	l
f0105f69	obj/kern/kernel.asm	/^f0105f69:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0105f6d	obj/kern/kernel.asm	/^f0105f6d:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0105f71	obj/kern/kernel.asm	/^f0105f71:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105f74	obj/kern/kernel.asm	/^f0105f74:	5b                   	pop    %ebx$/;"	l
f0105f75	obj/kern/kernel.asm	/^f0105f75:	5e                   	pop    %esi$/;"	l
f0105f76	obj/kern/kernel.asm	/^f0105f76:	5f                   	pop    %edi$/;"	l
f0105f77	obj/kern/kernel.asm	/^f0105f77:	5d                   	pop    %ebp$/;"	l
f0105f78	obj/kern/kernel.asm	/^f0105f78:	c3                   	ret    $/;"	l
f0105f79	obj/kern/kernel.asm	/^f0105f79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0105f80	obj/kern/kernel.asm	/^f0105f80:	85 ff                	test   %edi,%edi$/;"	l
f0105f82	obj/kern/kernel.asm	/^f0105f82:	89 fd                	mov    %edi,%ebp$/;"	l
f0105f84	obj/kern/kernel.asm	/^f0105f84:	75 0b                	jne    f0105f91 <__umoddi3+0x91>$/;"	l
f0105f86	obj/kern/kernel.asm	/^f0105f86:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0105f8b	obj/kern/kernel.asm	/^f0105f8b:	31 d2                	xor    %edx,%edx$/;"	l
f0105f8d	obj/kern/kernel.asm	/^f0105f8d:	f7 f7                	div    %edi$/;"	l
f0105f8f	obj/kern/kernel.asm	/^f0105f8f:	89 c5                	mov    %eax,%ebp$/;"	l
f0105f91	obj/kern/kernel.asm	/^f0105f91:	89 f0                	mov    %esi,%eax$/;"	l
f0105f93	obj/kern/kernel.asm	/^f0105f93:	31 d2                	xor    %edx,%edx$/;"	l
f0105f95	obj/kern/kernel.asm	/^f0105f95:	f7 f5                	div    %ebp$/;"	l
f0105f97	obj/kern/kernel.asm	/^f0105f97:	89 c8                	mov    %ecx,%eax$/;"	l
f0105f99	obj/kern/kernel.asm	/^f0105f99:	f7 f5                	div    %ebp$/;"	l
f0105f9b	obj/kern/kernel.asm	/^f0105f9b:	89 d0                	mov    %edx,%eax$/;"	l
f0105f9d	obj/kern/kernel.asm	/^f0105f9d:	eb 99                	jmp    f0105f38 <__umoddi3+0x38>$/;"	l
f0105f9f	obj/kern/kernel.asm	/^f0105f9f:	90                   	nop$/;"	l
f0105fa0	obj/kern/kernel.asm	/^f0105fa0:	89 c8                	mov    %ecx,%eax$/;"	l
f0105fa2	obj/kern/kernel.asm	/^f0105fa2:	89 f2                	mov    %esi,%edx$/;"	l
f0105fa4	obj/kern/kernel.asm	/^f0105fa4:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105fa7	obj/kern/kernel.asm	/^f0105fa7:	5b                   	pop    %ebx$/;"	l
f0105fa8	obj/kern/kernel.asm	/^f0105fa8:	5e                   	pop    %esi$/;"	l
f0105fa9	obj/kern/kernel.asm	/^f0105fa9:	5f                   	pop    %edi$/;"	l
f0105faa	obj/kern/kernel.asm	/^f0105faa:	5d                   	pop    %ebp$/;"	l
f0105fab	obj/kern/kernel.asm	/^f0105fab:	c3                   	ret    $/;"	l
f0105fac	obj/kern/kernel.asm	/^f0105fac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0105fb0	obj/kern/kernel.asm	/^f0105fb0:	8b 34 24             	mov    (%esp),%esi$/;"	l
f0105fb3	obj/kern/kernel.asm	/^f0105fb3:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f0105fb8	obj/kern/kernel.asm	/^f0105fb8:	89 e9                	mov    %ebp,%ecx$/;"	l
f0105fba	obj/kern/kernel.asm	/^f0105fba:	29 ef                	sub    %ebp,%edi$/;"	l
f0105fbc	obj/kern/kernel.asm	/^f0105fbc:	d3 e0                	shl    %cl,%eax$/;"	d
f0105fbe	obj/kern/kernel.asm	/^f0105fbe:	89 f9                	mov    %edi,%ecx$/;"	l
f0105fc0	obj/kern/kernel.asm	/^f0105fc0:	89 f2                	mov    %esi,%edx$/;"	l
f0105fc2	obj/kern/kernel.asm	/^f0105fc2:	d3 ea                	shr    %cl,%edx$/;"	d
f0105fc4	obj/kern/kernel.asm	/^f0105fc4:	89 e9                	mov    %ebp,%ecx$/;"	l
f0105fc6	obj/kern/kernel.asm	/^f0105fc6:	09 c2                	or     %eax,%edx$/;"	l
f0105fc8	obj/kern/kernel.asm	/^f0105fc8:	89 d8                	mov    %ebx,%eax$/;"	l
f0105fca	obj/kern/kernel.asm	/^f0105fca:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0105fcd	obj/kern/kernel.asm	/^f0105fcd:	89 f2                	mov    %esi,%edx$/;"	l
f0105fcf	obj/kern/kernel.asm	/^f0105fcf:	d3 e2                	shl    %cl,%edx$/;"	d
f0105fd1	obj/kern/kernel.asm	/^f0105fd1:	89 f9                	mov    %edi,%ecx$/;"	l
f0105fd3	obj/kern/kernel.asm	/^f0105fd3:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105fd7	obj/kern/kernel.asm	/^f0105fd7:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f0105fdb	obj/kern/kernel.asm	/^f0105fdb:	d3 e8                	shr    %cl,%eax$/;"	d
f0105fdd	obj/kern/kernel.asm	/^f0105fdd:	89 e9                	mov    %ebp,%ecx$/;"	l
f0105fdf	obj/kern/kernel.asm	/^f0105fdf:	89 c6                	mov    %eax,%esi$/;"	l
f0105fe1	obj/kern/kernel.asm	/^f0105fe1:	d3 e3                	shl    %cl,%ebx$/;"	d
f0105fe3	obj/kern/kernel.asm	/^f0105fe3:	89 f9                	mov    %edi,%ecx$/;"	l
f0105fe5	obj/kern/kernel.asm	/^f0105fe5:	89 d0                	mov    %edx,%eax$/;"	l
f0105fe7	obj/kern/kernel.asm	/^f0105fe7:	d3 e8                	shr    %cl,%eax$/;"	d
f0105fe9	obj/kern/kernel.asm	/^f0105fe9:	89 e9                	mov    %ebp,%ecx$/;"	l
f0105feb	obj/kern/kernel.asm	/^f0105feb:	09 d8                	or     %ebx,%eax$/;"	l
f0105fed	obj/kern/kernel.asm	/^f0105fed:	89 d3                	mov    %edx,%ebx$/;"	l
f0105fef	obj/kern/kernel.asm	/^f0105fef:	89 f2                	mov    %esi,%edx$/;"	l
f0105ff1	obj/kern/kernel.asm	/^f0105ff1:	f7 34 24             	divl   (%esp)$/;"	l
f0105ff4	obj/kern/kernel.asm	/^f0105ff4:	89 d6                	mov    %edx,%esi$/;"	l
f0105ff6	obj/kern/kernel.asm	/^f0105ff6:	d3 e3                	shl    %cl,%ebx$/;"	d
f0105ff8	obj/kern/kernel.asm	/^f0105ff8:	f7 64 24 04          	mull   0x4(%esp)$/;"	l
f0105ffc	obj/kern/kernel.asm	/^f0105ffc:	39 d6                	cmp    %edx,%esi$/;"	l
f0105ffe	obj/kern/kernel.asm	/^f0105ffe:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0106002	obj/kern/kernel.asm	/^f0106002:	89 d1                	mov    %edx,%ecx$/;"	l
f0106004	obj/kern/kernel.asm	/^f0106004:	89 c3                	mov    %eax,%ebx$/;"	l
f0106006	obj/kern/kernel.asm	/^f0106006:	72 08                	jb     f0106010 <__umoddi3+0x110>$/;"	l
f0106008	obj/kern/kernel.asm	/^f0106008:	75 11                	jne    f010601b <__umoddi3+0x11b>$/;"	l
f010600a	obj/kern/kernel.asm	/^f010600a:	39 44 24 08          	cmp    %eax,0x8(%esp)$/;"	l
f010600e	obj/kern/kernel.asm	/^f010600e:	73 0b                	jae    f010601b <__umoddi3+0x11b>$/;"	l
f0106010	obj/kern/kernel.asm	/^f0106010:	2b 44 24 04          	sub    0x4(%esp),%eax$/;"	l
f0106014	obj/kern/kernel.asm	/^f0106014:	1b 14 24             	sbb    (%esp),%edx$/;"	l
f0106017	obj/kern/kernel.asm	/^f0106017:	89 d1                	mov    %edx,%ecx$/;"	l
f0106019	obj/kern/kernel.asm	/^f0106019:	89 c3                	mov    %eax,%ebx$/;"	l
f010601b	obj/kern/kernel.asm	/^f010601b:	8b 54 24 08          	mov    0x8(%esp),%edx$/;"	l
f010601f	obj/kern/kernel.asm	/^f010601f:	29 da                	sub    %ebx,%edx$/;"	l
f0106021	obj/kern/kernel.asm	/^f0106021:	19 ce                	sbb    %ecx,%esi$/;"	l
f0106023	obj/kern/kernel.asm	/^f0106023:	89 f9                	mov    %edi,%ecx$/;"	l
f0106025	obj/kern/kernel.asm	/^f0106025:	89 f0                	mov    %esi,%eax$/;"	l
f0106027	obj/kern/kernel.asm	/^f0106027:	d3 e0                	shl    %cl,%eax$/;"	d
f0106029	obj/kern/kernel.asm	/^f0106029:	89 e9                	mov    %ebp,%ecx$/;"	l
f010602b	obj/kern/kernel.asm	/^f010602b:	d3 ea                	shr    %cl,%edx$/;"	d
f010602d	obj/kern/kernel.asm	/^f010602d:	89 e9                	mov    %ebp,%ecx$/;"	l
f010602f	obj/kern/kernel.asm	/^f010602f:	d3 ee                	shr    %cl,%esi$/;"	d
f0106031	obj/kern/kernel.asm	/^f0106031:	09 d0                	or     %edx,%eax$/;"	l
f0106033	obj/kern/kernel.asm	/^f0106033:	89 f2                	mov    %esi,%edx$/;"	l
f0106035	obj/kern/kernel.asm	/^f0106035:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106038	obj/kern/kernel.asm	/^f0106038:	5b                   	pop    %ebx$/;"	l
f0106039	obj/kern/kernel.asm	/^f0106039:	5e                   	pop    %esi$/;"	l
f010603a	obj/kern/kernel.asm	/^f010603a:	5f                   	pop    %edi$/;"	l
f010603b	obj/kern/kernel.asm	/^f010603b:	5d                   	pop    %ebp$/;"	l
f010603c	obj/kern/kernel.asm	/^f010603c:	c3                   	ret    $/;"	l
f010603d	obj/kern/kernel.asm	/^f010603d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106040	obj/kern/kernel.asm	/^f0106040:	29 f9                	sub    %edi,%ecx$/;"	l
f0106042	obj/kern/kernel.asm	/^f0106042:	19 d6                	sbb    %edx,%esi$/;"	l
f0106044	obj/kern/kernel.asm	/^f0106044:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0106048	obj/kern/kernel.asm	/^f0106048:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f010604c	obj/kern/kernel.asm	/^f010604c:	e9 18 ff ff ff       	jmp    f0105f69 <__umoddi3+0x69>$/;"	l
f_direct	inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File	access:public
f_indirect	inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File	access:public
f_name	inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File	access:public
f_pad	inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File	access:public
f_size	inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File	access:public
f_type	inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File	access:public
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon5
fd	lib/fprintf.c	/^	int fd;		\/\/ file descriptor$/;"	m	struct:printbuf	file:	access:public
fd	obj/fs/fs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/fs/fs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/cat.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/cat.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echo.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echo.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/icode.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^	fd = r;$/;"	d
fd	obj/user/init.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/init.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^	fd = r;$/;"	d
fd	obj/user/ls.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/ls.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/lsfd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/lsfd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/num.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/num.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = pfd[0];$/;"	d
fd	obj/user/primespipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sh.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^	fd = r;$/;"	d
fd	obj/user/spawnfaultio.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spawnfaultio.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnfaultio.asm	/^	fd = r;$/;"	d
fd	obj/user/spawnhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = r;$/;"	d
fd	obj/user/testfdsharing.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfdsharing.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfile.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfile.asm	/^	fd = (struct Fd*) (0xD0000000 + r*PGSIZE);$/;"	d
fd	obj/user/testfile.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testkbd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testkbd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = r;$/;"	d
fd	obj/user/testshell.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testshell.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testshell.asm	/^	fd = r;$/;"	d
fd2data	inc/fd.h	/^char*	fd2data(struct Fd *fd);$/;"	p	signature:(struct Fd *fd)
fd2data	lib/fd.c	/^fd2data(struct Fd *fd)$/;"	f	signature:(struct Fd *fd)
fd2num	inc/fd.h	/^int	fd2num(struct Fd *fd);$/;"	p	signature:(struct Fd *fd)
fd2num	lib/fd.c	/^fd2num(struct Fd *fd)$/;"	f	signature:(struct Fd *fd)
fd_alloc	inc/fd.h	/^int	fd_alloc(struct Fd **fd_store);$/;"	p	signature:(struct Fd **fd_store)
fd_alloc	lib/fd.c	/^fd_alloc(struct Fd **fd_store)$/;"	f	signature:(struct Fd **fd_store)
fd_close	inc/fd.h	/^int	fd_close(struct Fd *fd, bool must_exist);$/;"	p	signature:(struct Fd *fd, bool must_exist)
fd_close	lib/fd.c	/^fd_close(struct Fd *fd, bool must_exist)$/;"	f	signature:(struct Fd *fd, bool must_exist)
fd_dev_id	inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd	access:public
fd_file	inc/fd.h	/^		struct FdFile fd_file;$/;"	m	union:Fd::__anon9	typeref:struct:Fd::__anon9::FdFile	access:public
fd_lookup	inc/fd.h	/^int	fd_lookup(int fdnum, struct Fd **fd_store);$/;"	p	signature:(int fdnum, struct Fd **fd_store)
fd_lookup	lib/fd.c	/^fd_lookup(int fdnum, struct Fd **fd_store)$/;"	f	signature:(int fdnum, struct Fd **fd_store)
fd_offset	inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd	access:public
fd_omode	inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd	access:public
fdcopy	obj/user/testfile.asm	/^	fdcopy = *FVA;$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:	access:public
file_block_walk	fs/fs.c	/^file_block_walk(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)$/;"	f	file:	signature:(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)
file_create	fs/fs.c	/^file_create(const char *path, struct File **pf)$/;"	f	signature:(const char *path, struct File **pf)
file_create	fs/fs.h	/^int	file_create(const char *path, struct File **f);$/;"	p	signature:(const char *path, struct File **f)
file_flush	fs/fs.c	/^file_flush(struct File *f)$/;"	f	signature:(struct File *f)
file_flush	fs/fs.h	/^void	file_flush(struct File *f);$/;"	p	signature:(struct File *f)
file_free_block	fs/fs.c	/^file_free_block(struct File *f, uint32_t filebno)$/;"	f	file:	signature:(struct File *f, uint32_t filebno)
file_get_block	fs/fs.c	/^file_get_block(struct File *f, uint32_t filebno, char **blk)$/;"	f	signature:(struct File *f, uint32_t filebno, char **blk)
file_get_block	fs/fs.h	/^int	file_get_block(struct File *f, uint32_t file_blockno, char **pblk);$/;"	p	signature:(struct File *f, uint32_t file_blockno, char **pblk)
file_open	fs/fs.c	/^file_open(const char *path, struct File **pf)$/;"	f	signature:(const char *path, struct File **pf)
file_open	fs/fs.h	/^int	file_open(const char *path, struct File **f);$/;"	p	signature:(const char *path, struct File **f)
file_read	fs/fs.c	/^file_read(struct File *f, void *buf, size_t count, off_t offset)$/;"	f	signature:(struct File *f, void *buf, size_t count, off_t offset)
file_read	fs/fs.h	/^ssize_t	file_read(struct File *f, void *buf, size_t count, off_t offset);$/;"	p	signature:(struct File *f, void *buf, size_t count, off_t offset)
file_remove	fs/fs.h	/^int	file_remove(const char *path);$/;"	p	signature:(const char *path)
file_set_size	fs/fs.c	/^file_set_size(struct File *f, off_t newsize)$/;"	f	signature:(struct File *f, off_t newsize)
file_set_size	fs/fs.h	/^int	file_set_size(struct File *f, off_t newsize);$/;"	p	signature:(struct File *f, off_t newsize)
file_truncate_blocks	fs/fs.c	/^file_truncate_blocks(struct File *f, off_t newsize)$/;"	f	file:	signature:(struct File *f, off_t newsize)
file_write	fs/fs.c	/^file_write(struct File *f, const void *buf, size_t count, off_t offset)$/;"	f	signature:(struct File *f, const void *buf, size_t count, off_t offset)
file_write	fs/fs.h	/^int	file_write(struct File *f, const void *buf, size_t count, off_t offset);$/;"	p	signature:(struct File *f, const void *buf, size_t count, off_t offset)
fileid	obj/fs/fs.asm	/^	fileid = r;$/;"	d
fileno	gradelib.py	/^    def fileno(self):$/;"	f	access:public
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient	access:public
finishdir	fs/fsformat.c	/^finishdir(struct Dir *d)$/;"	f	signature:(struct Dir *d)
finishdisk	fs/fsformat.c	/^finishdisk(void)$/;"	f	signature:(void)
finishfile	fs/fsformat.c	/^finishfile(struct File *f, uint32_t start, uint32_t len)$/;"	f	signature:(struct File *f, uint32_t start, uint32_t len)
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flag	user/ls.c	/^int flag[256];$/;"	v
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:	access:public
flush	inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush	access:public
flush_block	fs/bc.c	/^flush_block(void *addr)$/;"	f	signature:(void *addr)
flush_block	fs/fs.h	/^void	flush_block(void *addr);$/;"	p	signature:(void *addr)
fork	inc/lib.h	/^envid_t	fork(void);$/;"	p	signature:(void)
fork	lib/fork.c	/^fork(void)$/;"	f	signature:(void)
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f	signature:(const char *cur, char branch)
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f	signature:(const char *cur)
forktree	user/forktree.c	/^void forktree(const char *cur);$/;"	p	file:	signature:(const char *cur)
fprintf	inc/stdio.h	/^int	fprintf(int fd, const char *fmt, ...);$/;"	p	signature:(int fd, const char *fmt, ...)
fprintf	lib/fprintf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f	signature:(int fd, const char *fmt, ...)
free_block	fs/fs.c	/^free_block(uint32_t blockno)$/;"	f	signature:(uint32_t blockno)
fs_init	fs/fs.c	/^fs_init(void)$/;"	f	signature:(void)
fs_init	fs/fs.h	/^void	fs_init(void);$/;"	p	signature:(void)
fs_sync	fs/fs.c	/^fs_sync(void)$/;"	f	signature:(void)
fs_sync	fs/fs.h	/^void	fs_sync(void);$/;"	p	signature:(void)
fs_test	fs/fs.h	/^void	fs_test(void);$/;"	p	signature:(void)
fs_test	fs/test.c	/^fs_test(void)$/;"	f	signature:(void)
fsenv	obj/fs/fs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/cat.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echo.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/icode.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/init.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/ls.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/lsfd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/num.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primespipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sh.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spawnfaultio.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spawnhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfdsharing.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^	fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testkbd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpteshare.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testshell.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fshandler	fs/serv.c	/^typedef int (*fshandler)(envid_t envid, union Fsipc *req);$/;"	t	file:
fsipc	lib/file.c	/^fsipc(unsigned type, void *dstva)$/;"	f	file:	signature:(unsigned type, void *dstva)
fsipcbuf	lib/file.c	/^union Fsipc fsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Fsipc
fsreq	fs/serv.c	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	v	typeref:union:Fsipc
fstat	inc/lib.h	/^int	fstat(int fd, struct Stat *statbuf);$/;"	p	signature:(int fd, struct Stat *statbuf)
fstat	lib/fd.c	/^fstat(int fdnum, struct Stat *stat)$/;"	f	signature:(int fdnum, struct Stat *stat)
ftruncate	inc/lib.h	/^int	ftruncate(int fd, off_t size);$/;"	p	signature:(int fd, off_t size)
ftruncate	lib/fd.c	/^ftruncate(int fdnum, off_t newsize)$/;"	f	signature:(int fdnum, off_t newsize)
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
gen_primes	grade-lab5	/^def gen_primes(n):$/;"	f	access:public
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:	signature:(uint32_t pcs[])
get_current_test	gradelib.py	/^def get_current_test():$/;"	f	access:public
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f	access:public
getchar	inc/lib.h	/^int	getchar(void);$/;"	p	signature:(void)
getchar	inc/stdio.h	/^int	getchar(void);$/;"	p	signature:(void)
getchar	kern/console.c	/^getchar(void)$/;"	f	signature:(void)
getchar	lib/console.c	/^getchar(void)$/;"	f	signature:(void)
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
gettoken	user/sh.c	/^gettoken(char *s, char **p1)$/;"	f	signature:(char *s, char **p1)
gettoken	user/sh.c	/^int gettoken(char *s, char **token);$/;"	p	file:	signature:(char *s, char **token)
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line	access:public
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f	access:public
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient	access:public
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f	signature:(struct UTrapframe *utf)
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f	signature:(struct UTrapframe *utf)
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f	signature:(struct UTrapframe *utf)
handlers	fs/serv.c	/^fshandler handlers[] = {$/;"	v
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:	signature:(struct spinlock *lock)
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i	obj/user/sh.asm	/^	i = 0;$/;"	d
i	obj/user/testkbd.asm	/^	i = 0;$/;"	d
i	obj/user/testpipe.asm	/^		i = readn(p[0], buf, sizeof buf-1);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:	signature:(void)
i386_init	kern/init.c	/^i386_init(void)$/;"	f	signature:(void)
id	inc/fd.h	/^	int id;$/;"	m	struct:FdFile	access:public
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
ide_probe_disk1	fs/fs.h	/^bool	ide_probe_disk1(void);$/;"	p	signature:(void)
ide_probe_disk1	fs/ide.c	/^ide_probe_disk1(void)$/;"	f	signature:(void)
ide_read	fs/fs.h	/^int	ide_read(uint32_t secno, void *dst, size_t nsecs);$/;"	p	signature:(uint32_t secno, void *dst, size_t nsecs)
ide_read	fs/ide.c	/^ide_read(uint32_t secno, void *dst, size_t nsecs)$/;"	f	signature:(uint32_t secno, void *dst, size_t nsecs)
ide_set_disk	fs/fs.h	/^void	ide_set_disk(int diskno);$/;"	p	signature:(int diskno)
ide_set_disk	fs/ide.c	/^ide_set_disk(int d)$/;"	f	signature:(int d)
ide_set_partition	fs/fs.h	/^void	ide_set_partition(uint32_t first_sect, uint32_t nsect);$/;"	p	signature:(uint32_t first_sect, uint32_t nsect)
ide_wait_ready	fs/ide.c	/^ide_wait_ready(bool check_error)$/;"	f	file:	signature:(bool check_error)
ide_write	fs/fs.h	/^int	ide_write(uint32_t secno, const void *src, size_t nsecs);$/;"	p	signature:(uint32_t secno, const void *src, size_t nsecs)
ide_write	fs/ide.c	/^ide_write(uint32_t secno, const void *src, size_t nsecs)$/;"	f	signature:(uint32_t secno, const void *src, size_t nsecs)
idle	obj/kern/kernel.asm	/^  idle = thiscpu->cpu_env;  \/\/ current env$/;"	d
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/fprintf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:	access:public
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:	access:public
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:	access:public
inb	inc/x86.h	/^inb(int port)$/;"	f	signature:(int port)
init_stack	lib/spawn.c	/^init_stack(envid_t child, const char **argv, uintptr_t *init_esp)$/;"	f	file:	signature:(envid_t child, const char **argv, uintptr_t *init_esp)
init_stack	lib/spawn.c	/^static int init_stack(envid_t child, const char **argv, uintptr_t *init_esp);$/;"	p	file:	signature:(envid_t child, const char **argv, uintptr_t *init_esp)
inl	inc/x86.h	/^inl(int port)$/;"	f	signature:(int port)
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
int	obj/fs/fs.asm	/^int$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/cat.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/echo.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultio.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/icode.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/init.asm	/^int$/;"	l
int	obj/user/ls.asm	/^int$/;"	l
int	obj/user/lsfd.asm	/^int$/;"	l
int	obj/user/num.asm	/^int bol = 1;$/;"	l
int	obj/user/num.asm	/^int line = 0;$/;"	l
int	obj/user/num.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/primespipe.asm	/^int$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int	obj/user/sh.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spawnfaultio.asm	/^int$/;"	l
int	obj/user/spawnhello.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/testfdsharing.asm	/^int$/;"	l
int	obj/user/testfile.asm	/^int$/;"	l
int	obj/user/testkbd.asm	/^int$/;"	l
int	obj/user/testpipe.asm	/^int$/;"	l
int	obj/user/testpiperace.asm	/^int$/;"	l
int	obj/user/testpiperace2.asm	/^int$/;"	l
int	obj/user/testpteshare.asm	/^int$/;"	l
int	obj/user/testshell.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/fs/fs.asm	/^int32_t$/;"	l
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/cat.asm	/^int32_t$/;"	l
int32_t	obj/user/echo.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/icode.asm	/^int32_t$/;"	l
int32_t	obj/user/init.asm	/^int32_t$/;"	l
int32_t	obj/user/ls.asm	/^int32_t$/;"	l
int32_t	obj/user/lsfd.asm	/^int32_t$/;"	l
int32_t	obj/user/num.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/primespipe.asm	/^int32_t$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
int32_t	obj/user/sh.asm	/^int32_t$/;"	l
int32_t	obj/user/spawnfaultio.asm	/^int32_t$/;"	l
int32_t	obj/user/spawnhello.asm	/^int32_t$/;"	l
int32_t	obj/user/testfdsharing.asm	/^int32_t$/;"	l
int32_t	obj/user/testfile.asm	/^int32_t$/;"	l
int32_t	obj/user/testkbd.asm	/^int32_t$/;"	l
int32_t	obj/user/testpipe.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace2.asm	/^int32_t$/;"	l
int32_t	obj/user/testpteshare.asm	/^int32_t$/;"	l
int32_t	obj/user/testshell.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
interactive	obj/user/sh.asm	/^			interactive = 1;$/;"	d
interactive	obj/user/sh.asm	/^		interactive = iscons(0);$/;"	d
interactive	obj/user/sh.asm	/^	interactive = '?';$/;"	d
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f	signature:(void *addr)
inw	inc/x86.h	/^inw(int port)$/;"	f	signature:(int port)
ipc_find_env	inc/lib.h	/^envid_t	ipc_find_env(enum EnvType type);$/;"	p	signature:(enum EnvType type)
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f	signature:(enum EnvType type)
ipc_recv	inc/lib.h	/^int32_t ipc_recv(envid_t *from_env_store, void *pg, int *perm_store);$/;"	p	signature:(envid_t *from_env_store, void *pg, int *perm_store)
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f	signature:(envid_t *from_env_store, void *pg, int *perm_store)
ipc_send	inc/lib.h	/^void	ipc_send(envid_t to_env, uint32_t value, void *pg, int perm);$/;"	p	signature:(envid_t to_env, uint32_t value, void *pg, int perm)
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f	signature:(envid_t to_env, uint32_t val, void *pg, int perm)
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f	signature:(uint16_t mask)
irq_setmask_8259A	kern/picirq.h	/^void irq_setmask_8259A(uint16_t mask);$/;"	p	signature:(uint16_t mask)
iscons	inc/lib.h	/^int	iscons(int fd);$/;"	p	signature:(int fd)
iscons	inc/stdio.h	/^int	iscons(int fd);$/;"	p	signature:(int fd)
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f	signature:(int fdnum)
iscons	lib/console.c	/^iscons(int fdnum)$/;"	f	signature:(int fdnum)
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:	signature:(void)
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f	signature:(void)
kbd_intr	kern/console.h	/^void kbd_intr(void); \/\/ irq 1$/;"	p	signature:(void)
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:	signature:(void)
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kid	obj/user/testpiperace.asm	/^	kid = &envs[ENVX(pid)];$/;"	d
kid	obj/user/testpiperace2.asm	/^	kid = &envs[ENVX(r)];$/;"	d
kill	gradelib.py	/^    def kill(self):$/;"	f	access:public
kstacktop_i	obj/kern/kernel.asm	/^    kstacktop_i = KSTACKTOP - i * (KSTKSIZE + KSTKGAP);$/;"	d
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/cpu.h	/^void lapic_eoi(void);$/;"	p	signature:(void)
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f	signature:(void)
lapic_init	kern/cpu.h	/^void lapic_init(void);$/;"	p	signature:(void)
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f	signature:(void)
lapic_ipi	kern/cpu.h	/^void lapic_ipi(int vector);$/;"	p	signature:(int vector)
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f	signature:(int vector)
lapic_startap	kern/cpu.h	/^void lapic_startap(uint8_t apicid, uint32_t addr);$/;"	p	signature:(uint8_t apicid, uint32_t addr)
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f	signature:(uint8_t apicid, uint32_t addr)
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:	access:public
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:	signature:(int index, int value)
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lba_length	inc/partition.h	/^	uint32_t lba_length;$/;"	m	struct:Partitiondesc	access:public
lba_start	inc/partition.h	/^	uint32_t lba_start;$/;"	m	struct:Partitiondesc	access:public
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f	signature:(uint32_t val)
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:	access:public
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:	access:public
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/fs/fs.asm	/^		lflag = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/cat.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echo.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultio.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/icode.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/init.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/ls.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/lsfd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/num.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primespipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sh.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spawnfaultio.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spawnhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfdsharing.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfile.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testkbd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpteshare.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testshell.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f	signature:(void *p)
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
lidt	inc/x86.h	/^lidt(void *p)$/;"	f	signature:(void *p)
line	user/num.c	/^int line = 0;$/;"	v
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f	signature:(uint16_t sel)
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:	signature:(struct Env *e, uint8_t *binary)
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f	signature:(void)
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock	access:public
long	obj/fs/fs.asm	/^long$/;"	l
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/cat.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/echo.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultio.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/icode.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/init.asm	/^long$/;"	l
long	obj/user/ls.asm	/^long$/;"	l
long	obj/user/lsfd.asm	/^long$/;"	l
long	obj/user/num.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/primespipe.asm	/^long$/;"	l
long	obj/user/sendpage.asm	/^long$/;"	l
long	obj/user/sh.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spawnfaultio.asm	/^long$/;"	l
long	obj/user/spawnhello.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/testfdsharing.asm	/^long$/;"	l
long	obj/user/testfile.asm	/^long$/;"	l
long	obj/user/testkbd.asm	/^long$/;"	l
long	obj/user/testpipe.asm	/^long$/;"	l
long	obj/user/testpiperace.asm	/^long$/;"	l
long	obj/user/testpiperace2.asm	/^long$/;"	l
long	obj/user/testpteshare.asm	/^long$/;"	l
long	obj/user/testshell.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:	signature:(int c)
ls	user/ls.c	/^ls(const char *path, const char *prefix)$/;"	f	signature:(const char *path, const char *prefix)
ls1	user/ls.c	/^ls1(const char *prefix, bool isdir, off_t size, const char *name)$/;"	f	signature:(const char *prefix, bool isdir, off_t size, const char *name)
ls1	user/ls.c	/^void ls1(const char*, bool, off_t, const char*);$/;"	p	file:	signature:(const char*, bool, off_t, const char*)
lsdir	user/ls.c	/^lsdir(const char *path, const char *prefix)$/;"	f	signature:(const char *path, const char *prefix)
lsdir	user/ls.c	/^void lsdir(const char*, const char*);$/;"	p	file:	signature:(const char*, const char*)
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f	signature:(uint16_t sel)
m	obj/fs/fs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/fs/fs.asm	/^		m = n - tot;$/;"	d
m	obj/fs/fs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/cat.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/cat.asm	/^		m = n - tot;$/;"	d
m	obj/user/cat.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echo.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echo.asm	/^		m = n - tot;$/;"	d
m	obj/user/echo.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/icode.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/icode.asm	/^		m = n - tot;$/;"	d
m	obj/user/icode.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/init.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/init.asm	/^		m = n - tot;$/;"	d
m	obj/user/init.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/ls.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/ls.asm	/^		m = n - tot;$/;"	d
m	obj/user/ls.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/lsfd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/lsfd.asm	/^		m = n - tot;$/;"	d
m	obj/user/lsfd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/num.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/num.asm	/^		m = n - tot;$/;"	d
m	obj/user/num.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primespipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primespipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/primespipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sh.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sh.asm	/^		m = n - tot;$/;"	d
m	obj/user/sh.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spawnfaultio.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spawnfaultio.asm	/^		m = n - tot;$/;"	d
m	obj/user/spawnfaultio.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spawnhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spawnhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/spawnhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfdsharing.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfile.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfile.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfile.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testkbd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testkbd.asm	/^		m = n - tot;$/;"	d
m	obj/user/testkbd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpteshare.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpteshare.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpteshare.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testshell.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testshell.asm	/^		m = n - tot;$/;"	d
m	obj/user/testshell.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
main	fs/fsformat.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
make	gradelib.py	/^def make(*target):$/;"	f	access:public
map_segment	lib/spawn.c	/^map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	f	file:	signature:(envid_t child, uintptr_t va, size_t memsz, int fd, size_t filesz, off_t fileoffset, int perm)
map_segment	lib/spawn.c	/^static int map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	p	file:	signature:(envid_t child, uintptr_t va, size_t memsz, int fd, size_t filesz, off_t fileoffset, int perm)
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner	access:public
matchtest	grade-lab5	/^def matchtest(parent, name, *args, **kw):$/;"	f	access:public
max	obj/user/testpiperace.asm	/^	max = 200;$/;"	d
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f	access:public
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f	signature:(unsigned reg)
mc146818_read	kern/kclock.h	/^unsigned mc146818_read(unsigned reg);$/;"	p	signature:(unsigned reg)
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f	signature:(unsigned reg, unsigned datum)
mc146818_write	kern/kclock.h	/^void mc146818_write(unsigned reg, unsigned datum);$/;"	p	signature:(unsigned reg, unsigned datum)
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f	signature:(void)
mem_init	kern/pmap.h	/^void	mem_init(void);$/;"	p	signature:(void)
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:	signature:(void)
mem_init_mp	kern/pmap.c	/^static void mem_init_mp(void);$/;"	p	file:	signature:(void)
memcmp	inc/string.h	/^int	memcmp(const void *s1, const void *s2, size_t len);$/;"	p	signature:(const void *s1, const void *s2, size_t len)
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f	signature:(const void *v1, const void *v2, size_t n)
memcpy	inc/string.h	/^void *	memcpy(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memfind	inc/string.h	/^void *	memfind(const void *s, int c, size_t len);$/;"	p	signature:(const void *s, int c, size_t len)
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f	signature:(const void *s, int c, size_t n)
memmove	inc/string.h	/^void *	memmove(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memset	inc/string.h	/^void *	memset(void *dst, int c, size_t len);$/;"	p	signature:(void *dst, int c, size_t len)
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f	signature:(void *v, int c, size_t n)
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:	signature:(int us)
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f	signature:(physaddr_t pa, size_t size)
mmio_map_region	kern/pmap.h	/^void *	mmio_map_region(physaddr_t pa, size_t size);$/;"	p	signature:(physaddr_t pa, size_t size)
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_backtrace	kern/monitor.h	/^int mon_backtrace(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.h	/^int mon_help(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.h	/^int mon_kerninfo(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
monitor	kern/monitor.h	/^void monitor(struct Trapframe *tf);$/;"	p	signature:(struct Trapframe *tf)
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp::checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:	access:public
mp::imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:	access:public
mp::length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:	access:public
mp::physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:	access:public
mp::reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:	access:public
mp::signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:	access:public
mp::specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:	access:public
mp::type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:	access:public
mp_init	kern/cpu.h	/^void mp_init(void);$/;"	p	signature:(void)
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f	signature:(void)
mp_main	kern/init.c	/^mp_main(void)$/;"	f	signature:(void)
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconf::checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:	access:public
mpconf::entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:	access:public
mpconf::entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:	access:public
mpconf::lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:	access:public
mpconf::length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:	access:public
mpconf::oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:	access:public
mpconf::oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:	access:public
mpconf::product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:	access:public
mpconf::reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:	access:public
mpconf::signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:	access:public
mpconf::version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:	access:public
mpconf::xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:	access:public
mpconf::xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:	access:public
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:	signature:(struct mp **pmp)
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpproc::apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:	access:public
mpproc::feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:	access:public
mpproc::flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:	access:public
mpproc::reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:	access:public
mpproc::signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:	access:public
mpproc::type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:	access:public
mpproc::version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:	access:public
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:	signature:(void)
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:	signature:(physaddr_t a, int len)
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
msg	user/testfile.c	/^const char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v
msg	user/testpipe.c	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	v
msg	user/testptelibrary.c	/^const char *msg = "hello, world\\n";$/;"	v
msg	user/testpteshare.c	/^const char *msg = "hello, world\\n";$/;"	v
msg1	user/init.c	/^	char msg1[5000];$/;"	m	struct:__anon1	file:	access:public
msg2	user/init.c	/^	char msg2[1000];$/;"	m	struct:__anon1	file:	access:public
msg2	user/testptelibrary.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
msg2	user/testpteshare.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
n	fs/fsformat.c	/^	int n;$/;"	m	struct:Dir	file:	access:public
n	obj/fs/fs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n	obj/user/cat.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echo.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/icode.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/init.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/ls.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/lsfd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/num.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primespipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sh.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spawnfaultio.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spawnhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfdsharing.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfile.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testkbd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpteshare.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testshell.asm	/^		n = thisenv->env_runs;$/;"	d
n1	obj/user/testshell.asm	/^		n1 = read(rfd, &c1, 1);$/;"	d
n2	obj/user/testshell.asm	/^		n2 = read(kfd, &c2, 1);$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock	access:public
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
nblock	obj/fs/fs.asm	/^	nblock = dir->f_size \/ BLKSIZE;$/;"	d
nblocks	fs/fsformat.c	/^uint32_t nblocks;$/;"	v
nc	obj/user/sh.asm	/^		nc = _gettoken(s, &np1, &np2);$/;"	d
nc	obj/user/sh.asm	/^	nc = _gettoken(np2, &np1, &np2);$/;"	d
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
new_entry	obj/kern/kernel.asm	/^		new_entry = pgdir_walk(pgdir, (void *)va, 1);$/;"	d
new_nblocks	obj/fs/fs.asm	/^	new_nblocks = (newsize + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
newfd	obj/fs/fs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/cat.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echo.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/icode.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/init.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/ls.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/lsfd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/num.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primespipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sh.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spawnfaultio.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spawnhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfdsharing.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfile.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testkbd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpteshare.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testshell.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP(nextfree + n, PGSIZE);\/\/分配n字节$/;"	d
nflag	obj/user/echo.asm	/^		nflag = 1;$/;"	d
nflag	obj/user/echo.asm	/^	nflag = 0;$/;"	d
nloff	obj/user/testshell.asm	/^			nloff = off+1;$/;"	d
nloff	obj/user/testshell.asm	/^	nloff = 0;$/;"	d
nn	obj/fs/fs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/cat.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echo.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/icode.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/init.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/ls.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/lsfd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/num.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primespipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sh.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spawnfaultio.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spawnhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfdsharing.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfile.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testkbd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpteshare.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testshell.asm	/^		nn = thisenv->env_runs;$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^	npages = totalmem \/ (PGSIZE \/ 1024);$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = basemem \/ (PGSIZE \/ 1024);$/;"	d
num	obj/fs/fs.asm	/^				num = -(long long) num;$/;"	d
num	obj/fs/fs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/fs/fs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/fs/fs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/cat.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/cat.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echo.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echo.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultio.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultio.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultio.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultio.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/icode.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/icode.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/init.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/init.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/ls.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/ls.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/lsfd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/lsfd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/num.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/num.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primespipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primespipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sh.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sh.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spawnfaultio.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spawnfaultio.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spawnfaultio.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spawnfaultio.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spawnhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spawnhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfdsharing.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfile.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfile.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testkbd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testkbd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpteshare.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpteshare.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testshell.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testshell.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	user/num.c	/^num(int f, const char *s)$/;"	f	signature:(int f, const char *s)
number	obj/fs/fs.asm	/^		number:$/;"	l
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/cat.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/echo.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultio.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/icode.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/init.asm	/^		number:$/;"	l
number	obj/user/ls.asm	/^		number:$/;"	l
number	obj/user/lsfd.asm	/^		number:$/;"	l
number	obj/user/num.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/primespipe.asm	/^		number:$/;"	l
number	obj/user/sendpage.asm	/^		number:$/;"	l
number	obj/user/sh.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spawnfaultio.asm	/^		number:$/;"	l
number	obj/user/spawnhello.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/testfdsharing.asm	/^		number:$/;"	l
number	obj/user/testfile.asm	/^		number:$/;"	l
number	obj/user/testkbd.asm	/^		number:$/;"	l
number	obj/user/testpipe.asm	/^		number:$/;"	l
number	obj/user/testpiperace.asm	/^		number:$/;"	l
number	obj/user/testpiperace2.asm	/^		number:$/;"	l
number	obj/user/testpteshare.asm	/^		number:$/;"	l
number	obj/user/testshell.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nva	obj/fs/fs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/cat.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echo.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/icode.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/init.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/ls.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/lsfd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/num.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primespipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sh.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spawnfaultio.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spawnhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfdsharing.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfile.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testkbd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpteshare.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testshell.asm	/^	nva = fd2data(newfd);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:	signature:(int r)
o	obj/fs/fs.asm	/^	o = &opentab[fileid % MAXOPEN];$/;"	d
o_fd	fs/serv.c	/^	struct Fd *o_fd;	\/\/ Fd page$/;"	m	struct:OpenFile	typeref:struct:OpenFile::Fd	file:	access:public
o_file	fs/serv.c	/^	struct File *o_file;	\/\/ mapped descriptor for open file$/;"	m	struct:OpenFile	typeref:struct:OpenFile::File	file:	access:public
o_fileid	fs/serv.c	/^	uint32_t o_fileid;	\/\/ file id$/;"	m	struct:OpenFile	file:	access:public
o_mode	fs/serv.c	/^	int o_mode;		\/\/ open mode$/;"	m	struct:OpenFile	file:	access:public
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:	access:public
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:	access:public
off_t	fs/fsformat.c	/^typedef uint32_t off_t;$/;"	t	file:
off_t	fs/fsformat.c	20;"	d	file:
off_t	fs/fsformat.c	6;"	d	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	73;"	d
old_nblocks	obj/fs/fs.asm	/^	old_nblocks = (f->f_size + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
open	inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open	access:public
open	inc/lib.h	/^int	open(const char *path, int mode);$/;"	p	signature:(const char *path, int mode)
open	lib/file.c	/^open(const char *path, int mode)$/;"	f	signature:(const char *path, int mode)
opencons	inc/lib.h	/^int	opencons(void);$/;"	p	signature:(void)
opencons	lib/console.c	/^opencons(void)$/;"	f	signature:(void)
opendisk	fs/fsformat.c	/^opendisk(const char *name)$/;"	f	signature:(const char *name)
openfile_alloc	fs/serv.c	/^openfile_alloc(struct OpenFile **o)$/;"	f	signature:(struct OpenFile **o)
openfile_lookup	fs/serv.c	/^openfile_lookup(envid_t envid, uint32_t fileid, struct OpenFile **po)$/;"	f	signature:(envid_t envid, uint32_t fileid, struct OpenFile **po)
opentab	fs/serv.c	/^struct OpenFile opentab[MAXOPEN] = {$/;"	v	typeref:struct:OpenFile
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f	signature:(int port, uint8_t data)
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	signature:(int port, uint32_t data)
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	signature:(int port, uint16_t data)
ova	obj/fs/fs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/cat.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echo.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/icode.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/init.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/ls.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/lsfd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/num.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primespipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sh.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spawnfaultio.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spawnhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfdsharing.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfile.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testkbd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpteshare.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testshell.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/fs/fs.asm	/^				p = "(null)";$/;"	d
p	obj/fs/fs.asm	/^		p = path;$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/kern/kernel.asm	/^    p = page_alloc(0);$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/cat.asm	/^				p = "(null)";$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/echo.asm	/^				p = "(null)";$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultio.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^				p = "(null)";$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^				p = "(null)";$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/num.asm	/^				p = "(null)";$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/primespipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/sh.asm	/^				p = "(null)";$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnfaultio.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnfaultio.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spawnfaultio.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfdsharing.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^				p = "(null)";$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^				p = "(null)";$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
p_buf	lib/pipe.c	/^	uint8_t p_buf[PIPEBUFSIZ];	\/\/ data buffer$/;"	m	struct:Pipe	file:	access:public
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
p_rpos	lib/pipe.c	/^	off_t p_rpos;		\/\/ read position$/;"	m	struct:Pipe	file:	access:public
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
p_wpos	lib/pipe.c	/^	off_t p_wpos;		\/\/ write position$/;"	m	struct:Pipe	file:	access:public
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f	signature:(physaddr_t pa)
padc	obj/fs/fs.asm	/^			padc = '-';$/;"	d
padc	obj/fs/fs.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/cat.asm	/^			padc = '-';$/;"	d
padc	obj/user/cat.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/echo.asm	/^			padc = '-';$/;"	d
padc	obj/user/echo.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultio.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultio.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/icode.asm	/^			padc = '-';$/;"	d
padc	obj/user/icode.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/init.asm	/^			padc = '-';$/;"	d
padc	obj/user/init.asm	/^			padc = '0';$/;"	d
padc	obj/user/ls.asm	/^			padc = '-';$/;"	d
padc	obj/user/ls.asm	/^			padc = '0';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '-';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '0';$/;"	d
padc	obj/user/num.asm	/^			padc = '-';$/;"	d
padc	obj/user/num.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
padc	obj/user/sh.asm	/^			padc = '-';$/;"	d
padc	obj/user/sh.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spawnfaultio.asm	/^			padc = '-';$/;"	d
padc	obj/user/spawnfaultio.asm	/^			padc = '0';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '0';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '-';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '0';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '-';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f	signature:(int alloc_flags)
page_alloc	kern/pmap.h	/^struct PageInfo *page_alloc(int alloc_flags);$/;"	p	signature:(int alloc_flags)
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f	signature:(struct PageInfo* pp)
page_decref	kern/pmap.h	/^void	page_decref(struct PageInfo *pp);$/;"	p	signature:(struct PageInfo *pp)
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
page_fault_handler	kern/trap.h	/^void page_fault_handler(struct Trapframe *);$/;"	p	signature:(struct Trapframe *)
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page_free	kern/pmap.h	/^void	page_free(struct PageInfo *pp);$/;"	p	signature:(struct PageInfo *pp)
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^			page_free_list = &pages[page_i];	$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = NULL;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = result->pp_link;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f	signature:(void)
page_init	kern/pmap.h	/^void	page_init(void);$/;"	p	signature:(void)
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f	signature:(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)
page_insert	kern/pmap.h	/^int	page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm);$/;"	p	signature:(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f	signature:(pde_t *pgdir, void *va, pte_t **pte_store)
page_lookup	kern/pmap.h	/^struct PageInfo *page_lookup(pde_t *pgdir, void *va, pte_t **pte_store);$/;"	p	signature:(pde_t *pgdir, void *va, pte_t **pte_store)
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f	signature:(pde_t *pgdir, void *va)
page_remove	kern/pmap.h	/^void	page_remove(pde_t *pgdir, void *va);$/;"	p	signature:(pde_t *pgdir, void *va)
pageref	inc/lib.h	/^int	pageref(void *addr);$/;"	p	signature:(void *addr)
pageref	lib/pageref.c	/^pageref(void *v)$/;"	f	signature:(void *v)
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
panic	fs/fsformat.c	/^panic(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
path	obj/fs/fs.asm	/^		path = skip_slash(path);$/;"	d
path	obj/fs/fs.asm	/^	path = skip_slash(path);$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock	access:public
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
perm	obj/fs/fs.asm	/^		perm = 0;$/;"	d
perm	obj/user/forktree.asm	/^  perm = PTE_P|PTE_U;$/;"	d
perm	obj/user/icode.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/init.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/pingpong.asm	/^  perm = PTE_P|PTE_U;$/;"	d
perm	obj/user/pingpongs.asm	/^  perm = PTE_P|PTE_U;$/;"	d
perm	obj/user/primes.asm	/^  perm = PTE_P|PTE_U;$/;"	d
perm	obj/user/primespipe.asm	/^  perm = PTE_P|PTE_U;$/;"	d
perm	obj/user/sendpage.asm	/^  perm = PTE_P|PTE_U;$/;"	d
perm	obj/user/sh.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/sh.asm	/^  perm = PTE_P|PTE_U;$/;"	d
perm	obj/user/spawnfaultio.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/spawnhello.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/spin.asm	/^  perm = PTE_P|PTE_U;$/;"	d
perm	obj/user/stresssched.asm	/^  perm = PTE_P|PTE_U;$/;"	d
perm	obj/user/testfdsharing.asm	/^  perm = PTE_P|PTE_U;$/;"	d
perm	obj/user/testpipe.asm	/^  perm = PTE_P|PTE_U;$/;"	d
perm	obj/user/testpiperace.asm	/^  perm = PTE_P|PTE_U;$/;"	d
perm	obj/user/testpiperace2.asm	/^  perm = PTE_P|PTE_U;$/;"	d
perm	obj/user/testpteshare.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testpteshare.asm	/^  perm = PTE_P|PTE_U;$/;"	d
perm	obj/user/testshell.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testshell.asm	/^  perm = PTE_P|PTE_U;$/;"	d
pg	obj/fs/fs.asm	/^		pg = NULL;$/;"	d
pg	obj/fs/fs.asm	/^    pg = (void *)UTOP;$/;"	d
pg	obj/user/cat.asm	/^    pg = (void *)UTOP;$/;"	d
pg	obj/user/echo.asm	/^    pg = (void *)UTOP;$/;"	d
pg	obj/user/fairness.asm	/^    pg = (void *)UTOP;$/;"	d
pg	obj/user/icode.asm	/^    pg = (void *)UTOP;$/;"	d
pg	obj/user/init.asm	/^    pg = (void *)UTOP;$/;"	d
pg	obj/user/ls.asm	/^    pg = (void *)UTOP;$/;"	d
pg	obj/user/lsfd.asm	/^    pg = (void *)UTOP;$/;"	d
pg	obj/user/num.asm	/^    pg = (void *)UTOP;$/;"	d
pg	obj/user/pingpong.asm	/^    pg = (void *)UTOP;$/;"	d
pg	obj/user/pingpongs.asm	/^    pg = (void *)UTOP;$/;"	d
pg	obj/user/primes.asm	/^    pg = (void *)UTOP;$/;"	d
pg	obj/user/primespipe.asm	/^    pg = (void *)UTOP;$/;"	d
pg	obj/user/sendpage.asm	/^    pg = (void *)UTOP;$/;"	d
pg	obj/user/sh.asm	/^    pg = (void *)UTOP;$/;"	d
pg	obj/user/spawnfaultio.asm	/^    pg = (void *)UTOP;$/;"	d
pg	obj/user/spawnhello.asm	/^    pg = (void *)UTOP;$/;"	d
pg	obj/user/testfdsharing.asm	/^    pg = (void *)UTOP;$/;"	d
pg	obj/user/testfile.asm	/^    pg = (void *)UTOP;$/;"	d
pg	obj/user/testkbd.asm	/^    pg = (void *)UTOP;$/;"	d
pg	obj/user/testpipe.asm	/^    pg = (void *)UTOP;$/;"	d
pg	obj/user/testpiperace.asm	/^    pg = (void *)UTOP;$/;"	d
pg	obj/user/testpiperace2.asm	/^    pg = (void *)UTOP;$/;"	d
pg	obj/user/testpteshare.asm	/^    pg = (void *)UTOP;$/;"	d
pg	obj/user/testshell.asm	/^    pg = (void *)UTOP;$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f	signature:(pde_t *pgdir, const void *va, int create)
pgdir_walk	kern/pmap.h	/^pte_t *pgdir_walk(pde_t *pgdir, const void *va, int create);$/;"	p	signature:(pde_t *pgdir, const void *va, int create)
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:	signature:(struct UTrapframe *utf)
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:	signature:(struct UTrapframe *utf)
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^  ph = (struct Proghdr *)((uint8_t *)elf_head + elf_head->e_phoff);$/;"	d
ph	obj/user/icode.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/init.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/sh.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/spawnfaultio.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/spawnhello.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testpteshare.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testshell.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:	access:public
physaddr_t	fs/fsformat.c	/^typedef uint32_t physaddr_t;$/;"	t	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f	signature:(void)
pic_init	kern/picirq.h	/^void pic_init(void);$/;"	p	signature:(void)
pid	obj/user/testpiperace.asm	/^	pid = r;$/;"	d
pipe	inc/lib.h	/^int	pipe(int pipefds[2]);$/;"	p	signature:(int pipefds[2])
pipe	lib/pipe.c	/^pipe(int pfd[2])$/;"	f	signature:(int pfd[2])
pipe_child	obj/user/sh.asm	/^				pipe_child = r;$/;"	d
pipe_child	obj/user/sh.asm	/^	pipe_child = 0;$/;"	d
pipeisclosed	inc/lib.h	/^int	pipeisclosed(int pipefd);$/;"	p	signature:(int pipefd)
pipeisclosed	lib/pipe.c	/^pipeisclosed(int fdnum)$/;"	f	signature:(int fdnum)
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f	access:public
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo	access:public
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	access:public
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f	access:public
precision	obj/fs/fs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/fs/fs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/fs/fs.asm	/^		precision = -1;$/;"	d
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/cat.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/cat.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/cat.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/echo.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echo.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echo.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultio.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultio.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultio.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/icode.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/icode.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/icode.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/init.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/init.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/init.asm	/^		precision = -1;$/;"	d
precision	obj/user/ls.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/ls.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/ls.asm	/^		precision = -1;$/;"	d
precision	obj/user/lsfd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/lsfd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/lsfd.asm	/^		precision = -1;$/;"	d
precision	obj/user/num.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/num.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/num.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/primespipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primespipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primespipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sendpage.asm	/^		precision = -1;$/;"	d
precision	obj/user/sh.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sh.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sh.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spawnfaultio.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spawnfaultio.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spawnfaultio.asm	/^		precision = -1;$/;"	d
precision	obj/user/spawnhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spawnhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spawnhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfdsharing.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfdsharing.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfdsharing.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfile.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfile.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfile.asm	/^		precision = -1;$/;"	d
precision	obj/user/testkbd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testkbd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testkbd.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace2.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpteshare.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpteshare.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpteshare.asm	/^		precision = -1;$/;"	d
precision	obj/user/testshell.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testshell.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testshell.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f	signature:(void)
primeproc	user/primespipe.c	/^primeproc(int fd)$/;"	f	signature:(int fd)
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f	signature:(struct PushRegs *regs)
print_regs	kern/trap.h	/^void print_regs(struct PushRegs *regs);$/;"	p	signature:(struct PushRegs *regs)
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
print_trapframe	kern/trap.h	/^void print_trapframe(struct Trapframe *tf);$/;"	p	signature:(struct Trapframe *tf)
printbuf	lib/fprintf.c	/^struct printbuf {$/;"	s	file:
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printbuf::buf	lib/fprintf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:	access:public
printbuf::buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:	access:public
printbuf::cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:	access:public
printbuf::error	lib/fprintf.c	/^	int error;	\/\/ first error that occurred$/;"	m	struct:printbuf	file:	access:public
printbuf::fd	lib/fprintf.c	/^	int fd;		\/\/ file descriptor$/;"	m	struct:printbuf	file:	access:public
printbuf::idx	lib/fprintf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:	access:public
printbuf::idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:	access:public
printbuf::result	lib/fprintf.c	/^	ssize_t result;	\/\/ accumulated results from write$/;"	m	struct:printbuf	file:	access:public
printf	inc/stdio.h	/^int	printf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
printf	lib/fprintf.c	/^printf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
printfmt	inc/stdio.h	/^void	printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	file:	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:	signature:(void (*putch)(int, void*), void *putdat, unsigned long long num, unsigned base, int width, int padc)
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/fs/fs.asm	/^		process_precision:$/;"	l
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/cat.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echo.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultio.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/icode.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/init.asm	/^		process_precision:$/;"	l
process_precision	obj/user/ls.asm	/^		process_precision:$/;"	l
process_precision	obj/user/lsfd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/num.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primespipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sendpage.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sh.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spawnfaultio.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spawnhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfdsharing.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfile.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testkbd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpteshare.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testshell.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:	access:public
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte	obj/fs/fs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/kern/kernel.asm	/^    pte = pgdir_walk(env->env_pgdir,(void *)start, 0);$/;"	d
pte	obj/user/cat.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echo.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/icode.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/init.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/ls.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/lsfd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/num.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primespipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sh.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spawnfaultio.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spawnhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfdsharing.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfile.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testkbd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpteshare.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testshell.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:	signature:(int ch, int *cnt)
putch	lib/fprintf.c	/^putch(int ch, void *thunk)$/;"	f	file:	signature:(int ch, void *thunk)
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:	signature:(int ch, struct printbuf *b)
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab5	/^r = Runner(save("jos.out"),$/;"	v
r	obj/fs/fs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/fs/fs.asm	/^			r = -E_INVAL;$/;"	d
r	obj/fs/fs.asm	/^			r = 0;$/;"	d
r	obj/fs/fs.asm	/^			r = handlers[req](whom, fsreq);$/;"	d
r	obj/fs/fs.asm	/^			r = serve_open(whom, (struct Fsreq_open*)fsreq, &pg, &perm);$/;"	d
r	obj/fs/fs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/fs/fs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/user/cat.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/cat.asm	/^			r = 0;$/;"	d
r	obj/user/cat.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/cat.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echo.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echo.asm	/^			r = 0;$/;"	d
r	obj/user/echo.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echo.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/icode.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/icode.asm	/^			r = 0;$/;"	d
r	obj/user/icode.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/icode.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/init.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/init.asm	/^			r = 0;$/;"	d
r	obj/user/init.asm	/^		r = spawnl("\/sh", "sh", (char*)0);$/;"	d
r	obj/user/init.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/init.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/ls.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/ls.asm	/^			r = 0;$/;"	d
r	obj/user/ls.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/ls.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/lsfd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/lsfd.asm	/^			r = 0;$/;"	d
r	obj/user/lsfd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/lsfd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/num.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/num.asm	/^			r = 0;$/;"	d
r	obj/user/num.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/num.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primespipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primespipe.asm	/^			r = 0;$/;"	d
r	obj/user/primespipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primespipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sh.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sh.asm	/^			r = 0;$/;"	d
r	obj/user/sh.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sh.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spawnfaultio.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spawnfaultio.asm	/^			r = 0;$/;"	d
r	obj/user/spawnfaultio.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spawnfaultio.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spawnhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spawnhello.asm	/^			r = 0;$/;"	d
r	obj/user/spawnhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spawnhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = 0;$/;"	d
r	obj/user/testfdsharing.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfile.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfile.asm	/^			r = 0;$/;"	d
r	obj/user/testfile.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfile.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testkbd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testkbd.asm	/^			r = 0;$/;"	d
r	obj/user/testkbd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testkbd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpipe.asm	/^			r = 0;$/;"	d
r	obj/user/testpipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpteshare.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpteshare.asm	/^			r = 0;$/;"	d
r	obj/user/testpteshare.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpteshare.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testshell.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testshell.asm	/^			r = 0;$/;"	d
r	obj/user/testshell.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testshell.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/fs/fs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/cat.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echo.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultio.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/icode.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/init.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/ls.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/lsfd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/num.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primespipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sh.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spawnfaultio.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spawnhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfdsharing.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfile.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testkbd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpteshare.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testshell.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f	signature:(void)
rcr2	inc/x86.h	/^rcr2(void)$/;"	f	signature:(void)
rcr3	inc/x86.h	/^rcr3(void)$/;"	f	signature:(void)
rcr4	inc/x86.h	/^rcr4(void)$/;"	f	signature:(void)
re	obj/fs/fs.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/fs/fs.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re	obj/kern/kernel.asm	/^    re = page_insert(e->env_pgdir, p, (void *)start, PTE_U | PTE_W);$/;"	d
re	obj/kern/kernel.asm	/^    re = sys_cgetc();$/;"	d
re	obj/kern/kernel.asm	/^    re = sys_getenvid();$/;"	d
re	obj/kern/kernel.asm	/^    re = syscall(regs->reg_eax, regs->reg_edx, regs->reg_ecx, regs->reg_ebx, regs->reg_edi, regs->reg_esi); $/;"	d
re	obj/user/cat.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/user/cat.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re	obj/user/echo.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/user/echo.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re	obj/user/fairness.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/user/fairness.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re	obj/user/icode.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/user/icode.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re	obj/user/init.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/user/init.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re	obj/user/ls.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/user/ls.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re	obj/user/lsfd.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/user/lsfd.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re	obj/user/num.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/user/num.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re	obj/user/pingpong.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/user/pingpong.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re	obj/user/pingpongs.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/user/pingpongs.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re	obj/user/primes.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/user/primes.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re	obj/user/primespipe.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/user/primespipe.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re	obj/user/sendpage.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/user/sendpage.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re	obj/user/sh.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/user/sh.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re	obj/user/spawnfaultio.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/user/spawnfaultio.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re	obj/user/spawnhello.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/user/spawnhello.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re	obj/user/testfdsharing.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/user/testfdsharing.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re	obj/user/testfile.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/user/testfile.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re	obj/user/testkbd.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/user/testkbd.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re	obj/user/testpipe.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/user/testpipe.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re	obj/user/testpiperace.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/user/testpiperace.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re	obj/user/testpiperace2.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/user/testpiperace2.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re	obj/user/testpteshare.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/user/testpteshare.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re	obj/user/testshell.asm	/^    re = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
re	obj/user/testshell.asm	/^    re = thisenv->env_ipc_value;$/;"	d
re_page	obj/kern/kernel.asm	/^	re_page = pa2page(PTE_ADDR(*entry));$/;"	d
re_page	obj/kern/kernel.asm	/^	re_page = page_lookup(pgdir, va, &entry);$/;"	d
read	inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read	access:public
read	inc/lib.h	/^ssize_t	read(int fd, void *buf, size_t nbytes);$/;"	p	signature:(int fd, void *buf, size_t nbytes)
read	lib/fd.c	/^read(int fdnum, void *buf, size_t n)$/;"	f	signature:(int fdnum, void *buf, size_t n)
readRet	inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read	access:public
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f	signature:(void)
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f	signature:(void)
read_esp	inc/x86.h	/^read_esp(void)$/;"	f	signature:(void)
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f	signature:(void)
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	inc/lib.h	/^char*	readline(const char *buf);$/;"	p	signature:(const char *buf)
readline	inc/stdio.h	/^char*	readline(const char *prompt);$/;"	p	signature:(const char *prompt)
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f	signature:(const char *prompt)
readn	fs/fsformat.c	/^readn(int f, void *out, size_t n)$/;"	f	signature:(int f, void *out, size_t n)
readn	inc/lib.h	/^ssize_t	readn(int fd, void *buf, size_t nbytes);$/;"	p	signature:(int fd, void *buf, size_t nbytes)
readn	lib/fd.c	/^readn(int fdnum, void *buf, size_t n)$/;"	f	signature:(int fdnum, void *buf, size_t n)
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f	signature:(void *dst, uint32_t offset)
readsect	boot/main.c	/^void readsect(void*, uint32_t);$/;"	p	file:	signature:(void*, uint32_t)
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f	signature:(uint32_t pa, uint32_t count, uint32_t offset)
readseg	boot/main.c	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	p	file:
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs	access:public
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs	access:public
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs	access:public
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs	access:public
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs	access:public
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs	access:public
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs	access:public
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs	access:public
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:	signature:(struct Env *e, void *va, size_t len)
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test	access:public
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:	access:public
regs	user/faultregs.c	/^struct regs$/;"	s	file:
regs::eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:	access:public
regs::eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:	access:public
regs::esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:	access:public
regs::regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:	access:public
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
remove	inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove	access:public
remove	inc/lib.h	/^int	remove(const char *path);$/;"	p	signature:(const char *path)
req	obj/fs/fs.asm	/^		req = ipc_recv((int32_t *) &whom, fsreq, &perm);$/;"	d
req_buf	inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write	access:public
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush	access:public
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_read	access:public
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size	access:public
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat	access:public
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write	access:public
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_read	access:public
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write	access:public
req_omode	inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open	access:public
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open	access:public
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove	access:public
req_size	inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size	access:public
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:	access:public
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:	access:public
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:	access:public
reset_fs	gradelib.py	/^def reset_fs():$/;"	f	access:public
result	lib/fprintf.c	/^	ssize_t result;	\/\/ accumulated results from write$/;"	m	struct:printbuf	file:	access:public
result	obj/kern/kernel.asm	/^	result = nextfree;\/\/分配地址的开端$/;"	d
result	obj/kern/kernel.asm	/^	result = page_free_list;$/;"	d
reswitch	obj/fs/fs.asm	/^	reswitch:$/;"	l
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/cat.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echo.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultio.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/icode.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/init.asm	/^	reswitch:$/;"	l
reswitch	obj/user/ls.asm	/^	reswitch:$/;"	l
reswitch	obj/user/lsfd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/num.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primespipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sendpage.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sh.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spawnfaultio.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spawnhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfdsharing.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfile.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testkbd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpteshare.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testshell.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/fs/fs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/fs/fs.asm	/^	ret = dst;$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/cat.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/cat.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/echo.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echo.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultio.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/icode.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/icode.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/init.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/init.asm	/^	ret = dst;$/;"	d
ret	obj/user/ls.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/ls.asm	/^	ret = dst;$/;"	d
ret	obj/user/lsfd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/lsfd.asm	/^	ret = dst;$/;"	d
ret	obj/user/num.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/num.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/primespipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primespipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
ret	obj/user/sh.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sh.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spawnfaultio.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spawnfaultio.asm	/^	ret = dst;$/;"	d
ret	obj/user/spawnhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spawnhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfdsharing.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfdsharing.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfile.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfile.asm	/^	ret = dst;$/;"	d
ret	obj/user/testkbd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testkbd.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace2.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpteshare.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpteshare.asm	/^	ret = dst;$/;"	d
ret	obj/user/testshell.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testshell.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
ret_buf	inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read	access:public
ret_isdir	inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat	access:public
ret_name	inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat	access:public
ret_size	inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat	access:public
rfd	obj/user/testshell.asm	/^	rfd = pfds[0];$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon3	file:	access:public
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner	access:public
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu	access:public
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test	access:public
run_tests	gradelib.py	/^def run_tests():$/;"	f	access:public
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:	signature:(char *buf, struct Trapframe *tf)
runcmd	user/sh.c	/^runcmd(char* s)$/;"	f	signature:(char* s)
runit	obj/user/sh.asm	/^runit:$/;"	l
s	obj/fs/fs.asm	/^	s = src;$/;"	d
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/cat.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/echo.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultio.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/icode.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/init.asm	/^	s = src;$/;"	d
s	obj/user/ls.asm	/^	s = src;$/;"	d
s	obj/user/lsfd.asm	/^	s = src;$/;"	d
s	obj/user/num.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/primespipe.asm	/^	s = src;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
s	obj/user/sh.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spawnfaultio.asm	/^	s = src;$/;"	d
s	obj/user/spawnhello.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/testfdsharing.asm	/^	s = src;$/;"	d
s	obj/user/testfile.asm	/^	s = src;$/;"	d
s	obj/user/testkbd.asm	/^	s = src;$/;"	d
s	obj/user/testpipe.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace2.asm	/^	s = src;$/;"	d
s	obj/user/testpteshare.asm	/^	s = src;$/;"	d
s	obj/user/testshell.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
s_magic	inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super	access:public
s_nblocks	inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super	access:public
s_root	inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File	access:public
save	gradelib.py	/^def save(path):$/;"	f	access:public
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save	access:public
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f	signature:(void)
sched_halt	kern/sched.c	/^void sched_halt(void);$/;"	p	file:	signature:(void)
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f	signature:(void)
sched_yield	kern/sched.h	/^void sched_yield(void) __attribute__((noreturn));$/;"	p	signature:(void)
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
seek	inc/lib.h	/^int	seek(int fd, off_t offset);$/;"	p	signature:(int fd, off_t offset)
seek	lib/fd.c	/^seek(int fdnum, off_t offset)$/;"	f	signature:(int fdnum, off_t offset)
sep	obj/user/ls.asm	/^			sep = "";$/;"	d
sep	obj/user/ls.asm	/^			sep = "\/";$/;"	d
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:	signature:(void)
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f	signature:(void)
serial_intr	kern/console.h	/^void serial_intr(void); \/\/ irq 4$/;"	p	signature:(void)
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:	signature:(void)
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:	signature:(int c)
serve	fs/serv.c	/^serve(void)$/;"	f	signature:(void)
serve_flush	fs/serv.c	/^serve_flush(envid_t envid, struct Fsreq_flush *req)$/;"	f	signature:(envid_t envid, struct Fsreq_flush *req)
serve_init	fs/serv.c	/^serve_init(void)$/;"	f	signature:(void)
serve_open	fs/serv.c	/^serve_open(envid_t envid, struct Fsreq_open *req,$/;"	f	signature:(envid_t envid, struct Fsreq_open *req, void **pg_store, int *perm_store)
serve_read	fs/serv.c	/^serve_read(envid_t envid, union Fsipc *ipc)$/;"	f	signature:(envid_t envid, union Fsipc *ipc)
serve_set_size	fs/serv.c	/^serve_set_size(envid_t envid, struct Fsreq_set_size *req)$/;"	f	signature:(envid_t envid, struct Fsreq_set_size *req)
serve_stat	fs/serv.c	/^serve_stat(envid_t envid, union Fsipc *ipc)$/;"	f	signature:(envid_t envid, union Fsipc *ipc)
serve_sync	fs/serv.c	/^serve_sync(envid_t envid, union Fsipc *req)$/;"	f	signature:(envid_t envid, union Fsipc *req)
serve_write	fs/serv.c	/^serve_write(envid_t envid, struct Fsreq_write *req)$/;"	f	signature:(envid_t envid, struct Fsreq_write *req)
set_pgfault_handler	inc/lib.h	/^void	set_pgfault_handler(void (*handler)(struct UTrapframe *utf));$/;"	p	signature:(void (*handler)(struct UTrapframe *utf))
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f	signature:(void (*handler)(struct UTrapframe *utf))
set_size	inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size	access:public
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint	access:public
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line	access:public
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save	access:public
sfork	inc/lib.h	/^envid_t	sfork(void);	\/\/ Challenge!$/;"	p	signature:(void)
sfork	lib/fork.c	/^sfork(void)$/;"	f	signature:(void)
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f	access:public
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part	access:public
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:	access:public
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:	access:public
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:	access:public
size	obj/kern/kernel.asm	/^  size = ROUNDUP(size, PGSIZE); \/\/ round size up to a multiple of PGSIZE $/;"	d
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/fs/fs.asm	/^size_t$/;"	l
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/cat.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/echo.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultio.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/icode.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/init.asm	/^size_t$/;"	l
size_t	obj/user/ls.asm	/^size_t$/;"	l
size_t	obj/user/lsfd.asm	/^size_t$/;"	l
size_t	obj/user/num.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/primespipe.asm	/^size_t$/;"	l
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
size_t	obj/user/sh.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spawnfaultio.asm	/^size_t$/;"	l
size_t	obj/user/spawnhello.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/testfdsharing.asm	/^size_t$/;"	l
size_t	obj/user/testfile.asm	/^size_t$/;"	l
size_t	obj/user/testkbd.asm	/^size_t$/;"	l
size_t	obj/user/testpipe.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace2.asm	/^size_t$/;"	l
size_t	obj/user/testpteshare.asm	/^size_t$/;"	l
size_t	obj/user/testshell.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
skip_slash	fs/fs.c	/^skip_slash(const char *p)$/;"	f	file:	signature:(const char *p)
snprintf	inc/stdio.h	/^int	snprintf(char *str, int size, const char *fmt, ...);$/;"	p	signature:(char *str, int size, const char *fmt, ...)
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f	signature:(char *buf, int n, const char *fmt, ...)
spawn	inc/lib.h	/^envid_t	spawn(const char *program, const char **argv);$/;"	p	signature:(const char *program, const char **argv)
spawn	lib/spawn.c	/^spawn(const char *prog, const char **argv)$/;"	f	signature:(const char *prog, const char **argv)
spawnl	inc/lib.h	/^envid_t	spawnl(const char *program, const char *arg0, ...);$/;"	p	signature:(const char *program, const char *arg0, ...)
spawnl	lib/spawn.c	/^spawnl(const char *prog, const char *arg0, ...)$/;"	f	signature:(const char *prog, const char *arg0, ...)
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:	access:public
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f	signature:(struct spinlock *lk)
spin_lock	kern/spinlock.h	/^void spin_lock(struct spinlock *lk);$/;"	p	signature:(struct spinlock *lk)
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f	signature:(struct spinlock *lk)
spin_unlock	kern/spinlock.h	/^void spin_unlock(struct spinlock *lk);$/;"	p	signature:(struct spinlock *lk)
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
spinlock::cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo	access:public
spinlock::locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock	access:public
spinlock::name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock	access:public
spinlock::pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock	access:public
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintbuf::buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:	signature:(int ch, struct sprintbuf *b)
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
ssize_t	obj/fs/fs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/cat.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echo.asm	/^ssize_t$/;"	l
ssize_t	obj/user/icode.asm	/^ssize_t$/;"	l
ssize_t	obj/user/init.asm	/^ssize_t$/;"	l
ssize_t	obj/user/ls.asm	/^ssize_t$/;"	l
ssize_t	obj/user/lsfd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/num.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primespipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sh.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spawnfaultio.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spawnhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfdsharing.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfile.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testkbd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpteshare.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testshell.asm	/^ssize_t$/;"	l
st_dev	inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev	access:public
st_isdir	inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat	access:public
st_name	inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat	access:public
st_size	inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat	access:public
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:	signature:(const struct Stab *stabs, int *region_left, int *region_right, int type, uintptr_t addr)
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:	access:public
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:	access:public
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
start_envi	obj/kern/kernel.asm	/^  start_envi = idle? ENVX(idle->env_id) + 1 : 0;$/;"	d
startdir	fs/fsformat.c	/^startdir(struct File *f, struct Dir *dout)$/;"	f	signature:(struct File *f, struct Dir *dout)
stat	inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat	access:public
stat	inc/lib.h	/^int	stat(const char *path, struct Stat *statbuf);$/;"	p	signature:(const char *path, struct Stat *statbuf)
stat	lib/fd.c	/^stat(const char *path, struct Stat *stat)$/;"	f	signature:(const char *path, struct Stat *stat)
stat	obj/kern/kernel.asm	/^	stat = inb(KBSTATP);$/;"	d
statRet	inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat	access:public
static	obj/boot/boot.asm	/^static inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static inline void$/;"	l
static	obj/fs/fs.asm	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	l
static	obj/fs/fs.asm	/^static const char*$/;"	l
static	obj/fs/fs.asm	/^static inline uint8_t$/;"	l
static	obj/fs/fs.asm	/^static inline void$/;"	l
static	obj/fs/fs.asm	/^static int diskno = 1;$/;"	l
static	obj/fs/fs.asm	/^static int$/;"	l
static	obj/fs/fs.asm	/^static long long$/;"	l
static	obj/fs/fs.asm	/^static ssize_t$/;"	l
static	obj/fs/fs.asm	/^static unsigned long long$/;"	l
static	obj/fs/fs.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/cat.asm	/^static int$/;"	l
static	obj/user/cat.asm	/^static long long$/;"	l
static	obj/user/cat.asm	/^static ssize_t$/;"	l
static	obj/user/cat.asm	/^static unsigned long long$/;"	l
static	obj/user/cat.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/echo.asm	/^static int$/;"	l
static	obj/user/echo.asm	/^static long long$/;"	l
static	obj/user/echo.asm	/^static ssize_t$/;"	l
static	obj/user/echo.asm	/^static unsigned long long$/;"	l
static	obj/user/echo.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultio.asm	/^static inline uint32_t$/;"	l
static	obj/user/faultio.asm	/^static inline void$/;"	l
static	obj/user/faultio.asm	/^static long long$/;"	l
static	obj/user/faultio.asm	/^static unsigned long long$/;"	l
static	obj/user/faultio.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/icode.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/icode.asm	/^static int$/;"	l
static	obj/user/icode.asm	/^static long long$/;"	l
static	obj/user/icode.asm	/^static ssize_t$/;"	l
static	obj/user/icode.asm	/^static unsigned long long$/;"	l
static	obj/user/icode.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/init.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/init.asm	/^static int$/;"	l
static	obj/user/init.asm	/^static long long$/;"	l
static	obj/user/init.asm	/^static ssize_t$/;"	l
static	obj/user/init.asm	/^static unsigned long long$/;"	l
static	obj/user/init.asm	/^static void$/;"	l
static	obj/user/ls.asm	/^static int$/;"	l
static	obj/user/ls.asm	/^static long long$/;"	l
static	obj/user/ls.asm	/^static ssize_t$/;"	l
static	obj/user/ls.asm	/^static unsigned long long$/;"	l
static	obj/user/ls.asm	/^static void$/;"	l
static	obj/user/lsfd.asm	/^static int$/;"	l
static	obj/user/lsfd.asm	/^static long long$/;"	l
static	obj/user/lsfd.asm	/^static ssize_t$/;"	l
static	obj/user/lsfd.asm	/^static unsigned long long$/;"	l
static	obj/user/lsfd.asm	/^static void$/;"	l
static	obj/user/num.asm	/^static int$/;"	l
static	obj/user/num.asm	/^static long long$/;"	l
static	obj/user/num.asm	/^static ssize_t$/;"	l
static	obj/user/num.asm	/^static unsigned long long$/;"	l
static	obj/user/num.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/primespipe.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primespipe.asm	/^static int$/;"	l
static	obj/user/primespipe.asm	/^static long long$/;"	l
static	obj/user/primespipe.asm	/^static ssize_t$/;"	l
static	obj/user/primespipe.asm	/^static unsigned long long$/;"	l
static	obj/user/primespipe.asm	/^static void$/;"	l
static	obj/user/sendpage.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sendpage.asm	/^static long long$/;"	l
static	obj/user/sendpage.asm	/^static unsigned long long$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
static	obj/user/sh.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/sh.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sh.asm	/^static int$/;"	l
static	obj/user/sh.asm	/^static long long$/;"	l
static	obj/user/sh.asm	/^static ssize_t$/;"	l
static	obj/user/sh.asm	/^static unsigned long long$/;"	l
static	obj/user/sh.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spawnfaultio.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spawnfaultio.asm	/^static int$/;"	l
static	obj/user/spawnfaultio.asm	/^static long long$/;"	l
static	obj/user/spawnfaultio.asm	/^static ssize_t$/;"	l
static	obj/user/spawnfaultio.asm	/^static unsigned long long$/;"	l
static	obj/user/spawnfaultio.asm	/^static void$/;"	l
static	obj/user/spawnhello.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spawnhello.asm	/^static int$/;"	l
static	obj/user/spawnhello.asm	/^static long long$/;"	l
static	obj/user/spawnhello.asm	/^static ssize_t$/;"	l
static	obj/user/spawnhello.asm	/^static unsigned long long$/;"	l
static	obj/user/spawnhello.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/testfdsharing.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testfdsharing.asm	/^static inline void$/;"	l
static	obj/user/testfdsharing.asm	/^static int$/;"	l
static	obj/user/testfdsharing.asm	/^static long long$/;"	l
static	obj/user/testfdsharing.asm	/^static ssize_t$/;"	l
static	obj/user/testfdsharing.asm	/^static unsigned long long$/;"	l
static	obj/user/testfdsharing.asm	/^static void$/;"	l
static	obj/user/testfile.asm	/^static int$/;"	l
static	obj/user/testfile.asm	/^static long long$/;"	l
static	obj/user/testfile.asm	/^static ssize_t$/;"	l
static	obj/user/testfile.asm	/^static unsigned long long$/;"	l
static	obj/user/testfile.asm	/^static void$/;"	l
static	obj/user/testkbd.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/testkbd.asm	/^static int$/;"	l
static	obj/user/testkbd.asm	/^static long long$/;"	l
static	obj/user/testkbd.asm	/^static ssize_t$/;"	l
static	obj/user/testkbd.asm	/^static unsigned long long$/;"	l
static	obj/user/testkbd.asm	/^static void$/;"	l
static	obj/user/testpipe.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpipe.asm	/^static int$/;"	l
static	obj/user/testpipe.asm	/^static long long$/;"	l
static	obj/user/testpipe.asm	/^static ssize_t$/;"	l
static	obj/user/testpipe.asm	/^static unsigned long long$/;"	l
static	obj/user/testpipe.asm	/^static void$/;"	l
static	obj/user/testpiperace.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace.asm	/^static int$/;"	l
static	obj/user/testpiperace.asm	/^static long long$/;"	l
static	obj/user/testpiperace.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace.asm	/^static void$/;"	l
static	obj/user/testpiperace2.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace2.asm	/^static int$/;"	l
static	obj/user/testpiperace2.asm	/^static long long$/;"	l
static	obj/user/testpiperace2.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace2.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace2.asm	/^static void$/;"	l
static	obj/user/testpteshare.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpteshare.asm	/^static inline void$/;"	l
static	obj/user/testpteshare.asm	/^static int$/;"	l
static	obj/user/testpteshare.asm	/^static long long$/;"	l
static	obj/user/testpteshare.asm	/^static ssize_t$/;"	l
static	obj/user/testpteshare.asm	/^static unsigned long long$/;"	l
static	obj/user/testpteshare.asm	/^static void$/;"	l
static	obj/user/testshell.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testshell.asm	/^static inline void$/;"	l
static	obj/user/testshell.asm	/^static int$/;"	l
static	obj/user/testshell.asm	/^static long long$/;"	l
static	obj/user/testshell.asm	/^static ssize_t$/;"	l
static	obj/user/testshell.asm	/^static unsigned long long$/;"	l
static	obj/user/testshell.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line	access:public
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f	access:public
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f	access:public
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	inc/string.h	/^char *	strcat(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strchr	inc/string.h	/^char *	strchr(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strcmp	inc/string.h	/^int	strcmp(const char *s1, const char *s2);$/;"	p	signature:(const char *s1, const char *s2)
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f	signature:(const char *p, const char *q)
strcpy	inc/string.h	/^char *	strcpy(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strfind	inc/string.h	/^char *	strfind(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f	signature:(const char *s, char c)
string_size	obj/user/icode.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/init.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/sh.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/spawnfaultio.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/spawnhello.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testpteshare.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testshell.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/icode.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/init.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/sh.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/spawnfaultio.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/spawnhello.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testpteshare.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testshell.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
strlcpy	inc/string.h	/^size_t	strlcpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f	signature:(char *dst, const char *src, size_t size)
strlen	inc/string.h	/^int	strlen(const char *s);$/;"	p	signature:(const char *s)
strlen	lib/string.c	/^strlen(const char *s)$/;"	f	signature:(const char *s)
strncmp	inc/string.h	/^int	strncmp(const char *s1, const char *s2, size_t size);$/;"	p	signature:(const char *s1, const char *s2, size_t size)
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f	signature:(const char *p, const char *q, size_t n)
strncpy	inc/string.h	/^char *	strncpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f	signature:(char *dst, const char *src, size_t size)
strnlen	inc/string.h	/^int	strnlen(const char *s, size_t size);$/;"	p	signature:(const char *s, size_t size)
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f	signature:(const char *s, size_t size)
strtol	inc/string.h	/^long	strtol(const char *s, char **endptr, int base);$/;"	p	signature:(const char *s, char **endptr, int base)
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f	signature:(const char *s, char **endptr, int base)
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:	signature:(void *addr, int len)
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sum	user/init.c	/^sum(const char *s, int n)$/;"	f	signature:(const char *s, int n)
super	fs/fs.h	/^struct Super *super;		\/\/ superblock$/;"	v	typeref:struct:Super
super	fs/fsformat.c	/^struct Super *super;$/;"	v	typeref:struct:Super
super	obj/fs/fs.asm	/^	super = diskaddr(1);$/;"	d
sync	inc/lib.h	/^int	sync(void);$/;"	p	signature:(void)
sync	lib/file.c	/^sync(void)$/;"	f	signature:(void)
sys_cgetc	inc/lib.h	/^int	sys_cgetc(void);$/;"	p	signature:(void)
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:	signature:(void)
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f	signature:(void)
sys_cputs	inc/lib.h	/^void	sys_cputs(const char *string, size_t len);$/;"	p	signature:(const char *string, size_t len)
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:	signature:(const char *s, size_t len)
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	signature:(const char *s, size_t len)
sys_env_destroy	inc/lib.h	/^int	sys_env_destroy(envid_t);$/;"	p	signature:(envid_t)
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:	signature:(envid_t envid)
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	signature:(envid_t envid)
sys_env_set_pgfault_upcall	inc/lib.h	/^int	sys_env_set_pgfault_upcall(envid_t env, void *upcall);$/;"	p	signature:(envid_t env, void *upcall)
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:	signature:(envid_t envid, void *func)
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f	signature:(envid_t envid, void *upcall)
sys_env_set_status	inc/lib.h	/^int	sys_env_set_status(envid_t env, int status);$/;"	p	signature:(envid_t env, int status)
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:	signature:(envid_t envid, int status)
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	signature:(envid_t envid, int status)
sys_env_set_trapframe	inc/lib.h	/^int	sys_env_set_trapframe(envid_t env, struct Trapframe *tf);$/;"	p	signature:(envid_t env, struct Trapframe *tf)
sys_env_set_trapframe	kern/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	file:	signature:(envid_t envid, struct Trapframe *tf)
sys_env_set_trapframe	lib/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	signature:(envid_t envid, struct Trapframe *tf)
sys_exofork	inc/lib.h	/^static envid_t sys_exofork(void);$/;"	p	signature:(void)
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f	signature:(void)
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:	signature:(void)
sys_getenvid	inc/lib.h	/^envid_t	sys_getenvid(void);$/;"	p	signature:(void)
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:	signature:(void)
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f	signature:(void)
sys_ipc_recv	inc/lib.h	/^int	sys_ipc_recv(void *rcv_pg);$/;"	p	signature:(void *rcv_pg)
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:	signature:(void *dstva)
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	signature:(void *dstva)
sys_ipc_try_send	inc/lib.h	/^int	sys_ipc_try_send(envid_t to_env, uint32_t value, void *pg, int perm);$/;"	p	signature:(envid_t to_env, uint32_t value, void *pg, int perm)
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:	signature:(envid_t envid, uint32_t value, void *srcva, unsigned perm)
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f	signature:(envid_t envid, uint32_t value, void *srcva, int perm)
sys_page_alloc	inc/lib.h	/^int	sys_page_alloc(envid_t env, void *pg, int perm);$/;"	p	signature:(envid_t env, void *pg, int perm)
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:	signature:(envid_t envid, void *va, int perm)
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	signature:(envid_t envid, void *va, int perm)
sys_page_map	inc/lib.h	/^int	sys_page_map(envid_t src_env, void *src_pg,$/;"	p	signature:(envid_t src_env, void *src_pg, envid_t dst_env, void *dst_pg, int perm)
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:	signature:(envid_t srcenvid, void *srcva, envid_t dstenvid, void *dstva, int perm)
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f	signature:(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)
sys_page_unmap	inc/lib.h	/^int	sys_page_unmap(envid_t env, void *pg);$/;"	p	signature:(envid_t env, void *pg)
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:	signature:(envid_t envid, void *va)
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	signature:(envid_t envid, void *va)
sys_yield	inc/lib.h	/^void	sys_yield(void);$/;"	p	signature:(void)
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:	signature:(void)
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f	signature:(void)
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	signature:(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
syscall	kern/syscall.h	/^int32_t syscall(uint32_t num, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5);$/;"	p	signature:(uint32_t num, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:	signature:(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
t	obj/user/sh.asm	/^		t = **p2;$/;"	d
t	obj/user/sh.asm	/^		t = *s;$/;"	d
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f	access:public
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f	access:public
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f	access:public
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f	access:public
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f	access:public
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f	access:public
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f	access:public
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f	access:public
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f	access:public
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f	access:public
test_check_page	grade-lab2	/^def test_check_page():$/;"	f	access:public
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f	access:public
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f	access:public
test_divzero	grade-lab3	/^def test_divzero():$/;"	f	access:public
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f	access:public
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f	access:public
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f	access:public
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f	access:public
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f	access:public
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f	access:public
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f	access:public
test_faultio	grade-lab5	/^def test_faultio():$/;"	f	access:public
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f	access:public
test_faultread	grade-lab3	/^def test_faultread():$/;"	f	access:public
test_faultread	grade-lab4	/^def test_faultread():$/;"	f	access:public
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f	access:public
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f	access:public
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f	access:public
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f	access:public
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f	access:public
test_fd_share	grade-lab5	/^def test_fd_share():$/;"	f	access:public
test_forktree	grade-lab4	/^def test_forktree():$/;"	f	access:public
test_fs	grade-lab5	/^def test_fs():$/;"	f	access:public
test_hello	grade-lab3	/^def test_hello():$/;"	f	access:public
test_icode	grade-lab5	/^def test_icode():$/;"	f	access:public
test_jos	grade-lab1	/^def test_jos():$/;"	f	access:public
test_jos	grade-lab2	/^def test_jos():$/;"	f	access:public
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f	access:public
test_primes	grade-lab4	/^def test_primes():$/;"	f	access:public
test_primespipe	grade-lab5	/^def test_primespipe():$/;"	f	access:public
test_printf	grade-lab1	/^def test_printf():$/;"	f	access:public
test_pte_share	grade-lab5	/^def test_pte_share():$/;"	f	access:public
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f	access:public
test_softint	grade-lab3	/^def test_softint():$/;"	f	access:public
test_spawn	grade-lab5	/^def test_spawn():$/;"	f	access:public
test_spin	grade-lab4	/^def test_spin():$/;"	f	access:public
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f	access:public
test_testbss	grade-lab3	/^def test_testbss():$/;"	f	access:public
test_testfile	grade-lab5	/^def test_testfile():$/;"	f	access:public
test_testshell	grade-lab5	/^def test_testshell():$/;"	f	access:public
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe	access:public
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe	access:public
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe	access:public
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe	access:public
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe	access:public
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe	access:public
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe	access:public
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe	access:public
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe	access:public
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe	access:public
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe	access:public
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs	access:public
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe	access:public
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe	access:public
thiscpu	kern/cpu.h	38;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/fs/fs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/badsegment.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/cat.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/echo.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultio.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^    thisenv = &envs[ENVX(sys_getenvid())]; $/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/icode.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/init.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/ls.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/lsfd.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/num.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^    thisenv = &envs[ENVX(sys_getenvid())]; $/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^    thisenv = &envs[ENVX(sys_getenvid())]; $/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^    thisenv = &envs[ENVX(sys_getenvid())]; $/;"	d
thisenv	obj/user/primespipe.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^    thisenv = &envs[ENVX(sys_getenvid())]; $/;"	d
thisenv	obj/user/sendpage.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^    thisenv = &envs[ENVX(sys_getenvid())]; $/;"	d
thisenv	obj/user/sh.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^    thisenv = &envs[ENVX(sys_getenvid())]; $/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spawnfaultio.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spawnhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^    thisenv = &envs[ENVX(sys_getenvid())]; $/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^    thisenv = &envs[ENVX(sys_getenvid())]; $/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^    thisenv = &envs[ENVX(sys_getenvid())]; $/;"	d
thisenv	obj/user/testfile.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testkbd.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^    thisenv = &envs[ENVX(sys_getenvid())]; $/;"	d
thisenv	obj/user/testpiperace.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^    thisenv = &envs[ENVX(sys_getenvid())]; $/;"	d
thisenv	obj/user/testpiperace2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^    thisenv = &envs[ENVX(sys_getenvid())]; $/;"	d
thisenv	obj/user/testpteshare.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^    thisenv = &envs[ENVX(sys_getenvid())]; $/;"	d
thisenv	obj/user/testshell.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^    thisenv = &envs[ENVX(sys_getenvid())]; $/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f	signature:(pde_t *pgdir, void *va)
tlb_invalidate	kern/pmap.h	/^void	tlb_invalidate(pde_t *pgdir, void *va);$/;"	p	signature:(pde_t *pgdir, void *va)
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f	signature:(void)
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
top	obj/user/primespipe.asm	/^top:$/;"	l
totalmem	obj/kern/kernel.asm	/^		totalmem = 1 * 1024 + extmem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = 16 * 1024 + ext16mem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = basemem;$/;"	d
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:	signature:(struct Trapframe *tf)
trap_init	kern/trap.c	/^trap_init(void)$/;"	f	signature:(void)
trap_init	kern/trap.h	/^void trap_init(void);$/;"	p	signature:(void)
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f	signature:(void)
trap_init_percpu	kern/trap.h	/^void trap_init_percpu(void);$/;"	p	signature:(void)
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:	signature:(int trapno)
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon5
try_open	obj/fs/fs.asm	/^try_open:$/;"	l
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
type	inc/partition.h	/^	uint8_t type;$/;"	m	struct:Partitiondesc	access:public
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:	access:public
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:	access:public
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	fs/serv.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	inc/lib.h	/^void	umain(int argc, char **argv);$/;"	p	signature:(int argc, char **argv)
umain	lib/libmain.c	/^extern void umain(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/cat.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/echo.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultio.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/icode.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/init.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/initsh.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/ls.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/lsfd.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/num.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/primespipe.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/sh.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/spawnfaultio.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/spawnhello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/spawninit.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testfdsharing.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testfile.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testkbd.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testmalloc.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testpipe.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testpiperace.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testpiperace2.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testptelibrary.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testpteshare.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testshell.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/writemotd.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
union	obj/fs/fs.asm	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	l
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f	signature:(void)
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned$/;"	l
usage	fs/fsformat.c	/^usage(void)$/;"	f	signature:(void)
usage	user/ls.c	/^usage(void)$/;"	f	signature:(void)
usage	user/lsfd.c	/^usage(void)$/;"	f	signature:(void)
usage	user/sh.c	/^usage(void)$/;"	f	signature:(void)
usefprint	obj/user/lsfd.asm	/^			usefprint = 1;$/;"	d
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_assert	kern/pmap.h	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	p	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check	kern/pmap.h	/^int	user_mem_check(struct Env *env, const void *va, size_t len, int perm);$/;"	p	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^      user_mem_check_addr = start < (uint32_t)va ? (uint32_t)va : start;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner	access:public
utf	obj/kern/kernel.asm	/^        utf = (struct UTrapframe *)(UXSTACKTOP - sizeof(struct UTrapframe));$/;"	d
utf	obj/kern/kernel.asm	/^        utf = (struct UTrapframe *)(tf->tf_esp-4-sizeof(struct UTrapframe)); $/;"	d
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe	access:public
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe	access:public
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe	access:public
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe	access:public
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe	access:public
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs	access:public
va	obj/fs/fs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va	obj/user/cat.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echo.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/icode.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/init.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/ls.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/lsfd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/num.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primespipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sh.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spawnfaultio.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spawnhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfdsharing.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfile.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testkbd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace.asm	/^	va = 0;$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpteshare.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testshell.asm	/^	va = fd2data(fd0);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_is_dirty	fs/bc.c	/^va_is_dirty(void *va)$/;"	f	signature:(void *va)
va_is_dirty	fs/fs.h	/^bool	va_is_dirty(void *va);$/;"	p	signature:(void *va)
va_is_mapped	fs/bc.c	/^va_is_mapped(void *va)$/;"	f	signature:(void *va)
va_is_mapped	fs/fs.h	/^bool	va_is_mapped(void *va);$/;"	p	signature:(void *va)
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vcprintf	inc/stdio.h	/^int	vcprintf(const char *fmt, va_list);$/;"	p	signature:(const char *fmt, va_list)
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	signature:(const char *fmt, va_list ap)
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	signature:(const char *fmt, va_list ap)
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:	access:public
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:	access:public
vfprintf	inc/stdio.h	/^int	vfprintf(int fd, const char *fmt, va_list);$/;"	p	signature:(int fd, const char *fmt, va_list)
vfprintf	lib/fprintf.c	/^vfprintf(int fd, const char *fmt, va_list ap)$/;"	f	signature:(int fd, const char *fmt, va_list ap)
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/fs/fs.asm	/^void *$/;"	l
void	obj/fs/fs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/fs/fs.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void sched_halt(void);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/cat.asm	/^void *$/;"	l
void	obj/user/cat.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/cat.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/echo.asm	/^void *$/;"	l
void	obj/user/echo.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echo.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultio.asm	/^void *$/;"	l
void	obj/user/faultio.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultio.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/icode.asm	/^void *$/;"	l
void	obj/user/icode.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/icode.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/init.asm	/^void *$/;"	l
void	obj/user/init.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/init.asm	/^void$/;"	l
void	obj/user/ls.asm	/^void *$/;"	l
void	obj/user/ls.asm	/^void ls1(const char*, bool, off_t, const char*);$/;"	l
void	obj/user/ls.asm	/^void lsdir(const char*, const char*);$/;"	l
void	obj/user/ls.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/ls.asm	/^void$/;"	l
void	obj/user/lsfd.asm	/^void *$/;"	l
void	obj/user/lsfd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/lsfd.asm	/^void$/;"	l
void	obj/user/num.asm	/^void *$/;"	l
void	obj/user/num.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/num.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/primespipe.asm	/^void *$/;"	l
void	obj/user/primespipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primespipe.asm	/^void$/;"	l
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
void	obj/user/sh.asm	/^void *$/;"	l
void	obj/user/sh.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sh.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spawnfaultio.asm	/^void *$/;"	l
void	obj/user/spawnfaultio.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spawnfaultio.asm	/^void$/;"	l
void	obj/user/spawnhello.asm	/^void *$/;"	l
void	obj/user/spawnhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spawnhello.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/testfdsharing.asm	/^void *$/;"	l
void	obj/user/testfdsharing.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfdsharing.asm	/^void$/;"	l
void	obj/user/testfile.asm	/^void *$/;"	l
void	obj/user/testfile.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfile.asm	/^void$/;"	l
void	obj/user/testkbd.asm	/^void *$/;"	l
void	obj/user/testkbd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testkbd.asm	/^void$/;"	l
void	obj/user/testpipe.asm	/^void *$/;"	l
void	obj/user/testpipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpipe.asm	/^void$/;"	l
void	obj/user/testpiperace.asm	/^void *$/;"	l
void	obj/user/testpiperace.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace.asm	/^void$/;"	l
void	obj/user/testpiperace2.asm	/^void *$/;"	l
void	obj/user/testpiperace2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace2.asm	/^void$/;"	l
void	obj/user/testpteshare.asm	/^void *$/;"	l
void	obj/user/testpteshare.asm	/^void childofspawn(void);$/;"	l
void	obj/user/testpteshare.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpteshare.asm	/^void$/;"	l
void	obj/user/testshell.asm	/^void *$/;"	l
void	obj/user/testshell.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testshell.asm	/^void wrong(int, int, int);$/;"	l
void	obj/user/testshell.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	inc/stdio.h	/^void	vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list)
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)
vsnprintf	inc/stdio.h	/^int	vsnprintf(char *str, int size, const char *fmt, va_list);$/;"	p	signature:(char *str, int size, const char *fmt, va_list)
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f	signature:(char *buf, int n, const char *fmt, va_list ap)
wait	gradelib.py	/^    def wait(self):$/;"	f	access:public
wait	inc/lib.h	/^void	wait(envid_t env);$/;"	p	signature:(envid_t env)
wait	lib/wait.c	/^wait(envid_t envid)$/;"	f	signature:(envid_t envid)
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f	signature:(void)
walk_path	fs/fs.c	/^walk_path(const char *path, struct File **pdir, struct File **pf, char *lastelem)$/;"	f	file:	signature:(const char *path, struct File **pdir, struct File **pf, char *lastelem)
want	obj/user/init.asm	/^	want = 0xf989e;$/;"	d
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
wfd	obj/user/primespipe.asm	/^	wfd = pfd[1];$/;"	d
wfd	obj/user/testshell.asm	/^	wfd = pfds[1];$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	obj/fs/fs.asm	/^				width = 0;$/;"	d
width	obj/fs/fs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/fs/fs.asm	/^		width = -1;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/cat.asm	/^				width = 0;$/;"	d
width	obj/user/cat.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/cat.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/echo.asm	/^				width = 0;$/;"	d
width	obj/user/echo.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echo.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultio.asm	/^				width = 0;$/;"	d
width	obj/user/faultio.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultio.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/icode.asm	/^				width = 0;$/;"	d
width	obj/user/icode.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/icode.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/init.asm	/^				width = 0;$/;"	d
width	obj/user/init.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/init.asm	/^		width = -1;$/;"	d
width	obj/user/ls.asm	/^				width = 0;$/;"	d
width	obj/user/ls.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/ls.asm	/^		width = -1;$/;"	d
width	obj/user/lsfd.asm	/^				width = 0;$/;"	d
width	obj/user/lsfd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/lsfd.asm	/^		width = -1;$/;"	d
width	obj/user/num.asm	/^				width = 0;$/;"	d
width	obj/user/num.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/num.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/primespipe.asm	/^				width = 0;$/;"	d
width	obj/user/primespipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primespipe.asm	/^		width = -1;$/;"	d
width	obj/user/sendpage.asm	/^				width = 0;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sendpage.asm	/^		width = -1;$/;"	d
width	obj/user/sh.asm	/^				width = 0;$/;"	d
width	obj/user/sh.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sh.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spawnfaultio.asm	/^				width = 0;$/;"	d
width	obj/user/spawnfaultio.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spawnfaultio.asm	/^		width = -1;$/;"	d
width	obj/user/spawnhello.asm	/^				width = 0;$/;"	d
width	obj/user/spawnhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spawnhello.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = 0;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^		width = -1;$/;"	d
width	obj/user/testfile.asm	/^				width = 0;$/;"	d
width	obj/user/testfile.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfile.asm	/^		width = -1;$/;"	d
width	obj/user/testkbd.asm	/^				width = 0;$/;"	d
width	obj/user/testkbd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testkbd.asm	/^		width = -1;$/;"	d
width	obj/user/testpipe.asm	/^				width = 0;$/;"	d
width	obj/user/testpipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpipe.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^		width = -1;$/;"	d
width	obj/user/testpteshare.asm	/^				width = 0;$/;"	d
width	obj/user/testpteshare.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpteshare.asm	/^		width = -1;$/;"	d
width	obj/user/testshell.asm	/^				width = 0;$/;"	d
width	obj/user/testshell.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testshell.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon3	file:	access:public
write	inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write	access:public
write	inc/lib.h	/^ssize_t	write(int fd, const void *buf, size_t nbytes);$/;"	p	signature:(int fd, const void *buf, size_t nbytes)
write	lib/fd.c	/^write(int fdnum, const void *buf, size_t n)$/;"	f	signature:(int fdnum, const void *buf, size_t n)
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	signature:(uint32_t eflags)
writebuf	lib/fprintf.c	/^writebuf(struct printbuf *b)$/;"	f	file:	signature:(struct printbuf *b)
writefile	fs/fsformat.c	/^writefile(struct Dir *dir, const char *name)$/;"	f	signature:(struct Dir *dir, const char *name)
wrong	user/testshell.c	/^void wrong(int, int, int);$/;"	p	file:	signature:(int, int, int)
wrong	user/testshell.c	/^wrong(int rfd, int kfd, int off)$/;"	f	signature:(int rfd, int kfd, int off)
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:	access:public
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f	signature:(volatile uint32_t *addr, uint32_t newval)
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:	access:public
xopen	user/testfile.c	/^xopen(const char *path, int mode)$/;"	f	file:	signature:(const char *path, int mode)
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
